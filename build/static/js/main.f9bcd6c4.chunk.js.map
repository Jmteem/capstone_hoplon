{"version":3,"sources":["components/MainNavbar/MainNavbar.js","components/AssistantPage/AssistantPage.js","APIService.js","urls.js","components/SetupPage/InstructorDialog/InstructorDialog.js","components/SetupPage/InstructorList/InstructorList.js","constants.js","components/SetupPage/SectionForm/SectionForm.js","components/SetupPage/ClassDialog/ClassDialog.js","components/SetupPage/ClassList/ClassList.js","components/SetupPage/SetupPage.js","components/LoginPage/LoginPage.js","StyleWrapper.js","App.js","reportWebVitals.js","index.js"],"names":["MainNavbar","AppBar","color","Toolbar","style","justifyContent","Typography","variant","width","fontWeight","fontStyle","Button","component","Link","to","defaultProps","generateCards","schedule","cards","count","option","push","Card","margin","CardContent","assignments","filter","assignment","instructor","length","issues","join","CardActions","IconButton","marginLeft","id","AssistantPage","theme","useTheme","palette","primary","Grid","container","alignItems","section","catchErrorResponse","response","status","Error","statusText","APIService","get","url","a","fetch","json","post","data","options","method","headers","body","JSON","stringify","put","toString","delete","API_URL","URL_DISCIPLINES","URL_INSTRUCTORS","URL_TIMESLOT","URL_CLASSES","URL_COURSES","InstructorForm","props","row","setRow","disciplines","useState","newQualification","setNewQualification","spacing","item","TextField","label","required","inputProps","maxLength","type","value","lastName","onChange","e","target","inputMode","pattern","maxSections","replace","select","minWidth","d","qualifications","findIndex","q","map","MenuItem","name","onClick","concat","xs","qual","Chip","onDelete","x","InstructorDialog","create","open","setOpen","setInstructors","instructorFormData","setInstructorFormData","title","close","useEffect","Dialog","onClose","fullWidth","maxWidth","DialogTitle","DialogContent","DialogActions","disabled","obj","then","instructors","error","console","log","rowIndex","instructorsCopy","slice","InstructorListItems","openEditDialog","listItems","ListItem","ListItemText","secondary","ListItemSecondaryAction","edge","i","errors","Divider","InstructorList","selected","setSelected","addOpen","setAddOpen","editOpen","setEditOpen","List","border","button","ListItemIcon","DayAbbrevToValue","SectionForm","classes","setClasses","selectedSection","setSelectedSection","selectedTimeSlot","setSelectedTimeSlot","meetingDays","begin_time","end_time","newTimeSlot","setNewTimeSlot","isNewTimeSlotInvalid","Object","keys","includes","updateSection","clss","cls","classesCopy","getTimeSlotRows","rows","meetingTimes","time","FormControlLabel","control","Radio","event","InputLabelProps","shrink","step","c","course","timeSlot","oldTimeSlot","mt","updatedSection","assign","addTimeSlotToSection","find","list","timeSlot_id","ts","removeTimeSlotFromSection","section_id","FormGroup","RadioGroup","parseInt","getSectionList","ClassForm","newDiscipline","setNewDiscipline","textAlign","course_title","course_number","subject_disciplines","marginTop","ClassDialog","setCourses","courseFormData","setCourseFormData","sd","courses","crs","coursesCopy","ClassListItems","classesOnCourse","meetingTimeStrings","meetingTimeString","ClassList","SetupPage","setDisciplines","direction","padding","orientation","flexItem","LoginPage","muiTheme","responsiveFontSizes","createTheme","main","styleWrapper","Component","className","path","element","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9bcd6c4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Link} from \"react-router-dom\";\n\nconst MainNavbar = () => (\n  <div data-testid=\"MainNavbar\">\n    <AppBar color={\"primary\"}>\n      <Toolbar style={{justifyContent: \"space-evenly\"}}>\n        <Typography variant=\"h2\" style={{width: '75%', fontWeight: \"bolder\", fontStyle: \"italic\"}}>\n          ADTAA\n        </Typography>\n        <Button color={\"default\"} variant={\"contained\"} component={Link} to={'/'}>Assistant</Button>\n        <Button color={\"default\"} variant={\"contained\"} component={Link} to={'/setup'}>Setup</Button>\n        <Button color={\"default\"} variant={\"contained\"} component={Link} to={'/login'}>Login</Button>\n      </Toolbar>\n    </AppBar>\n  </div>\n);\n\nMainNavbar.propTypes = {};\n\nMainNavbar.defaultProps = {};\n\nexport default MainNavbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from \"@material-ui/core/Typography\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\"\n\nconst generateCards = (schedule) => {\n  let cards = [];\n  let count = 1;\n  for (let option of schedule) {\n    cards.push(\n      <Card variant={\"outlined\"} key={option.id} style={{width: '20%', margin: '1em'}}>\n        <CardContent>\n          <Typography>Option {count}</Typography>\n          <Typography>Covered Classes: {option.assignments.filter(assignment => assignment.instructor != null).length}\n            /{option.assignments.length}\n          </Typography>\n          <Typography>Issues: {(option.issues.length > 0) ? option.issues.join(', ') : 'None'}</Typography>\n        </CardContent>\n        <CardActions>\n          <IconButton style={{marginLeft: \"auto\"}}>\n            <EditIcon />\n          </IconButton>\n        </CardActions>\n      </Card>\n    );\n    count += 1;\n  }\n  return cards;\n}\n\nconst AssistantPage = () => {\n  const theme = useTheme();\n\n  const dummySchedule = [\n    {assignments: [\n        {section: 'Section1', instructor: 'Smith'},\n        {section: 'Section2', instructor: 'Jones'},\n        {section: 'Section3', instructor: 'Smith'},\n        {section: 'Section4', instructor: 'Levett'},\n        {section: 'Section5', instructor: 'Levett'},\n      ], issues: ['Teacher teaching too many classes', 'Teacher teaching outside of disciplines'], id: 1},\n    {assignments: [\n        {section: 'Section1', instructor: 'Smith'},\n        {section: 'Section2', instructor: 'Jones'},\n        {section: 'Section3', instructor: 'Smith'},\n        {section: 'Section4', instructor: 'Levett'},\n        {section: 'Section5', instructor: null},\n      ], issues: ['Teacher teaching too many classes'], id: 2},\n    {assignments: [\n        {section: 'Section1', instructor: 'Smith'},\n        {section: 'Section2', instructor: 'Jones'},\n        {section: 'Section3', instructor: null},\n        {section: 'Section4', instructor: 'Levett'},\n        {section: 'Section5', instructor: null},\n      ], issues: ['Teacher teaching too many classes'], id: 3},\n    {assignments: [\n        {section: 'Section1', instructor: 'Smith'},\n        {section: 'Section2', instructor: 'Jones'},\n        {section: 'Section3', instructor: null},\n        {section: 'Section4', instructor: null},\n        {section: 'Section5', instructor: null},\n      ], issues: [], id: 4},\n    {assignments: [\n        {section: 'Section1', instructor: 'Smith'},\n        {section: 'Section2', instructor: null},\n        {section: 'Section3', instructor: null},\n        {section: 'Section4', instructor: null},\n        {section: 'Section5', instructor: null},\n      ], issues: [], id: 5},\n  ];\n\n  return (\n    <div data-testid=\"AssistantPage\">\n      <Typography variant=\"h3\" style={{color: theme.palette.primary, fontWeight: \"bold\"}}>\n        Generated Schedules\n      </Typography>\n      <Grid container alignItems={\"center\"} justifyContent={\"center\"}>\n        {generateCards(dummySchedule)}\n      </Grid>\n    </div>\n  );\n}\n\nAssistantPage.propTypes = {};\n\nAssistantPage.defaultProps = {};\n\nexport default AssistantPage;\n","function catchErrorResponse(response) {\n  if (response.status >= 400 && response.status < 600) {\n    throw new Error(response.statusText);\n  }\n}\n\nconst APIService = {\n  get: async (url) => {\n    const response = await fetch(url);\n    catchErrorResponse(response);\n    return response.json();\n  },\n\n  post: async (url, data) => {\n    const options = { method: 'POST', headers: {'Content-Type': 'application/json'}, body: JSON.stringify(data) };\n    const response = await fetch(url, options);\n    catchErrorResponse(response);\n    return response.json();\n  },\n\n  put: async (url, data) => {\n    const options = { method: 'PUT', headers: {'Content-Type': 'application/json'}, body: JSON.stringify(data) };\n    const response = await fetch(url + data.id.toString(), options);\n    catchErrorResponse(response);\n    return response.json();\n  },\n\n  delete: async (url, id) => {\n    const options = { method: 'DELETE' };\n    const response = await fetch(url + id.toString(), options);\n    catchErrorResponse(response);\n    return response;\n  }\n}\n\nexport default APIService;\n","export const API_URL = '/api/',\n  URL_DISCIPLINES = `${API_URL}discipline/`,\n  URL_INSTRUCTORS = `${API_URL}instructor/`,\n  URL_TIMESLOT = `${API_URL}timeslot/`,\n  URL_CLASSES = `${API_URL}section/`,\n  URL_COURSES = `${API_URL}course/`;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Chip from \"@material-ui/core/Chip\";\nimport APIService from \"../../../APIService\";\nimport {URL_INSTRUCTORS} from \"../../../urls\";\n\n\nconst InstructorForm = (props) => {\n  const { row, setRow, disciplines } = props;\n  const [newQualification, setNewQualification] = useState('');\n\n  const onLastNameChange = (e) => setRow({...row, lastName: e.target.value});\n  const onMaxSectionsChange = (e) => setRow({...row, maxSections: e.target.value.replace(/[^0-9]/g, '')});\n  const onNewQualificationChange = (e) => setNewQualification(e.target.value);\n  const onAddNewQualification = () => setRow({...row, qualifications: row.qualifications.concat([newQualification])});\n\n  const getDisciplineOptions = () => disciplines.filter(\n    d => row.qualifications.findIndex(q => q.id === d.id) < 0\n  );\n\n  return (\n    <Grid container alignItems={\"center\"} justifyContent={\"center\"} spacing={2}>\n      <Grid item>\n        <TextField id={\"lastNameInput\"} label={\"Last Name\"} required\n                   inputProps={{ maxLength: 30 }} type={\"text\"}\n                   value={row.lastName || ''} onChange={onLastNameChange} />\n      </Grid>\n      <Grid item>\n        <TextField id={\"maxSectionsInput\"} label={\"Max Sections\"} required\n                   inputProps={{ inputMode: 'numeric', pattern: '[0-9]*', maxLength: 2 }} type={\"text\"}\n                   value={row.maxSections || ''} onChange={onMaxSectionsChange} />\n      </Grid>\n      <Grid item>\n        <TextField id={\"qualificationsSelect\"} select label={\"Qualifications\"} style={{minWidth: 150}}\n                   value={newQualification} onChange={onNewQualificationChange}>\n          {getDisciplineOptions().map((option) => (\n            <MenuItem key={option.name} value={option}>\n              {option.name}\n            </MenuItem>\n          ))}\n        </TextField>\n      </Grid>\n      <Grid item>\n        <Button variant={\"contained\"} color={\"default\"} onClick={onAddNewQualification}>Add</Button>\n      </Grid>\n      <Grid item xs={12}>\n        {row.qualifications.map((qual) => (\n          <Chip label={qual.name}\n                onDelete={() => setRow({...row, qualifications: row.qualifications.filter(x => x.id !== qual.id)})} />\n        ))}\n      </Grid>\n    </Grid>\n  );\n}\n\n\nconst InstructorDialog = (props) => {\n  const { create, open, setOpen, row, disciplines, setInstructors } = props;\n  const [instructorFormData, setInstructorFormData] = useState(\n    {lastName: null, maxSections: null, qualifications: []});\n\n  const title = (create) ? 'Create Instructor' : 'Edit Instructor';\n\n  const close = () => setOpen(false);\n\n  const onSubmit = () => {\n    let data = {...instructorFormData, qualifications: instructorFormData.qualifications.map(obj => obj.id)};\n\n    if (create) {\n      APIService.post(URL_INSTRUCTORS, data).then((data) => {\n        setInstructors((instructors) => instructors.concat([data]));\n        setOpen(false);\n      }, (error) => console.log(error));\n    } else {\n      APIService.put(URL_INSTRUCTORS, data).then(() => {\n        setInstructors((instructors) => {\n          const rowIndex = instructors.findIndex(instructor => instructor.id === instructorFormData.id);\n          const instructorsCopy = instructors.slice(0);\n          instructorsCopy[rowIndex] = instructorFormData;\n          return instructorsCopy;\n        });\n        setOpen(false);\n      }, (error) => console.log(error));\n    }\n  }\n\n  useEffect(() => {\n    if (open && !create) {\n      setInstructorFormData(row);\n    } else if (open && create) {\n      setInstructorFormData({lastName: null, maxSections: null, qualifications: []});\n    }\n  }, [open]);\n\n  return (\n    <div data-testid=\"InstructorDialog\">\n      <Dialog open={open}\n              onClose={close}\n              aria-labelledby=\"instructor-dialog\"\n              fullWidth maxWidth={\"sm\"}>\n        <DialogTitle id=\"instructor-dialog\">{title}</DialogTitle>\n        <DialogContent>\n          <InstructorForm row={instructorFormData} setRow={setInstructorFormData} disciplines={disciplines} />\n        </DialogContent>\n        <DialogActions>\n          <Button variant={\"contained\"} onClick={close} color={\"default\"}>Cancel</Button>\n          <Button variant={\"contained\"} disabled={!instructorFormData.lastName || !instructorFormData.maxSections}\n                  onClick={onSubmit} color={\"primary\"}>Submit</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nInstructorDialog.propTypes = {};\n\nInstructorDialog.defaultProps = {};\n\nexport default InstructorDialog;\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport InstructorDialog from \"../InstructorDialog/InstructorDialog\";\nimport APIService from \"../../../APIService\";\nimport {URL_INSTRUCTORS} from \"../../../urls\";\n\nconst InstructorListItems = (instructors, setInstructors, openEditDialog) => {\n  let listItems = [];\n\n  for (let instructor of instructors) {\n    listItems.push(\n      <ListItem>\n        <ListItemText primary={instructor.lastName}\n                      secondary={'Assignment Limit: ' + instructor.maxSections.toString()} />\n        <ListItemSecondaryAction>\n          <IconButton edge={\"end\"} aria-label={\"edit-instructor\"} onClick={() => openEditDialog(instructor)}>\n            <EditIcon />\n          </IconButton>\n          <IconButton edge={\"end\"} aria-label={\"delete-instructor\"}\n                      onClick={() => {\n                        APIService.delete(URL_INSTRUCTORS, instructor.id).then(() => {\n                          setInstructors(instructors.filter(i => i.id !== instructor.id));\n                        }, (errors) => console.error(errors));\n                      }}>\n            <DeleteIcon />\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n    );\n    listItems.push(<Divider />);\n  }\n\n  return listItems;\n};\n\nconst InstructorList = (props) => {\n  const [selected, setSelected] = useState({});\n\n  const [addOpen, setAddOpen] = useState(false);\n  const openAddDialog = () => setAddOpen(true);\n  const [editOpen, setEditOpen] = useState(false);\n  const openEditDialog = (instructor) => {\n    setSelected(instructor);\n    setEditOpen(true);\n  };\n\n  return (\n    <div data-testid=\"InstructorList\">\n      <List style={{border: `1px #0000001f solid`}}>\n        {InstructorListItems(props.instructors, props.setInstructors, openEditDialog)}\n        <ListItem button onClick={openAddDialog}>\n          <ListItemIcon><AddIcon /></ListItemIcon>\n          <ListItemText primary={'Add New'} />\n        </ListItem>\n      </List>\n      <InstructorDialog create={true} open={addOpen} setOpen={setAddOpen}\n                        disciplines={props.disciplines} setInstructors={props.setInstructors} />\n      <InstructorDialog open={editOpen} setOpen={setEditOpen} row={selected}\n                        disciplines={props.disciplines} setInstructors={props.setInstructors} />\n    </div>\n  );\n};\n\nInstructorList.propTypes = {};\n\nInstructorList.defaultProps = {};\n\nexport default InstructorList;\n","export const DayAbbrevToValue = {\n  'Mon.': 'Monday', 'Tu.': 'Tuesday', 'Wed.': 'Wednesday', 'Th.': 'Thursday',\n  'Fri.': 'Friday', 'Sat.': 'Saturday', 'Sun.': 'Sunday'\n};\n","import React, {useState} from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {DayAbbrevToValue} from \"../../../constants\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ArrowDropDown from \"@material-ui/icons/ArrowDropDown\";\nimport ArrowRight from \"@material-ui/icons/ArrowRight\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport Button from \"@material-ui/core/Button\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Radio from \"@material-ui/core/Radio\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport APIService from \"../../../APIService\";\nimport {URL_CLASSES, URL_TIMESLOT} from \"../../../urls\";\n\n\nconst SectionForm = (props) => {\n  const { row, classes, setClasses } = props;\n  const [selectedSection, setSelectedSection] = useState(-1);\n  const [selectedTimeSlot, setSelectedTimeSlot] = useState(-1);\n  const [newTimeSlot, setNewTimeSlot] = useState({meetingDays: 'Sun.', begin_time: '', end_time: ''});\n\n  const selectSection = (id) => setSelectedSection(id);\n  const isNewTimeSlotInvalid = () => {\n    return !(Object.keys(DayAbbrevToValue).includes(newTimeSlot.meetingDays)) ||\n      (newTimeSlot.begin_time.length < 5) || (newTimeSlot.end_time.length < 5);\n  };\n\n  const createSection = (timeSlot) => {\n    APIService.post(URL_CLASSES, {course: row.id, meetingTimes: [timeSlot]})\n      .then(data => {\n        setClasses(clss => clss.concat([data]));\n      }, error => console.error(error));\n  };\n\n  const deleteSection = (section_id) => {\n    APIService.delete(URL_CLASSES, section_id).then(data => {\n      if (section_id === selectedSection) {\n        setSelectedSection(-1);\n      }\n      setClasses(classes.filter(c => c.id !== section_id));\n    }, error => console.error(error));\n  };\n\n  const updateSection = (section) => {\n    APIService.put(URL_CLASSES, section).then((data) => {\n      setClasses((clss) => {\n        const rowIndex = clss.findIndex(cls => cls.id === section.id);\n        const classesCopy = clss.slice(0);\n        classesCopy[rowIndex] = data;\n        return classesCopy;\n      });\n    }, (error) => console.error(error));\n  };\n\n  const addTimeSlotToSection = (timeSlot, section) => {\n    let updatedSection = Object.assign({}, section);\n    updatedSection.meetingTimes.push(timeSlot);\n    updateSection(updatedSection);\n  };\n\n  const removeTimeSlotFromSection = (timeSlot_id, section) => {\n    let updatedSection = Object.assign({}, section);\n    updatedSection.meetingTimes = updatedSection.meetingTimes.filter(ts => ts.id !== timeSlot_id);\n    updateSection(updatedSection);\n  };\n\n  const updateTimeSlot = (timeSlot) => {\n    APIService.put(URL_TIMESLOT, timeSlot).then(data => {\n      setClasses((clss) => {\n        const rowIndex = clss.findIndex(cls => cls.id === selectedSection);\n        const classesCopy = clss.slice(0);\n        const oldTimeSlot = classesCopy[rowIndex].meetingTimes.findIndex(mt => mt.id === timeSlot.id);\n        classesCopy[rowIndex].meetingTimes[oldTimeSlot] = data;\n        return classesCopy;\n      });\n    }, (error) => console.error(error));\n  }\n\n  const getIcon = (id) => {\n    if (selectedSection === id) {\n      return (<ListItemIcon><ArrowRight/></ListItemIcon>);\n    } else {\n      return (<ListItemIcon><ArrowDropDown/></ListItemIcon>);\n    }\n  };\n\n  const getTimeSlotRows = (cls) => {\n    if (cls.id !== selectedSection) return [];\n    let rows = [];\n    for (let time of cls.meetingTimes) {\n      const label = `${time.meetingDays} ${time.begin_time}-${time.end_time}`\n      rows.push((\n        <FormControlLabel value={time.id} label={label} control={<Radio />} />\n      ));\n    }\n    return rows;\n  };\n\n  const getSectionList = () => {\n    let list = [];\n    if (classes) {\n      list = classes.filter(cls => cls.course === row.id).map((cls) => (\n        <>\n          <ListItem button onClick={() => selectSection(cls.id)}>\n            {getIcon(cls.id)}\n            <ListItemText primary={`Section ${cls.id}`} secondary={`${cls.meetingTimes.length} time slot(s)`} />\n            <ListItemSecondaryAction>\n              <IconButton onClick={() => removeTimeSlotFromSection(selectedTimeSlot, cls)}\n                          disabled={selectedTimeSlot < 0}>\n                <RemoveIcon />\n              </IconButton>\n              <IconButton onClick={() => deleteSection(cls.id)}>\n                <DeleteIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n          <FormGroup>\n            <RadioGroup value={selectedTimeSlot}\n                        onChange={event => setSelectedTimeSlot(parseInt(event.target.value))}>\n              {getTimeSlotRows(cls)}\n            </RadioGroup>\n          </FormGroup>\n        </>\n      ))\n    }\n    return list;\n  };\n\n  return (\n    <Grid container alignItems={\"center\"} justifyContent={\"center\"} spacing={2}>\n      <Grid item xs={2}>\n        <TextField select label={\"Day\"} style={{minWidth: 60}} value={newTimeSlot.meetingDays}\n                   onChange={event => setNewTimeSlot({...newTimeSlot, meetingDays: event.target.value})}>\n          {Object.keys(DayAbbrevToValue).map((option) => (\n            <MenuItem key={option} value={option}>\n              {option}\n            </MenuItem>\n          ))}\n        </TextField>\n      </Grid>\n      <Grid item xs={4}>\n        <TextField label={\"Begin Time\"} type={\"time\"} value={newTimeSlot.begin_time}\n                   onChange={event => setNewTimeSlot({...newTimeSlot, begin_time: event.target.value})}\n                   InputLabelProps={{shrink: true}} inputProps={{step: 60}} fullWidth />\n      </Grid>\n      <Grid item xs={4}>\n        <TextField label={\"End Time\"} type={\"time\"} value={newTimeSlot.end_time}\n                   onChange={event => setNewTimeSlot({...newTimeSlot, end_time: event.target.value})}\n                   InputLabelProps={{shrink: true}} inputProps={{step: 60}} fullWidth />\n      </Grid>\n      {classes.filter(c => c.course === row.id).length > 0 &&\n      <Grid item>\n        <Button variant={\"contained\"} color={\"default\"}\n                disabled={selectedTimeSlot < 0 || isNewTimeSlotInvalid()}\n                onClick={() => updateTimeSlot({...newTimeSlot, id: selectedTimeSlot})}>\n          Change Selected Time\n        </Button>\n        <Button variant={\"contained\"} color={\"default\"}\n                disabled={selectedSection < 0 || isNewTimeSlotInvalid()}\n                onClick={() => addTimeSlotToSection(newTimeSlot, classes.find(c => c.id === selectedSection))}>\n          Add to Selected Section\n        </Button>\n      </Grid>\n      }\n      <Grid item>\n        <Button variant={\"contained\"} color={\"primary\"} disabled={isNewTimeSlotInvalid()}\n                onClick={() => createSection(newTimeSlot)}>Add to New Section</Button>\n      </Grid>\n      <Grid item xs={12}>\n        {getSectionList()}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default SectionForm;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Chip from \"@material-ui/core/Chip\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SectionForm from \"../SectionForm/SectionForm\";\nimport APIService from \"../../../APIService\";\nimport {URL_COURSES, URL_INSTRUCTORS} from \"../../../urls\";\n\n\nconst ClassForm = (props) => {\n  const { row, setRow, classes, setClasses, disciplines, create } = props;\n  const [newDiscipline, setNewDiscipline] = useState('');\n\n  const onNewDisciplineChange = (e) => setNewDiscipline(e.target.value);\n  const getDisciplineOptions = () => disciplines.filter(\n    d => row.subject_disciplines.findIndex(q => q.id === d.id) < 0\n  );\n  const onAddNewDiscipline = () =>\n    setRow({...row, subject_disciplines: row.subject_disciplines.concat([newDiscipline])});\n\n  return (\n    <>\n      <Typography variant={'h6'} style={{textAlign: \"center\"}}>Course</Typography>\n      <Grid container alignItems={\"center\"} justifyContent={\"center\"} spacing={2}>\n        <Grid item>\n          <TextField label={\"Course Title\"} required value={row.course_title || ''}\n                     inputProps={{ maxLength: 30 }} type={\"text\"}\n                     onChange={(e) => setRow({...row, course_title: e.target.value})} />\n        </Grid>\n        <Grid item>\n          <TextField label={\"Course Number\"} required value={row.course_number || ''}\n                     inputProps={{ inputMode: 'numeric', pattern: '[0-9]*', maxLength: 6 }} type={\"text\"}\n                     onChange={(e) => setRow({...row, course_number: e.target.value})}  />\n        </Grid>\n        <Grid item>\n          <TextField select label={\"Subject Disciplines\"} style={{minWidth: 160}}\n                     value={newDiscipline} onChange={onNewDisciplineChange}>\n            {getDisciplineOptions().map((option) => (\n              <MenuItem key={option.name} value={option}>\n                {option.name}\n              </MenuItem>\n            ))}\n          </TextField>\n        </Grid>\n        <Grid item>\n          <Button variant={\"contained\"} color={\"default\"} onClick={onAddNewDiscipline}>Add</Button>\n        </Grid>\n        <Grid item xs={12}>\n          {row.subject_disciplines.map((qual) => (\n            <Chip label={qual.name} onDelete={() =>\n              setRow({...row, subject_disciplines: row.subject_disciplines.filter(x => x.id !== qual.id)})} />\n          ))}\n        </Grid>\n      </Grid>\n      {!create &&\n        <>\n          <Typography variant={'h6'} style={{textAlign: \"center\", marginTop: \"1rem\"}}>Sections</Typography>\n          <SectionForm row={row} classes={classes} setClasses={setClasses} />\n        </>\n      }\n    </>\n\n  );\n};\n\n\nconst ClassDialog = (props) => {\n  const { create, open, setOpen, row, setCourses, classes, setClasses, disciplines, setSelected, setEditOpen } = props;\n  const [courseFormData, setCourseFormData] = useState(\n    {course_title: '', course_number: null, subject_disciplines: []});\n\n  const title = (create) ? 'Create Class' : 'Edit Class';\n\n  const isCourseFormValid = () => {\n    return !courseFormData.course_title || !courseFormData.course_number;\n  };\n\n  const close = () => setOpen(false);\n\n  const onSubmit = () => {\n    const data = {...courseFormData, subject_disciplines: courseFormData.subject_disciplines.map(sd => sd.id)};\n\n    if (create) {\n      APIService.post(URL_COURSES, data).then((data) => {\n        setCourses(courses => courses.concat([data]));\n        setSelected(data);\n        setOpen(false);\n        setEditOpen(true);\n      }, error => console.error(error));\n    } else {\n      APIService.put(URL_COURSES, data).then((data) => {\n        setCourses(courses => {\n          const rowIndex = courses.findIndex(crs => crs.id === courseFormData.id);\n          const coursesCopy = courses.slice(0);\n          coursesCopy[rowIndex] = courseFormData;\n          return coursesCopy;\n        });\n        setOpen(false);\n      }, error => console.error(error));\n    }\n  };\n\n  useEffect(() => {\n    if (open && !create) {\n      setCourseFormData(row);\n    } else if (open && create) {\n      setCourseFormData({course_title: '', course_number: null, subject_disciplines: []});\n    }\n  }, [open]);\n\n  return (\n    <div data-testid=\"ClassDialog\">\n      <Dialog open={open}\n              onClose={close}\n              aria-labelledby=\"instructor-dialog\"\n              fullWidth maxWidth={\"sm\"}>\n        <DialogTitle id=\"instructor-dialog\">{title}</DialogTitle>\n        <DialogContent>\n          <ClassForm row={courseFormData} setRow={setCourseFormData} classes={classes} setClasses={setClasses}\n                     disciplines={disciplines} create={create} />\n        </DialogContent>\n        <DialogActions>\n          <Button variant={\"contained\"} onClick={close} color={\"default\"}>Cancel</Button>\n          <Button variant={\"contained\"} onClick={onSubmit} color={\"primary\"}\n                  disabled={isCourseFormValid()}>Submit</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nClassDialog.propTypes = {};\n\nClassDialog.defaultProps = {};\n\nexport default ClassDialog;\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport List from \"@material-ui/core/List\";\nimport ClassDialog from \"../ClassDialog/ClassDialog\";\nimport APIService from \"../../../APIService\";\nimport {URL_COURSES} from \"../../../urls\";\n\nconst ClassListItems = (classes, courses, setCourses, openEditDialog) => {\n  let listItems = [];\n\n  for (let course of courses) {\n    const classesOnCourse = classes.filter(cls => cls.course === course.id);\n    const meetingTimeStrings = classesOnCourse.map(cls => cls.meetingTimeString);\n    listItems.push(\n      <ListItem>\n        <ListItemText primary={'CPSC ' + course.course_number + ' - ' + course.course_title}\n                      secondary={classesOnCourse.length.toString() + ' Section(s) - ' + meetingTimeStrings.join('; ')} />\n        <ListItemSecondaryAction>\n          <IconButton edge={\"end\"} onClick={() => openEditDialog(course)}>\n            <EditIcon />\n          </IconButton>\n          <IconButton edge={\"end\"}\n                      onClick={() => {\n                        APIService.delete(URL_COURSES, course.id).then(data => {\n                          setCourses(courses.filter(crs => crs.id !== course.id));\n                        }, error => console.error(error));\n                      }}>\n            <DeleteIcon />\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n    );\n    listItems.push(<Divider />);\n  }\n\n  return listItems;\n};\n\nconst ClassList = (props) => {\n  const [selected, setSelected] = useState({});\n\n  const [addOpen, setAddOpen] = useState(false);\n  const openAddDialog = () => setAddOpen(true);\n  const [editOpen, setEditOpen] = useState(false);\n  const openEditDialog = (course) => {\n    setSelected(course)\n    setEditOpen(true);\n  };\n\n  return (\n    <div data-testid=\"ClassList\">\n      <List style={{border: `1px #0000001f solid`}}>\n        {ClassListItems(props.classes, props.courses, props.setCourses, openEditDialog)}\n        <ListItem button onClick={openAddDialog}>\n          <ListItemIcon><AddIcon /></ListItemIcon>\n          <ListItemText primary={'Add New'} />\n        </ListItem>\n      </List>\n      <ClassDialog create={true} open={addOpen} setOpen={setAddOpen} setCourses={props.setCourses}\n                   disciplines={props.disciplines} setClasses={props.setClasses}\n                   setSelected={setSelected} setEditOpen={setEditOpen}/>\n      <ClassDialog open={editOpen} setOpen={setEditOpen} row={selected} setCourses={props.setCourses}\n                   disciplines={props.disciplines} classes={props.classes} setClasses={props.setClasses} />\n    </div>\n  );\n};\n\nClassList.propTypes = {};\n\nClassList.defaultProps = {};\n\nexport default ClassList;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InstructorList from \"./InstructorList/InstructorList\";\nimport ClassList from \"./ClassList/ClassList\";\nimport APIService from \"../../APIService\";\nimport {URL_CLASSES, URL_COURSES, URL_DISCIPLINES, URL_INSTRUCTORS} from \"../../urls\";\n\nconst SetupPage = () => {\n  const theme = useTheme();\n\n  const [disciplines, setDisciplines] = useState([]);\n  const [instructors, setInstructors] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [courses, setCourses] = useState([]);\n\n  const dummyCourses = [\n    {id: 1, course_title: 'Programming 1', course_number: '1134',\n      subject_disciplines: [{ id: 1, name: \"C++ Programming\" }, { id: 7, name: \"Programming Languages\" }]},\n    {id: 2, course_title: 'Programming 2', course_number: '2110',\n      subject_disciplines: [{ id: 1, name: \"C++ Programming\" }, { id: 7, name: \"Programming Languages\" }]},\n    {id: 3, course_title: 'Data Structures and Algorithms', course_number: '2350',\n      subject_disciplines: [{ id: 1, name: \"C++ Programming\" }, { id: 12, name: \"Theory of Computation\" },\n        { id: 4, name: \"Data Structures and Algorithms\" }]},\n    {id: 4, course_title: 'Artificial Intelligence', course_number: '4210',\n      subject_disciplines: [{ id: 2, name: \"Python Programming\" }, { id: 10, name: \"Artificial Intelligence\" }]},\n  ];\n\n  const dummyClasses = [\n    {id: 1, course_id: 1, course: {id: 1, course_title: 'Programming 1', course_number: '1134',\n        subject_disciplines: [{ id: 1, name: \"C++ Programming\" }, { id: 7, name: \"Programming Languages\" }]},\n      meetingTimeString: 'MW 9:25 AM - 10:50 AM', meetingTimes: [\n        {meetingDays: 'monday', begin_time: '9:25 AM', end_time: '10:50 AM'},\n        {meetingDays: 'wednesday', begin_time: '9:25 AM', end_time: '10:50 AM'}]},\n    {id: 2, course_id: 1, course: {id: 1, course_title: 'Programming 1', course_number: '1134',\n        subject_disciplines: [{ id: 1, name: \"C++ Programming\" }, { id: 7, name: \"Programming Languages\" }]},\n      meetingTimeString: 'TR 9:25 AM - 10:50 AM', meetingTimes: [\n      {meetingDays: 'tuesday', begin_time: '9:25 AM', end_time: '10:50 AM'},\n      {meetingDays: 'thursday', begin_time: '9:25 AM', end_time: '10:50 AM'}]},\n    {id: 3, course_id: 3, course: {id: 3, course_title: 'Data Structures and Algorithms', course_number: '2350',\n        subject_disciplines: [{ id: 1, name: \"C++ Programming\" }, { id: 12, name: \"Theory of Computation\" },\n          { id: 4, name: \"Data Structures and Algorithms\" }]},\n      meetingTimeString: 'TR 4:30 PM - 5:45 PM', meetingTimes: [\n        {meetingDays: 'tuesday', begin_time: '4:30 PM', end_time: '5:45 PM'},\n        {meetingDays: 'thursday', begin_time: '4:30 PM', end_time: '5:45 PM'}]},\n  ];\n\n  useEffect(() => {\n    APIService.get(URL_DISCIPLINES).then((data) => {\n      setDisciplines(data);\n    }, (error) => {\n      console.error(error);\n    });\n\n    APIService.get(URL_INSTRUCTORS).then((data) => {\n      setInstructors(data);\n    }, (error) => {\n      console.error(error);\n    });\n\n    APIService.get(URL_CLASSES).then((data) => {\n      setClasses(data);\n    }, (error) => {\n      console.error(error);\n    });\n\n    APIService.get(URL_COURSES).then((data) => {\n      setCourses(data);\n    }, (error) => console.error(error));\n  }, []);\n\n  return (\n    <div data-testid=\"SetupPage\">\n      <Grid container spacing={2} justifyContent={\"center\"}>\n        <Grid container item xs={5} direction={\"column\"}>\n          <Typography variant={\"h4\"} style={{color: theme.palette.primary, fontWeight: \"bold\"}}>\n            Teaching Staff\n          </Typography>\n          <div style={{padding: '1rem 5rem'}}>\n            <InstructorList instructors={instructors} setInstructors={setInstructors} disciplines={disciplines} />\n          </div>\n        </Grid>\n        <Divider orientation={\"vertical\"} flexItem />\n        <Grid container item xs={5} direction={\"column\"}>\n          <Typography variant={\"h4\"} style={{color: theme.palette.primary, fontWeight: \"bold\"}}>\n            Class Roster\n          </Typography>\n          <div style={{padding: '1rem 5rem'}}>\n            <ClassList classes={classes} setClasses={setClasses} courses={courses} setCourses={setCourses}\n                       disciplines={disciplines} />\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nSetupPage.propTypes = {};\n\nSetupPage.defaultProps = {};\n\nexport default SetupPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst LoginPage = () => (\n  <div data-testid=\"LoginPage\">\n    LoginPage Component\n  </div>\n);\n\nLoginPage.propTypes = {};\n\nLoginPage.defaultProps = {};\n\nexport default LoginPage;\n","import {createTheme, responsiveFontSizes} from \"@material-ui/core/styles\";\nimport React, {Component} from \"react\";\nimport {MuiThemeProvider} from \"@material-ui/core\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst muiTheme = responsiveFontSizes(createTheme({\n  palette: {\n    primary: {\n      main: '#800000'\n    }\n  }\n}));\n\nexport const styleWrapper = Component => props => {\n  return (\n    <MuiThemeProvider theme={muiTheme}>\n      <CssBaseline />\n      <Component {...props} />\n    </MuiThemeProvider>\n  );\n};\n","import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport MainNavbar from \"./components/MainNavbar/MainNavbar\";\nimport AssistantPage from \"./components/AssistantPage/AssistantPage\";\nimport SetupPage from \"./components/SetupPage/SetupPage\";\nimport LoginPage from \"./components/LoginPage/LoginPage\";\nimport {styleWrapper} from \"./StyleWrapper\";\nimport './App.css'\n\nfunction App() {\n  return (\n    <>\n      <MainNavbar/>\n      <div className={'content'}>\n        <Routes>\n          <Route path={'/'} element={<AssistantPage />} />\n          <Route path={'/setup'} element={<SetupPage />} />\n          <Route path={'/login'} element={<LoginPage />} />\n        </Routes>\n      </div>\n    </>\n  );\n}\n\nexport default styleWrapper(App);\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}