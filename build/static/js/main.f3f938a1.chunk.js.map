{"version":3,"sources":["auth.js","components/MainNavbar/MainNavbar.js","urls.js","APIService.js","components/Utility/text-styles.js","components/AssistantPage/AssistantPage.js","components/SetupPage/InstructorDialog/InstructorDialog.js","components/SetupPage/InstructorList/InstructorList.js","constants.js","components/SetupPage/SectionForm/SectionForm.js","components/SetupPage/ClassDialog/ClassDialog.js","components/SetupPage/ClassList/ClassList.js","components/SetupPage/SetupPage.js","components/LoginPage/LoginPage.js","StyleWrapper.js","components/AssistantPage/EditSolution/EditAssignmentDialog/EditAssignmentDialog.js","components/AssistantPage/EditSolution/EditSolution.js","App.js","reportWebVitals.js","index.js"],"names":["getToken","Cookies","get","clearToken","remove","saveToken","userToken","set","token","logout","window","location","reload","MainNavbar","AppBar","color","Toolbar","style","justifyContent","Typography","variant","width","fontWeight","fontStyle","Button","component","Link","to","onClick","defaultProps","API_URL","URL_DISCIPLINES","URL_INSTRUCTORS","URL_TIMESLOT","URL_CLASSES","URL_COURSES","URL_SOLUTIONS","URL_SOLUTION_CONSTRAINT_MAP","URL_AUTH","URL_CREATE_REGISTRATION_REQUEST","URL_CHANGE_PASSWORD","catchErrorResponse","response","status","Error","injectHeader","options","ignoreAuth","headers","addJsonHeader","method","APIService","authenticate","username","password","a","body","JSON","stringify","fetch","json","url","post","data","put","dataHasID","id","toString","type","delete","PageHeading","text","useTheme","palette","primary","marginBottom","UnauthorizedMessage","page","runSchedulerSection","schedule","instructors","sections","setSolutions","result","size","length","then","error","console","runScheduler","generateCards","cards","count","option","push","Card","margin","CardContent","assignment_count","assignments","CardActions","IconButton","marginLeft","AssistantPage","useState","unauthorized","setUnauthorized","loaded","setLoaded","solutions","setInstructors","setSections","handleError","message","useEffect","Promise","all","Map","map","obj","catch","CircularProgress","Grid","container","alignItems","slice","InstructorForm","props","row","setRow","disciplines","newQualification","setNewQualification","spacing","item","TextField","label","required","inputProps","maxLength","value","lastName","onChange","e","target","inputMode","pattern","maxSections","replace","select","minWidth","filter","d","qualifications","findIndex","q","MenuItem","name","concat","xs","qual","Chip","onDelete","x","InstructorDialog","create","open","setOpen","instructorFormData","setInstructorFormData","title","close","Dialog","onClose","fullWidth","maxWidth","DialogTitle","DialogContent","DialogActions","disabled","newRow","log","rowIndex","instructor","instructorsCopy","InstructorListItems","openEditDialog","listItems","ListItem","ListItemText","secondary","ListItemSecondaryAction","edge","i","errors","Divider","InstructorList","selected","setSelected","addOpen","setAddOpen","editOpen","setEditOpen","List","border","button","ListItemIcon","DayAbbrevToValue","SectionForm","classes","setClasses","selectedSection","setSelectedSection","selectedTimeSlot","setSelectedTimeSlot","meetingDays","begin_time","end_time","newTimeSlot","setNewTimeSlot","isNewTimeSlotInvalid","Object","keys","includes","updateSection","section","clss","cls","classesCopy","getTimeSlotRows","rows","meetingTimes","time","FormControlLabel","control","Radio","event","InputLabelProps","shrink","step","c","course","timeSlot","oldTimeSlot","mt","updatedSection","assign","addTimeSlotToSection","find","list","timeSlot_id","ts","removeTimeSlotFromSection","section_id","FormGroup","RadioGroup","parseInt","getSectionList","ClassForm","newDiscipline","setNewDiscipline","textAlign","course_title","course_number","subject_disciplines","marginTop","ClassDialog","setCourses","courseFormData","setCourseFormData","sd","newCourse","courses","crs","coursesCopy","ClassListItems","classesOnCourse","meetingTimeStrings","meetingTimeString","join","ClassList","SetupPage","setDisciplines","direction","padding","orientation","flexItem","LoginForm","setUsername","setPassword","RegisterForm","accessLevels","setAccessLevel","LoginPage","isLoginForm","setIsLoginForm","accessLevel","marginRight","new_password","contact_email","requested_password","access_level","muiTheme","responsiveFontSizes","createTheme","main","EditAssignmentDialog","setSchedule","sectionOverlapMap","disciplineMap","selectedInstructor","setSelectedInstructor","Array","from","values","newScheduleAssignments","replaceIndex","as","newSchedule","EditSolution","solution","setSolution","editedSolution","setEditedSolution","setSectionOverlapMap","setDisciplineMap","editDialogOpen","setEditDialogOpen","editRow","setEditRow","solution_id","useParams","columns","field","headerName","hide","flex","renderCell","cellValues","isDataPopulated","section_overlap_map","discipline_overlap_map","display","flexDirection","height","assignment","instructor_name","instructor_lastName","getTableData","autoPageSize","styleWrapper","Component","className","path","element","theme","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3f938a1.chunk.js","sourcesContent":["import Cookies from 'js-cookie';\r\n\r\nconst getToken = () => {\r\n  return Cookies.get('token');\r\n};\r\n\r\nconst clearToken = () => {\r\n  Cookies.remove('token');\r\n};\r\n\r\nconst saveToken = (userToken) => {\r\n  Cookies.set('token', userToken.token);\r\n};\r\n\r\nexport { getToken, clearToken, saveToken };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {clearToken, getToken} from \"../../auth\";\r\n\r\nconst logout = () => {\r\n  clearToken();\r\n  window.location.reload(false);\r\n};\r\n\r\nconst MainNavbar = () => (\r\n  <div data-testid=\"MainNavbar\">\r\n    <AppBar color={\"primary\"}>\r\n      <Toolbar style={{justifyContent: \"space-evenly\"}}>\r\n        <Typography variant=\"h2\" style={{width: '75%', fontWeight: \"bolder\", fontStyle: \"italic\"}}>\r\n          ADTAA\r\n        </Typography>\r\n        <Button color={\"default\"} variant={\"contained\"} component={Link} to={'/'}>Assistant</Button>\r\n        <Button color={\"default\"} variant={\"contained\"} component={Link} to={'/setup'}>Setup</Button>\r\n        {getToken() ?\r\n          <Button color={\"default\"} variant={\"contained\"} onClick={logout}>Logout</Button> :\r\n          <Button color={\"default\"} variant={\"contained\"} component={Link} to={'/login'}>Login</Button>\r\n        }\r\n      </Toolbar>\r\n    </AppBar>\r\n  </div>\r\n);\r\n\r\nMainNavbar.propTypes = {};\r\n\r\nMainNavbar.defaultProps = {};\r\n\r\nexport default MainNavbar;\r\n","export const API_URL = '/api/',\r\n  URL_DISCIPLINES = `${API_URL}discipline/`,\r\n  URL_INSTRUCTORS = `${API_URL}instructor/`,\r\n  URL_TIMESLOT = `${API_URL}timeslot/`,\r\n  URL_CLASSES = `${API_URL}section/`,\r\n  URL_COURSES = `${API_URL}course/`,\r\n  URL_SOLUTIONS = `${API_URL}solution/`,\r\n  URL_SOLUTION_CONSTRAINT_MAP = `${API_URL}solution/constraintmap/`,\r\n  URL_AUTH = `${API_URL}auth/token/`,\r\n  URL_CREATE_REGISTRATION_REQUEST = `${API_URL}registrationrequest/create/`,\r\n  URL_CHANGE_PASSWORD = `${API_URL}auth/changepassword/`;\r\n","import {clearToken, getToken} from \"./auth\";\r\nimport {URL_AUTH, URL_CREATE_REGISTRATION_REQUEST} from \"./urls\";\r\n\r\nfunction catchErrorResponse(response) {\r\n  if (response.status === 401 && getToken()) {\r\n    clearToken();\r\n  }\r\n\r\n  if (response.status >= 400 && response.status < 600) {\r\n    throw new Error(response.status);\r\n  }\r\n}\r\n\r\nconst injectHeader = (options, ignoreAuth=false) => {\r\n  let headers = {};\r\n\r\n  const addJsonHeader = options.method === 'POST' || options.method === 'PUT';\r\n  const token = getToken();\r\n\r\n  if (!addJsonHeader && !token) {\r\n    return options;\r\n  }\r\n\r\n  if (addJsonHeader) {\r\n    headers['Content-Type'] = 'application/json';\r\n  }\r\n  if (token && !ignoreAuth) {\r\n    headers['Authorization'] = `Token ${token}`;\r\n  }\r\n  options.headers = headers;\r\n\r\n  return options;\r\n};\r\n\r\nconst APIService = {\r\n  authenticate: async (username, password) => {\r\n    const options = {method: 'POST', body: JSON.stringify({username: username, password: password})};\r\n    const response = await fetch(URL_AUTH, injectHeader(options, true));\r\n    catchErrorResponse(response);\r\n    return response.json();\r\n  },\r\n\r\n  get: async (url) => {\r\n    const options = { method: 'GET' };\r\n    const response = await fetch(url, injectHeader(options));\r\n    catchErrorResponse(response);\r\n    return response.json();\r\n  },\r\n\r\n  post: async (url, data, ignoreAuth=false) => {\r\n    const options = { method: 'POST', body: JSON.stringify(data) };\r\n    const response = await fetch(url, injectHeader(options, ignoreAuth));\r\n    catchErrorResponse(response);\r\n    return response.json();\r\n  },\r\n\r\n  put: async (url, data, dataHasID=true) => {\r\n    const options = { method: 'PUT', body: JSON.stringify(data) };\r\n    if (dataHasID) url += data.id.toString();\r\n    const response = await fetch(url, injectHeader(options));\r\n    catchErrorResponse(response);\r\n    return (response.type === 'basic') ? response : response.json();\r\n  },\r\n\r\n  delete: async (url, id) => {\r\n    const options = { method: 'DELETE' };\r\n    const response = await fetch(url + id.toString(), injectHeader(options));\r\n    catchErrorResponse(response);\r\n    return response;\r\n  }\r\n}\r\n\r\nexport default APIService;\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\n\r\n\r\nconst PageHeading = (text, variant='h3') => (\r\n  <Typography variant={variant} style={{color: useTheme().palette.primary, fontWeight: \"bold\", marginBottom: \"0.5em\"}}>\r\n    {text}\r\n  </Typography>\r\n);\r\n\r\n\r\nconst UnauthorizedMessage = (page='current') => (\r\n  <Typography>\r\n    Your account is not authorized to access the {page} page. Only administrators can make changes to this information.\r\n    If you believe you should have access to this page, please contact an administrator or supervisor to correct this.\r\n  </Typography>\r\n);\r\n\r\n\r\nexport { PageHeading, UnauthorizedMessage };\r\n","import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditIcon from \"@material-ui/icons/Edit\"\r\nimport APIService from \"../../APIService\";\r\nimport {URL_CLASSES, URL_INSTRUCTORS, URL_SOLUTIONS} from \"../../urls\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {PageHeading, UnauthorizedMessage} from \"../Utility/text-styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst runScheduler = (setSolutions) => {\r\n  APIService.post(URL_SOLUTIONS).then((data) => {\r\n    if (data) {\r\n      setSolutions(data);\r\n    }\r\n  }, (error) => console.error(error));\r\n};\r\n\r\nconst runSchedulerSection = (schedule, instructors, sections, setSolutions) => {\r\n  let result = (<br />);\r\n\r\n  if ((instructors.size === 0 || instructors.size == null) || (sections.size === 0 || sections.size == null)) {\r\n    result = (\r\n      <>\r\n        <Typography>Welcome to ADTAA! To get started, classes and instructors must be defined to generate schedules\r\n          from. Please use the button below to go to the setup page.</Typography>\r\n        <br />\r\n        <Button color={\"primary\"} variant={\"contained\"} component={Link} to={'/setup'}>Go to Setup</Button>\r\n      </>\r\n    );\r\n  } else if (schedule.length === 0) {\r\n    result = (\r\n      <>\r\n        <Typography>No solutions have been generated.</Typography>\r\n        <br />\r\n        <Button variant={\"contained\"} color={\"primary\"} onClick={() => runScheduler(setSolutions)}>\r\n          Run Scheduler\r\n        </Button>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nconst generateCards = (schedule) => {\r\n  let cards = [];\r\n  let count = 1;\r\n\r\n  for (let option of schedule) {\r\n    cards.push(\r\n      <Card variant={\"outlined\"} key={option.id} style={{width: '20%', margin: '1em'}}>\r\n        <CardContent>\r\n          <Typography>Option {count}</Typography>\r\n          <Typography>Covered Classes: {option.assignment_count}/{option.assignments.length}</Typography>\r\n          {/*TODO: Dynamically detect issues*/}\r\n          <Typography>Issues: None</Typography>\r\n        </CardContent>\r\n        <CardActions>\r\n          <IconButton style={{marginLeft: \"auto\"}} component={Link} to={`/edit/${option.id}`}>\r\n            <EditIcon />\r\n          </IconButton>\r\n        </CardActions>\r\n      </Card>\r\n    );\r\n    count += 1;\r\n  }\r\n\r\n  return cards;\r\n}\r\n\r\nconst AssistantPage = () => {\r\n  const [unauthorized, setUnauthorized] = useState(false);\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  const [solutions, setSolutions] = useState([]);\r\n  const [instructors, setInstructors] = useState({});\r\n  const [sections, setSections] = useState({});\r\n\r\n  const handleError = (error) => {\r\n    if (error.message === '403') {\r\n      setUnauthorized(true);\r\n    } else {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const allPromise = Promise.all(\r\n      [APIService.get(URL_SOLUTIONS), APIService.get(URL_INSTRUCTORS), APIService.get(URL_CLASSES)]);\r\n\r\n    allPromise.then(data => {\r\n      setSolutions(data[0]);\r\n      setInstructors(new Map(data[1].map(obj => [obj.id, obj])));\r\n      setSections(new Map(data[2].map(obj => [obj.id, obj])));\r\n      setLoaded(true);\r\n    }).catch(handleError);\r\n  }, []);\r\n\r\n  if (unauthorized) {\r\n    return (\r\n      <div>\r\n        {PageHeading('Generated Schedules')}\r\n        {UnauthorizedMessage('scheduler')}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div data-testid=\"AssistantPage\">\r\n      {PageHeading('Generated Schedules')}\r\n      {(!loaded) ?\r\n        <CircularProgress /> :\r\n        runSchedulerSection(solutions, instructors, sections, setSolutions)\r\n      }\r\n      <Grid container alignItems={\"center\"} justifyContent={\"center\"}>\r\n        {generateCards(solutions.slice(0, 12))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nAssistantPage.propTypes = {};\r\n\r\nAssistantPage.defaultProps = {};\r\n\r\nexport default AssistantPage;\r\n","import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport APIService from \"../../../APIService\";\r\nimport {URL_INSTRUCTORS} from \"../../../urls\";\r\n\r\n\r\nconst InstructorForm = (props) => {\r\n  const { row, setRow, disciplines } = props;\r\n  const [newQualification, setNewQualification] = useState('');\r\n\r\n  const onLastNameChange = (e) => setRow({...row, lastName: e.target.value});\r\n  const onMaxSectionsChange = (e) => setRow({...row, maxSections: e.target.value.replace(/[^0-9]/g, '')});\r\n  const onNewQualificationChange = (e) => setNewQualification(e.target.value);\r\n  const onAddNewQualification = () => setRow({...row, qualifications: row.qualifications.concat([newQualification])});\r\n\r\n  const getDisciplineOptions = () => disciplines.filter(\r\n    d => row.qualifications.findIndex(q => q.id === d.id) < 0\r\n  );\r\n\r\n  return (\r\n    <Grid container alignItems={\"center\"} justifyContent={\"center\"} spacing={2}>\r\n      <Grid item>\r\n        <TextField id={\"lastNameInput\"} label={\"Last Name\"} required\r\n                   inputProps={{ maxLength: 30 }} type={\"text\"}\r\n                   value={row.lastName || ''} onChange={onLastNameChange} />\r\n      </Grid>\r\n      <Grid item>\r\n        <TextField id={\"maxSectionsInput\"} label={\"Max Sections\"} required\r\n                   inputProps={{ inputMode: 'numeric', pattern: '[0-9]*', maxLength: 2 }} type={\"text\"}\r\n                   value={row.maxSections || ''} onChange={onMaxSectionsChange} />\r\n      </Grid>\r\n      <Grid item>\r\n        <TextField id={\"qualificationsSelect\"} select label={\"Qualifications\"} style={{minWidth: 150}}\r\n                   value={newQualification} onChange={onNewQualificationChange}>\r\n          {getDisciplineOptions().map((option) => (\r\n            <MenuItem key={option.name} value={option}>\r\n              {option.name}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n      <Grid item>\r\n        <Button variant={\"contained\"} color={\"default\"} onClick={onAddNewQualification}>Add</Button>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        {row.qualifications.map((qual) => (\r\n          <Chip label={qual.name}\r\n                onDelete={() => setRow({...row, qualifications: row.qualifications.filter(x => x.id !== qual.id)})} />\r\n        ))}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\n\r\nconst InstructorDialog = (props) => {\r\n  const { create, open, setOpen, row, disciplines, setInstructors } = props;\r\n  const [instructorFormData, setInstructorFormData] = useState(\r\n    {lastName: null, maxSections: null, qualifications: []});\r\n\r\n  const title = (create) ? 'Create Instructor' : 'Edit Instructor';\r\n\r\n  const close = () => setOpen(false);\r\n\r\n  const onSubmit = () => {\r\n    let data = {...instructorFormData, qualifications: instructorFormData.qualifications.map(obj => obj.id)};\r\n\r\n    if (create) {\r\n      APIService.post(URL_INSTRUCTORS, data).then((newRow) => {\r\n        setInstructors((instructors) => instructors.concat(\r\n          [{...newRow, qualifications: instructorFormData.qualifications}])\r\n        );\r\n        setOpen(false);\r\n      }, (error) => console.log(error));\r\n    } else {\r\n      APIService.put(URL_INSTRUCTORS, data).then(() => {\r\n        setInstructors((instructors) => {\r\n          const rowIndex = instructors.findIndex(instructor => instructor.id === instructorFormData.id);\r\n          const instructorsCopy = instructors.slice(0);\r\n          instructorsCopy[rowIndex] = instructorFormData;\r\n          return instructorsCopy;\r\n        });\r\n        setOpen(false);\r\n      }, (error) => console.log(error));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (open && !create) {\r\n      setInstructorFormData(row);\r\n    } else if (open && create) {\r\n      setInstructorFormData({lastName: null, maxSections: null, qualifications: []});\r\n    }\r\n  }, [open]);\r\n\r\n  return (\r\n    <div data-testid=\"InstructorDialog\">\r\n      <Dialog open={open}\r\n              onClose={close}\r\n              aria-labelledby=\"instructor-dialog\"\r\n              fullWidth maxWidth={\"sm\"}>\r\n        <DialogTitle id=\"instructor-dialog\">{title}</DialogTitle>\r\n        <DialogContent>\r\n          <InstructorForm row={instructorFormData} setRow={setInstructorFormData} disciplines={disciplines} />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button variant={\"contained\"} onClick={close} color={\"default\"}>Cancel</Button>\r\n          <Button variant={\"contained\"} disabled={!instructorFormData.lastName || !instructorFormData.maxSections}\r\n                  onClick={onSubmit} color={\"primary\"}>Submit</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nInstructorDialog.propTypes = {};\r\n\r\nInstructorDialog.defaultProps = {};\r\n\r\nexport default InstructorDialog;\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport InstructorDialog from \"../InstructorDialog/InstructorDialog\";\r\nimport APIService from \"../../../APIService\";\r\nimport {URL_INSTRUCTORS} from \"../../../urls\";\r\n\r\nconst InstructorListItems = (instructors, setInstructors, openEditDialog) => {\r\n  let listItems = [];\r\n\r\n  for (let instructor of instructors) {\r\n    listItems.push(\r\n      <ListItem>\r\n        <ListItemText primary={instructor.lastName}\r\n                      secondary={'Assignment Limit: ' + instructor.maxSections.toString()} />\r\n        <ListItemSecondaryAction>\r\n          <IconButton edge={\"end\"} aria-label={\"edit-instructor\"} onClick={() => openEditDialog(instructor)}>\r\n            <EditIcon />\r\n          </IconButton>\r\n          <IconButton edge={\"end\"} aria-label={\"delete-instructor\"}\r\n                      onClick={() => {\r\n                        APIService.delete(URL_INSTRUCTORS, instructor.id).then(() => {\r\n                          setInstructors(instructors.filter(i => i.id !== instructor.id));\r\n                        }, (errors) => console.error(errors));\r\n                      }}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </ListItemSecondaryAction>\r\n      </ListItem>\r\n    );\r\n    listItems.push(<Divider />);\r\n  }\r\n\r\n  return listItems;\r\n};\r\n\r\nconst InstructorList = (props) => {\r\n  const [selected, setSelected] = useState({});\r\n\r\n  const [addOpen, setAddOpen] = useState(false);\r\n  const openAddDialog = () => setAddOpen(true);\r\n  const [editOpen, setEditOpen] = useState(false);\r\n  const openEditDialog = (instructor) => {\r\n    setSelected(instructor);\r\n    setEditOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div data-testid=\"InstructorList\">\r\n      <List style={{border: `1px #0000001f solid`}}>\r\n        {InstructorListItems(props.instructors, props.setInstructors, openEditDialog)}\r\n        <ListItem button onClick={openAddDialog}>\r\n          <ListItemIcon><AddIcon /></ListItemIcon>\r\n          <ListItemText primary={'Add New'} />\r\n        </ListItem>\r\n      </List>\r\n      <InstructorDialog create={true} open={addOpen} setOpen={setAddOpen}\r\n                        disciplines={props.disciplines} setInstructors={props.setInstructors} />\r\n      <InstructorDialog open={editOpen} setOpen={setEditOpen} row={selected}\r\n                        disciplines={props.disciplines} setInstructors={props.setInstructors} />\r\n    </div>\r\n  );\r\n};\r\n\r\nInstructorList.propTypes = {};\r\n\r\nInstructorList.defaultProps = {};\r\n\r\nexport default InstructorList;\r\n","export const DayAbbrevToValue = {\r\n  'Mon.': 'Monday', 'Tue.': 'Tuesday', 'Wed.': 'Wednesday', 'Thu.': 'Thursday',\r\n  'Fri.': 'Friday', 'Sat.': 'Saturday', 'Sun.': 'Sunday'\r\n};\r\n","import React, {useState} from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {DayAbbrevToValue} from \"../../../constants\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ArrowDropDown from \"@material-ui/icons/ArrowDropDown\";\r\nimport ArrowRight from \"@material-ui/icons/ArrowRight\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport APIService from \"../../../APIService\";\r\nimport {URL_CLASSES, URL_TIMESLOT} from \"../../../urls\";\r\n\r\n\r\nconst SectionForm = (props) => {\r\n  const { row, classes, setClasses } = props;\r\n  const [selectedSection, setSelectedSection] = useState(-1);\r\n  const [selectedTimeSlot, setSelectedTimeSlot] = useState(-1);\r\n  const [newTimeSlot, setNewTimeSlot] = useState({meetingDays: 'Sun.', begin_time: '', end_time: ''});\r\n\r\n  const selectSection = (id) => setSelectedSection(id);\r\n  const isNewTimeSlotInvalid = () => {\r\n    return !(Object.keys(DayAbbrevToValue).includes(newTimeSlot.meetingDays)) ||\r\n      (newTimeSlot.begin_time.length < 5) || (newTimeSlot.end_time.length < 5);\r\n  };\r\n\r\n  const createSection = (timeSlot) => {\r\n    APIService.post(URL_CLASSES, {course: row.id, meetingTimes: [timeSlot]})\r\n      .then(data => {\r\n        setClasses(clss => clss.concat([data]));\r\n      }, error => console.error(error));\r\n  };\r\n\r\n  const deleteSection = (section_id) => {\r\n    APIService.delete(URL_CLASSES, section_id).then(data => {\r\n      if (section_id === selectedSection) {\r\n        setSelectedSection(-1);\r\n      }\r\n      setClasses(classes.filter(c => c.id !== section_id));\r\n    }, error => console.error(error));\r\n  };\r\n\r\n  const updateSection = (section) => {\r\n    APIService.put(URL_CLASSES, section).then((data) => {\r\n      setClasses((clss) => {\r\n        const rowIndex = clss.findIndex(cls => cls.id === section.id);\r\n        const classesCopy = clss.slice(0);\r\n        classesCopy[rowIndex] = data;\r\n        return classesCopy;\r\n      });\r\n    }, (error) => console.error(error));\r\n  };\r\n\r\n  const addTimeSlotToSection = (timeSlot, section) => {\r\n    let updatedSection = Object.assign({}, section);\r\n    updatedSection.meetingTimes.push(timeSlot);\r\n    updateSection(updatedSection);\r\n  };\r\n\r\n  const removeTimeSlotFromSection = (timeSlot_id, section) => {\r\n    let updatedSection = Object.assign({}, section);\r\n    updatedSection.meetingTimes = updatedSection.meetingTimes.filter(ts => ts.id !== timeSlot_id);\r\n    updateSection(updatedSection);\r\n  };\r\n\r\n  const updateTimeSlot = (timeSlot) => {\r\n    APIService.put(URL_TIMESLOT, timeSlot).then(data => {\r\n      setClasses((clss) => {\r\n        const rowIndex = clss.findIndex(cls => cls.id === selectedSection);\r\n        const classesCopy = clss.slice(0);\r\n        const oldTimeSlot = classesCopy[rowIndex].meetingTimes.findIndex(mt => mt.id === timeSlot.id);\r\n        classesCopy[rowIndex].meetingTimes[oldTimeSlot] = data;\r\n        return classesCopy;\r\n      });\r\n    }, (error) => console.error(error));\r\n  }\r\n\r\n  const getIcon = (id) => {\r\n    if (selectedSection === id) {\r\n      return (<ListItemIcon><ArrowRight/></ListItemIcon>);\r\n    } else {\r\n      return (<ListItemIcon><ArrowDropDown/></ListItemIcon>);\r\n    }\r\n  };\r\n\r\n  const getTimeSlotRows = (cls) => {\r\n    if (cls.id !== selectedSection) return [];\r\n    let rows = [];\r\n    for (let time of cls.meetingTimes) {\r\n      const label = `${time.meetingDays} ${time.begin_time}-${time.end_time}`\r\n      rows.push((\r\n        <FormControlLabel value={time.id} label={label} control={<Radio />} />\r\n      ));\r\n    }\r\n    return rows;\r\n  };\r\n\r\n  const getSectionList = () => {\r\n    let list = [];\r\n    if (classes) {\r\n      list = classes.filter(cls => cls.course.id === row.id).map((cls) => (\r\n        <>\r\n          <ListItem button onClick={() => selectSection(cls.id)}>\r\n            {getIcon(cls.id)}\r\n            <ListItemText primary={`Section ${cls.id}`} secondary={`${cls.meetingTimes.length} time slot(s)`} />\r\n            <ListItemSecondaryAction>\r\n              <IconButton onClick={() => removeTimeSlotFromSection(selectedTimeSlot, cls)}\r\n                          disabled={selectedTimeSlot < 0}>\r\n                <RemoveIcon />\r\n              </IconButton>\r\n              <IconButton onClick={() => deleteSection(cls.id)}>\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n          <FormGroup>\r\n            <RadioGroup value={selectedTimeSlot}\r\n                        onChange={event => setSelectedTimeSlot(parseInt(event.target.value))}>\r\n              {getTimeSlotRows(cls)}\r\n            </RadioGroup>\r\n          </FormGroup>\r\n        </>\r\n      ))\r\n    }\r\n    return list;\r\n  };\r\n\r\n  return (\r\n    <Grid container alignItems={\"center\"} justifyContent={\"center\"} spacing={2}>\r\n      <Grid item xs={2}>\r\n        <TextField select label={\"Day\"} style={{minWidth: 60}} value={newTimeSlot.meetingDays}\r\n                   onChange={event => setNewTimeSlot({...newTimeSlot, meetingDays: event.target.value})}>\r\n          {Object.keys(DayAbbrevToValue).map((option) => (\r\n            <MenuItem key={option} value={option}>\r\n              {option}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField label={\"Begin Time\"} type={\"time\"} value={newTimeSlot.begin_time}\r\n                   onChange={event => setNewTimeSlot({...newTimeSlot, begin_time: event.target.value})}\r\n                   InputLabelProps={{shrink: true}} inputProps={{step: 60}} fullWidth />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField label={\"End Time\"} type={\"time\"} value={newTimeSlot.end_time}\r\n                   onChange={event => setNewTimeSlot({...newTimeSlot, end_time: event.target.value})}\r\n                   InputLabelProps={{shrink: true}} inputProps={{step: 60}} fullWidth />\r\n      </Grid>\r\n      {classes.filter(c => c.course.id === row.id).length > 0 &&\r\n      <Grid item>\r\n        <Button variant={\"contained\"} color={\"default\"}\r\n                disabled={selectedTimeSlot < 0 || isNewTimeSlotInvalid()}\r\n                onClick={() => updateTimeSlot({...newTimeSlot, id: selectedTimeSlot})}>\r\n          Change Selected Time\r\n        </Button>\r\n        <Button variant={\"contained\"} color={\"default\"}\r\n                disabled={selectedSection < 0 || isNewTimeSlotInvalid()}\r\n                onClick={() => addTimeSlotToSection(newTimeSlot, classes.find(c => c.id === selectedSection))}>\r\n          Add to Selected Section\r\n        </Button>\r\n      </Grid>\r\n      }\r\n      <Grid item>\r\n        <Button variant={\"contained\"} color={\"primary\"} disabled={isNewTimeSlotInvalid()}\r\n                onClick={() => createSection(newTimeSlot)}>Add to New Section</Button>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        {getSectionList()}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SectionForm;\r\n","import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport SectionForm from \"../SectionForm/SectionForm\";\r\nimport APIService from \"../../../APIService\";\r\nimport {URL_COURSES, URL_INSTRUCTORS} from \"../../../urls\";\r\n\r\n\r\nconst ClassForm = (props) => {\r\n  const { row, setRow, classes, setClasses, disciplines, create } = props;\r\n  const [newDiscipline, setNewDiscipline] = useState('');\r\n\r\n  const onNewDisciplineChange = (e) => setNewDiscipline(e.target.value);\r\n  const getDisciplineOptions = () => disciplines.filter(\r\n    d => row.subject_disciplines.findIndex(q => q.id === d.id) < 0\r\n  );\r\n  const onAddNewDiscipline = () =>\r\n    setRow({...row, subject_disciplines: row.subject_disciplines.concat([newDiscipline])});\r\n\r\n  return (\r\n    <>\r\n      <Typography variant={'h6'} style={{textAlign: \"center\"}}>Course</Typography>\r\n      <Grid container alignItems={\"center\"} justifyContent={\"center\"} spacing={2}>\r\n        <Grid item>\r\n          <TextField label={\"Course Title\"} required value={row.course_title || ''}\r\n                     inputProps={{ maxLength: 55 }} type={\"text\"}\r\n                     onChange={(e) => setRow({...row, course_title: e.target.value})} />\r\n        </Grid>\r\n        <Grid item>\r\n          <TextField label={\"Course Number\"} required value={row.course_number || ''}\r\n                     inputProps={{ inputMode: 'numeric', pattern: '[0-9]*', maxLength: 6 }} type={\"text\"}\r\n                     onChange={(e) => setRow({...row, course_number: e.target.value})}  />\r\n        </Grid>\r\n        <Grid item>\r\n          <TextField select label={\"Subject Disciplines\"} style={{minWidth: 160}}\r\n                     value={newDiscipline} onChange={onNewDisciplineChange}>\r\n            {getDisciplineOptions().map((option) => (\r\n              <MenuItem key={option.name} value={option}>\r\n                {option.name}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button variant={\"contained\"} color={\"default\"} onClick={onAddNewDiscipline}>Add</Button>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          {row.subject_disciplines.map((qual) => (\r\n            <Chip label={qual.name} onDelete={() =>\r\n              setRow({...row, subject_disciplines: row.subject_disciplines.filter(x => x.id !== qual.id)})} />\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n      {!create &&\r\n        <>\r\n          <Typography variant={'h6'} style={{textAlign: \"center\", marginTop: \"1rem\"}}>Sections</Typography>\r\n          <SectionForm row={row} classes={classes} setClasses={setClasses} />\r\n        </>\r\n      }\r\n    </>\r\n\r\n  );\r\n};\r\n\r\n\r\nconst ClassDialog = (props) => {\r\n  const { create, open, setOpen, row, setCourses, classes, setClasses, disciplines, setSelected, setEditOpen } = props;\r\n  const [courseFormData, setCourseFormData] = useState(\r\n    {course_title: '', course_number: null, subject_disciplines: []});\r\n\r\n  const title = (create) ? 'Create Class' : 'Edit Class';\r\n\r\n  const isCourseFormValid = () => {\r\n    return !courseFormData.course_title || !courseFormData.course_number;\r\n  };\r\n\r\n  const close = () => setOpen(false);\r\n\r\n  const onSubmit = () => {\r\n    const data = {...courseFormData, subject_disciplines: courseFormData.subject_disciplines.map(sd => sd.id)};\r\n\r\n    if (create) {\r\n      APIService.post(URL_COURSES, data).then((newRow) => {\r\n        const newCourse = {...newRow, subject_disciplines: courseFormData.subject_disciplines};\r\n        setCourses(courses => courses.concat([newCourse]));\r\n        setSelected(newCourse);\r\n        setOpen(false);\r\n        setEditOpen(true);\r\n      }, error => console.error(error));\r\n    } else {\r\n      APIService.put(URL_COURSES, data).then((data) => {\r\n        setCourses(courses => {\r\n          const rowIndex = courses.findIndex(crs => crs.id === courseFormData.id);\r\n          const coursesCopy = courses.slice(0);\r\n          coursesCopy[rowIndex] = courseFormData;\r\n          return coursesCopy;\r\n        });\r\n        setOpen(false);\r\n      }, error => console.error(error));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (open && !create) {\r\n      setCourseFormData(row);\r\n    } else if (open && create) {\r\n      setCourseFormData({course_title: '', course_number: null, subject_disciplines: []});\r\n    }\r\n  }, [open]);\r\n\r\n  return (\r\n    <div data-testid=\"ClassDialog\">\r\n      <Dialog open={open}\r\n              onClose={close}\r\n              aria-labelledby=\"instructor-dialog\"\r\n              fullWidth maxWidth={\"sm\"}>\r\n        <DialogTitle id=\"instructor-dialog\">{title}</DialogTitle>\r\n        <DialogContent>\r\n          <ClassForm row={courseFormData} setRow={setCourseFormData} classes={classes} setClasses={setClasses}\r\n                     disciplines={disciplines} create={create} />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button variant={\"contained\"} onClick={close} color={\"default\"}>Cancel</Button>\r\n          <Button variant={\"contained\"} onClick={onSubmit} color={\"primary\"}\r\n                  disabled={isCourseFormValid()}>Submit</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nClassDialog.propTypes = {};\r\n\r\nClassDialog.defaultProps = {};\r\n\r\nexport default ClassDialog;\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ClassDialog from \"../ClassDialog/ClassDialog\";\r\nimport APIService from \"../../../APIService\";\r\nimport {URL_COURSES} from \"../../../urls\";\r\n\r\nconst ClassListItems = (classes, courses, setCourses, openEditDialog) => {\r\n  let listItems = [];\r\n\r\n  for (let course of courses) {\r\n    const classesOnCourse = classes.filter(cls => cls.course === course.id);\r\n    const meetingTimeStrings = classesOnCourse.map(cls => cls.meetingTimeString);\r\n    listItems.push(\r\n      <ListItem>\r\n        <ListItemText primary={'CPSC ' + course.course_number + ' - ' + course.course_title}\r\n                      secondary={classesOnCourse.length.toString() + ' Section(s) - ' + meetingTimeStrings.join('; ')} />\r\n        <ListItemSecondaryAction>\r\n          <IconButton edge={\"end\"} onClick={() => openEditDialog(course)}>\r\n            <EditIcon />\r\n          </IconButton>\r\n          <IconButton edge={\"end\"}\r\n                      onClick={() => {\r\n                        APIService.delete(URL_COURSES, course.id).then(data => {\r\n                          setCourses(courses.filter(crs => crs.id !== course.id));\r\n                        }, error => console.error(error));\r\n                      }}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </ListItemSecondaryAction>\r\n      </ListItem>\r\n    );\r\n    listItems.push(<Divider />);\r\n  }\r\n\r\n  return listItems;\r\n};\r\n\r\nconst ClassList = (props) => {\r\n  const [selected, setSelected] = useState({});\r\n\r\n  const [addOpen, setAddOpen] = useState(false);\r\n  const openAddDialog = () => setAddOpen(true);\r\n  const [editOpen, setEditOpen] = useState(false);\r\n  const openEditDialog = (course) => {\r\n    setSelected(course)\r\n    setEditOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div data-testid=\"ClassList\">\r\n      <List style={{border: `1px #0000001f solid`}}>\r\n        {ClassListItems(props.classes, props.courses, props.setCourses, openEditDialog)}\r\n        <ListItem button onClick={openAddDialog}>\r\n          <ListItemIcon><AddIcon /></ListItemIcon>\r\n          <ListItemText primary={'Add New'} />\r\n        </ListItem>\r\n      </List>\r\n      <ClassDialog create={true} open={addOpen} setOpen={setAddOpen} setCourses={props.setCourses}\r\n                   disciplines={props.disciplines} setClasses={props.setClasses}\r\n                   setSelected={setSelected} setEditOpen={setEditOpen}/>\r\n      <ClassDialog open={editOpen} setOpen={setEditOpen} row={selected} setCourses={props.setCourses}\r\n                   disciplines={props.disciplines} classes={props.classes} setClasses={props.setClasses} />\r\n    </div>\r\n  );\r\n};\r\n\r\nClassList.propTypes = {};\r\n\r\nClassList.defaultProps = {};\r\n\r\nexport default ClassList;\r\n","import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport InstructorList from \"./InstructorList/InstructorList\";\r\nimport ClassList from \"./ClassList/ClassList\";\r\nimport APIService from \"../../APIService\";\r\nimport {URL_CLASSES, URL_COURSES, URL_DISCIPLINES, URL_INSTRUCTORS} from \"../../urls\";\r\nimport {PageHeading, UnauthorizedMessage} from \"../Utility/text-styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst SetupPage = () => {\r\n  const [unauthorized, setUnauthorized] = useState(false);\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  const [disciplines, setDisciplines] = useState([]);\r\n  const [instructors, setInstructors] = useState([]);\r\n  const [classes, setClasses] = useState([]);\r\n  const [courses, setCourses] = useState([]);\r\n\r\n  const handleError = (error) => {\r\n    if (error.message === '403') {\r\n      setUnauthorized(true);\r\n    } else {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const allPromise = Promise.all([APIService.get(URL_DISCIPLINES), APIService.get(URL_INSTRUCTORS),\r\n      APIService.get(URL_CLASSES), APIService.get(URL_COURSES)]);\r\n\r\n    allPromise.then(data => {\r\n      setDisciplines(data[0]);\r\n      setInstructors(data[1]);\r\n      setClasses(data[2]);\r\n      setCourses(data[3]);\r\n      setLoaded(true);\r\n    }, handleError);\r\n  }, []);\r\n\r\n  if (unauthorized) {\r\n    return (\r\n      <div>\r\n        {PageHeading('Setup Page')}\r\n        {UnauthorizedMessage('setup')}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div data-testid=\"SetupPage\">\r\n      <Grid container spacing={2} justifyContent={\"center\"}>\r\n        <Grid container item xs={5} direction={\"column\"}>\r\n          {PageHeading('Teaching Staff', 'h4')}\r\n          <div style={{padding: '1rem 5rem'}}>\r\n            {(!loaded) ?\r\n              <CircularProgress /> :\r\n              <InstructorList instructors={instructors} setInstructors={setInstructors} disciplines={disciplines} />}\r\n          </div>\r\n        </Grid>\r\n        <Divider orientation={\"vertical\"} flexItem />\r\n        <Grid container item xs={5} direction={\"column\"}>\r\n          {PageHeading('Class Roster', 'h4')}\r\n          <div style={{padding: '1rem 5rem'}}>\r\n            {(!loaded) ?\r\n              <CircularProgress /> :\r\n              <ClassList classes={classes} setClasses={setClasses} courses={courses}\r\n                         setCourses={setCourses} disciplines={disciplines} />}\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nSetupPage.propTypes = {};\r\n\r\nSetupPage.defaultProps = {};\r\n\r\nexport default SetupPage;\r\n","import React, {useEffect, useState} from 'react';\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {PageHeading} from \"../Utility/text-styles\";\r\nimport APIService from \"../../APIService\";\r\nimport {saveToken} from \"../../auth\";\r\nimport {URL_CHANGE_PASSWORD, URL_CREATE_REGISTRATION_REQUEST} from \"../../urls\";\r\n\r\nconst LoginForm = (setUsername, setPassword) => {\r\n  return (\r\n    <>\r\n      <Grid container alignItems={\"center\"} justifyContent={\"center\"} spacing={2}>\r\n        <Grid item xs={12}>\r\n          <TextField required label={\"Email\"} type={\"text\"} onChange={event => setUsername(event.target.value)} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField required label={\"Password\"} type={\"password\"} onChange={event => setPassword(event.target.value)} />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst RegisterForm = (accessLevels, setUsername, setPassword, setAccessLevel) => {\r\n  return (\r\n    <>\r\n      <Grid container alignItems={\"center\"} justifyContent={\"center\"} spacing={2}>\r\n        <Grid item xs={12}>\r\n          <TextField required label={\"Email\"} type={\"text\"}\r\n                     onChange={e => setUsername(e.target.value)} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField select label={\"Requested Access Level\"} style={{minWidth: 200}}\r\n                     onChange={e => setAccessLevel(e.target.value)}>\r\n            {accessLevels.map((option) => (\r\n              <MenuItem key={option} value={option}>\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField required label={\"Requested Password\"} type={\"password\"}\r\n                     onChange={e => setPassword(e.target.value)} />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst LoginPage = (props) => {\r\n  const theme = useTheme();\r\n\r\n  const [isLoginForm, setIsLoginForm] = useState(true);\r\n  const accessLevels = ['root', 'admin', 'assistant'];\r\n\r\n  const [username, setUsername] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [accessLevel, setAccessLevel] = useState();\r\n\r\n  const onSubmit = () => {\r\n    if (isLoginForm) {\r\n      APIService.authenticate(username, password).then((data) => {\r\n        saveToken(data);\r\n        window.location.reload(false);\r\n      }, (error) => {\r\n        if (error.message === '404') {\r\n          // This means that this is first user\r\n          APIService.put(URL_CHANGE_PASSWORD,\r\n            {username: 'root', password: 'root', new_password: password}, false).then(() => {\r\n            APIService.authenticate('root', password).then(data => {\r\n              saveToken(data);\r\n              window.location.reload(false);\r\n            }, (error) => console.error(error));\r\n          }, error => console.error(error));\r\n        } else {\r\n          console.error(error);\r\n        }\r\n      });\r\n    } else {\r\n      APIService.post(URL_CREATE_REGISTRATION_REQUEST,\r\n        {contact_email: username, requested_password: password, access_level: accessLevel}).then((data) => {\r\n        console.log(data);\r\n      }, (error) => console.error(error));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div data-testid=\"LoginPage\">\r\n      {PageHeading((isLoginForm) ? 'Login' : 'Submit Registration Request')}\r\n      {(isLoginForm) ?\r\n        LoginForm(setUsername, setPassword) :\r\n        RegisterForm(accessLevels, setUsername, setPassword, setAccessLevel)\r\n      }\r\n      <Button color={\"primary\"} variant={\"contained\"} style={{marginTop: '2em', marginRight: '1em'}}\r\n              onClick={onSubmit}>Submit</Button>\r\n      <Button color={\"default\"} variant={\"contained\"}\r\n              style={{marginTop: '2em'}}\r\n              onClick={() => setIsLoginForm(!isLoginForm)}>\r\n        {(isLoginForm) ? 'Register' : 'Return to Login'}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\nLoginPage.propTypes = {};\r\n\r\nLoginPage.defaultProps = {};\r\n\r\nexport default LoginPage;\r\n","import {createTheme, responsiveFontSizes} from \"@material-ui/core/styles\";\r\nimport React, {Component} from \"react\";\r\nimport {MuiThemeProvider} from \"@material-ui/core\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nconst muiTheme = responsiveFontSizes(createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#800000'\r\n    }\r\n  }\r\n}));\r\n\r\nexport const styleWrapper = Component => props => {\r\n  return (\r\n    <MuiThemeProvider theme={muiTheme}>\r\n      <CssBaseline />\r\n      <Component {...props} />\r\n    </MuiThemeProvider>\r\n  );\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nconst EditAssignmentDialog = (props) => {\r\n  const { open, setOpen, row, schedule, setSchedule, instructors, sectionOverlapMap, disciplineMap } = props;\r\n  const [selectedInstructor, setSelectedInstructor] = useState();\r\n\r\n  const close = () => setOpen(false);\r\n\r\n  const onInstructorSelect = (e) => {\r\n    setSelectedInstructor(e.target.value);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    let newScheduleAssignments = schedule.assignments;\r\n    const replaceIndex = newScheduleAssignments.findIndex(as => as.id === row.id);\r\n    newScheduleAssignments[replaceIndex].instructor = selectedInstructor;\r\n\r\n    const newSchedule = schedule;\r\n    schedule.assignments = newScheduleAssignments\r\n    setSchedule(newSchedule);\r\n    close();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (row != null) {\r\n      setSelectedInstructor(row.instructor);\r\n    }\r\n  }, [row]);\r\n\r\n\r\n  return (\r\n    <div data-testid=\"EditAssignmentDialog\">\r\n      <Dialog open={open} onClose={close}\r\n              fullWidth maxWidth={\"sm\"}>\r\n        <DialogTitle>Edit Assignment</DialogTitle>\r\n        <DialogContent>\r\n          {row != null &&\r\n            <>\r\n              <Typography style={{textAlign: \"center\", fontWeight: 'bold'}}>\r\n                {row.course_number} {row.course_title}</Typography>\r\n              <Typography style={{textAlign: \"center\"}}>\r\n                {row.meetingTimeString}</Typography>\r\n            </>\r\n          }\r\n          {instructors.size != null &&\r\n            <TextField select label={\"Instructor\"} style={{minWidth: 160}}\r\n                       value={selectedInstructor} onChange={onInstructorSelect}>\r\n              {Array.from(instructors.values()).map((instructor) => (\r\n                <MenuItem key={instructor.id} value={instructor.id}>\r\n                  {instructor.lastName}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          }\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button variant={\"contained\"} onClick={close}>Cancel</Button>\r\n          <Button variant={\"contained\"} color={\"primary\"}\r\n                  onClick={onSubmit} disabled={!selectedInstructor}>Submit</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nEditAssignmentDialog.propTypes = {};\r\n\r\nEditAssignmentDialog.defaultProps = {};\r\n\r\nexport default EditAssignmentDialog;\r\n","import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {PageHeading} from \"../../Utility/text-styles\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport APIService from \"../../../APIService\";\r\nimport {URL_CLASSES, URL_INSTRUCTORS, URL_SOLUTION_CONSTRAINT_MAP, URL_SOLUTIONS} from \"../../../urls\";\r\nimport {DataGrid} from \"@material-ui/data-grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport EditAssignmentDialog from \"./EditAssignmentDialog/EditAssignmentDialog\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\n\r\nconst EditSolution = () => {\r\n  const [solution, setSolution] = useState();\r\n  const [editedSolution, setEditedSolution] = useState();\r\n  const [instructors, setInstructors] = useState({});\r\n  const [sections, setSections] = useState({});\r\n  const [sectionOverlapMap, setSectionOverlapMap] = useState({});\r\n  const [disciplineMap, setDisciplineMap] = useState({});\r\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\r\n  const [editRow, setEditRow] = useState();\r\n\r\n  const { solution_id } = useParams();\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: 'ID', hide: true},\r\n    { field: 'course_title', headerName: 'Course', flex: 1},\r\n    { field: 'course_number', hide: true},\r\n    { field: 'meetingTimeString', headerName: 'Meeting Times', flex: 3},\r\n    { field: 'subject_disciplines', headerName: 'Subject Disciplines', hide: true},\r\n    { field: 'instructor_lastName', headerName: 'Assigned Instructor', flex: 1},\r\n    { field: 'Edit', renderCell: (cellValues) => {\r\n        return (\r\n          <IconButton onClick={() => {\r\n            setEditRow(cellValues.row);\r\n            setEditDialogOpen(true);\r\n          }}>\r\n            <EditIcon />\r\n          </IconButton>\r\n        );\r\n      }, flex: 0.5},\r\n  ];\r\n\r\n  const getTableData = (assignments) => {\r\n    let data = [];\r\n\r\n    if (sections.size !== 0 && sections.size != null) {\r\n      for (let assignment of assignments) {\r\n        const section = sections.get(assignment.section);\r\n\r\n        let instructor_name = 'Unassigned';\r\n        if (assignment.instructor != null) {\r\n          instructor_name = instructors.get(assignment.instructor).lastName;\r\n        }\r\n\r\n        if (section) {\r\n          data.push({id: assignment.id, course_title: section.course.course_title,\r\n            course_number: section.course.course_number, meetingTimeString: section.meetingTimeString,\r\n            instructor: assignment.instructor, instructor_lastName: instructor_name,\r\n            subject_disciplines: section.course.subject_disciplines});\r\n        }\r\n      }\r\n    }\r\n\r\n    return data;\r\n  };\r\n\r\n  const isDataPopulated = () => (solution != null && instructors.size != null && sections.size != null &&\r\n    Object.keys(sectionOverlapMap).length !== 0 && Object.keys(disciplineMap).length !== 0);\r\n\r\n  useEffect(() => {\r\n    APIService.get(URL_SOLUTIONS + solution_id.toString()).then((data) => {\r\n      setSolution(data);\r\n      setEditedSolution(data);\r\n    }, (error) => {\r\n      console.error(error);\r\n    });\r\n\r\n    APIService.get(URL_INSTRUCTORS).then((data) => {\r\n      setInstructors(new Map(data.map(obj => [obj.id, obj])));\r\n    }, (error) => {\r\n      console.error(error);\r\n    });\r\n\r\n    APIService.get(URL_CLASSES).then((data) => {\r\n      setSections(new Map(data.map(obj => [obj.id, obj])));\r\n    }, (error) => {\r\n      console.error(error);\r\n    });\r\n\r\n    APIService.get(URL_SOLUTION_CONSTRAINT_MAP).then((data) => {\r\n      setSectionOverlapMap(data.section_overlap_map);\r\n      setDisciplineMap(data.discipline_overlap_map);\r\n    }, (error) => console.error(error));\r\n  }, [solution_id]);\r\n\r\n\r\n  return (\r\n    <div data-testid=\"EditSolution\">\r\n      <div style={{marginBottom: '0.5rem', display: 'flex', flexDirection: 'row', justifyContent: 'space-between',\r\n        alignItems: 'flex-end', width: '80vw', marginLeft: 'auto', marginRight: 'auto'}}>\r\n        <Button variant={\"contained\"} style={{height: '36px'}} component={Link} to={'/'}>Cancel</Button>\r\n        {PageHeading('Edit Solution')}\r\n        <Button variant={\"contained\"} style={{height: '36px'}} color={\"primary\"}>Submit</Button>\r\n      </div>\r\n      <div style={{height: '80vh', width: '80vw', margin: 'auto'}}>\r\n        {(isDataPopulated()) ?\r\n          (<DataGrid rows={getTableData(editedSolution.assignments)} columns={columns} autoPageSize/>)\r\n          : (<p>Loading</p>)}\r\n      </div>\r\n      {isDataPopulated() &&\r\n        <EditAssignmentDialog open={editDialogOpen} setOpen={setEditDialogOpen} row={editRow} schedule={editedSolution}\r\n                              setSchedule={setEditedSolution} instructors={instructors}\r\n                              sectionOverlapMap={sectionOverlapMap} disciplineMap={disciplineMap} />\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nEditSolution.propTypes = {};\r\n\r\nEditSolution.defaultProps = {};\r\n\r\nexport default EditSolution;\r\n","import React from \"react\";\r\nimport { Routes, Route, Navigate } from \"react-router-dom\";\r\nimport MainNavbar from \"./components/MainNavbar/MainNavbar\";\r\nimport AssistantPage from \"./components/AssistantPage/AssistantPage\";\r\nimport SetupPage from \"./components/SetupPage/SetupPage\";\r\nimport LoginPage from \"./components/LoginPage/LoginPage\";\r\nimport {styleWrapper} from \"./StyleWrapper\";\r\nimport './App.css'\r\nimport EditSolution from \"./components/AssistantPage/EditSolution/EditSolution\";\r\nimport {getToken} from \"./auth\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <MainNavbar/>\r\n      <div className={'content'}>\r\n        <Routes>\r\n          <Route path={'/'} element={getToken() ? <AssistantPage /> : <Navigate to={\"/login\"} />} />\r\n          <Route path={'/edit/:solution_id'} element={getToken() ? <EditSolution /> : <Navigate to={\"/login\"} />} />\r\n          <Route path={'/setup'} element={getToken() ? <SetupPage /> : <Navigate to={\"/login\"} />} />\r\n          <Route path={'/login'} element={!getToken() ? <LoginPage /> : <Navigate to={\"/\"} />} />\r\n        </Routes>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default styleWrapper(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}