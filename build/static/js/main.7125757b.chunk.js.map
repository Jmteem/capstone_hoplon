{"version":3,"sources":["auth.js","components/MainNavbar/MainNavbar.js","urls.js","APIService.js","components/Utility/text-styles.js","components/AssistantPage/AssistantPage.js","components/SetupPage/InstructorDialog/InstructorDialog.js","components/SetupPage/InstructorList/InstructorList.js","constants.js","components/SetupPage/SectionForm/SectionForm.js","components/SetupPage/ClassDialog/ClassDialog.js","components/SetupPage/ClassList/ClassList.js","components/SetupPage/SetupPage.js","components/LoginPage/LoginPage.js","StyleWrapper.js","components/AssistantPage/EditSolution/EditAssignmentDialog/EditAssignmentDialog.js","components/AssistantPage/EditSolution/EditSolution.js","App.js","reportWebVitals.js","index.js"],"names":["getToken","Cookies","get","clearToken","remove","saveToken","userToken","set","token","logout","window","location","reload","MainNavbar","AppBar","color","Toolbar","style","justifyContent","Typography","variant","width","fontWeight","fontStyle","Button","component","Link","to","onClick","defaultProps","API_URL","URL_DISCIPLINES","URL_INSTRUCTORS","URL_TIMESLOT","URL_CLASSES","URL_COURSES","URL_SOLUTIONS","URL_SOLUTION_CONSTRAINT_MAP","URL_AUTH","URL_CREATE_REGISTRATION_REQUEST","URL_CHANGE_PASSWORD","URL_CHANGES","catchErrorResponse","response","status","Error","injectHeader","options","ignoreAuth","headers","addJsonHeader","method","APIService","authenticate","username","password","a","body","JSON","stringify","fetch","json","url","post","data","put","dataHasID","id","toString","delete","PageHeading","text","useTheme","palette","primary","marginBottom","UnauthorizedMessage","page","AssistantPage","useState","unauthorized","setUnauthorized","loaded","setLoaded","changes","setChanges","runningScheduler","setRunningScheduler","solutions","setSolutions","instructors","setInstructors","sections","setSections","constraintMap","setConstraintMap","runScheduler","then","error","console","finally","getConstraintViolations","schedule","assignmentViolations","disciplineViolations","overlapViolations","assignmentMap","forEach","instructor","assigned","assignments","filter","length","maxSections","map","section","assignment","discipline_overlap_map","includes","overlap","section_overlap_map","some","result","slice","handleError","message","useEffect","Promise","all","data_changed","catch","runSchedulerSection","CircularProgress","Card","margin","CardContent","CardActions","Grid","container","alignItems","cards","count","border","assignment_count","push","IconButton","marginLeft","generateCards","InstructorForm","props","row","setRow","disciplines","newQualification","setNewQualification","spacing","item","TextField","label","required","inputProps","maxLength","type","value","lastName","onChange","e","target","inputMode","pattern","replace","select","minWidth","d","qualifications","findIndex","q","option","MenuItem","name","concat","xs","qual","Chip","onDelete","x","InstructorDialog","create","open","setOpen","instructorFormData","setInstructorFormData","title","close","Dialog","onClose","fullWidth","maxWidth","DialogTitle","DialogContent","DialogActions","disabled","obj","newRow","log","rowIndex","instructorsCopy","InstructorListItems","openEditDialog","listItems","ListItem","ListItemText","secondary","ListItemSecondaryAction","edge","i","errors","Divider","InstructorList","selected","setSelected","addOpen","setAddOpen","editOpen","setEditOpen","List","button","ListItemIcon","DayAbbrevToValue","SectionForm","classes","setClasses","selectedSection","setSelectedSection","selectedTimeSlot","setSelectedTimeSlot","meetingDays","begin_time","end_time","newTimeSlot","setNewTimeSlot","isNewTimeSlotInvalid","Object","keys","updateSection","request","course","meetingTimes","clss","cls","classesCopy","getTimeSlotRows","rows","time","FormControlLabel","control","Radio","event","InputLabelProps","shrink","step","c","timeSlot","timeslot","oldTimeSlot","mt","meetingTimeString","updatedSection","assign","addTimeSlotToSection","find","list","timeSlot_id","ts","removeTimeSlotFromSection","section_id","FormGroup","RadioGroup","parseInt","getSectionList","ClassForm","newDiscipline","setNewDiscipline","textAlign","course_title","course_number","subject_disciplines","marginTop","ClassDialog","setCourses","courseFormData","setCourseFormData","sd","newCourse","courses","crs","coursesCopy","ClassListItems","classesOnCourse","meetingTimeStrings","join","ClassList","SetupPage","setDisciplines","direction","padding","orientation","flexItem","LoginForm","setUsername","setPassword","RegisterForm","accessLevels","setAccessLevel","LoginPage","isLoginForm","setIsLoginForm","accessLevel","marginRight","new_password","contact_email","requested_password","access_level","muiTheme","responsiveFontSizes","createTheme","main","EditAssignmentDialog","setSchedule","sectionOverlapMap","disciplineMap","selectedInstructor","setSelectedInstructor","size","Array","from","values","newScheduleAssignments","replaceIndex","as","newSchedule","EditSolution","solution","setSolution","editedSolution","setEditedSolution","setSectionOverlapMap","setDisciplineMap","editDialogOpen","setEditDialogOpen","editRow","setEditRow","solution_id","useParams","columns","field","headerName","hide","flex","renderCell","cellValues","isDataPopulated","Map","display","flexDirection","height","instructor_name","instructor_lastName","getTableData","autoPageSize","styleWrapper","Component","className","path","element","theme","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7125757b.chunk.js","sourcesContent":["import Cookies from 'js-cookie';\n\nconst getToken = () => {\n  return Cookies.get('token');\n};\n\nconst clearToken = () => {\n  Cookies.remove('token');\n};\n\nconst saveToken = (userToken) => {\n  Cookies.set('token', userToken.token);\n};\n\nexport { getToken, clearToken, saveToken };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Link} from \"react-router-dom\";\nimport {clearToken, getToken} from \"../../auth\";\n\nconst logout = () => {\n  clearToken();\n  window.location.reload(false);\n};\n\nconst MainNavbar = () => (\n  <div data-testid=\"MainNavbar\">\n    <AppBar color={\"primary\"}>\n      <Toolbar style={{justifyContent: \"space-evenly\"}}>\n        <Typography variant=\"h2\" style={{width: '75%', fontWeight: \"bolder\", fontStyle: \"italic\"}}>\n          ADTAA\n        </Typography>\n        <Button color={\"default\"} variant={\"contained\"} component={Link} to={'/'}>Assistant</Button>\n        <Button color={\"default\"} variant={\"contained\"} component={Link} to={'/setup'}>Setup</Button>\n        {getToken() ?\n          <Button color={\"default\"} variant={\"contained\"} onClick={logout}>Logout</Button> :\n          <Button color={\"default\"} variant={\"contained\"} component={Link} to={'/login'}>Login</Button>\n        }\n      </Toolbar>\n    </AppBar>\n  </div>\n);\n\nMainNavbar.propTypes = {};\n\nMainNavbar.defaultProps = {};\n\nexport default MainNavbar;\n","export const API_URL = '/api/',\n  URL_DISCIPLINES = `${API_URL}discipline/`,\n  URL_INSTRUCTORS = `${API_URL}instructor/`,\n  URL_TIMESLOT = `${API_URL}timeslot/`,\n  URL_CLASSES = `${API_URL}section/`,\n  URL_COURSES = `${API_URL}course/`,\n  URL_SOLUTIONS = `${API_URL}solution/`,\n  URL_SOLUTION_CONSTRAINT_MAP = `${API_URL}solution/constraintmap/`,\n  URL_AUTH = `${API_URL}auth/token/`,\n  URL_CREATE_REGISTRATION_REQUEST = `${API_URL}registrationrequest/create/`,\n  URL_CHANGE_PASSWORD = `${API_URL}auth/changepassword/`,\n  URL_CHANGES = `${API_URL}changes/`;\n","import {clearToken, getToken} from \"./auth\";\nimport {URL_AUTH, URL_CHANGE_PASSWORD} from \"./urls\";\n\nfunction catchErrorResponse(response) {\n  if (response.status === 401 && getToken()) {\n    clearToken();\n  }\n\n  if (response.status >= 400 && response.status < 600) {\n    throw new Error(response.status);\n  }\n}\n\nconst injectHeader = (options, ignoreAuth=false) => {\n  let headers = {};\n\n  const addJsonHeader = options.method === 'POST' || options.method === 'PUT';\n  const token = getToken();\n\n  if (!addJsonHeader && !token) {\n    return options;\n  }\n\n  if (addJsonHeader) {\n    headers['Content-Type'] = 'application/json';\n  }\n  if (token && !ignoreAuth) {\n    headers['Authorization'] = `Token ${token}`;\n  }\n  options.headers = headers;\n\n  return options;\n};\n\nconst APIService = {\n  authenticate: async (username, password) => {\n    const options = {method: 'POST', body: JSON.stringify({username: username, password: password})};\n    const response = await fetch(URL_AUTH, injectHeader(options, true));\n    catchErrorResponse(response);\n    return response.json();\n  },\n\n  get: async (url) => {\n    const options = { method: 'GET' };\n    const response = await fetch(url, injectHeader(options));\n    catchErrorResponse(response);\n    return response.json();\n  },\n\n  post: async (url, data, ignoreAuth=false) => {\n    const options = { method: 'POST', body: JSON.stringify(data) };\n    const response = await fetch(url, injectHeader(options, ignoreAuth));\n    catchErrorResponse(response);\n    return response.json();\n  },\n\n  put: async (url, data, dataHasID=true) => {\n    const options = { method: 'PUT', body: JSON.stringify(data) };\n    if (dataHasID) url += data.id.toString();\n    const response = await fetch(url, injectHeader(options));\n    catchErrorResponse(response);\n    return (url === URL_CHANGE_PASSWORD) ? response : response.json();\n  },\n\n  delete: async (url, id) => {\n    const options = { method: 'DELETE' };\n    const response = await fetch(url + id.toString(), injectHeader(options));\n    catchErrorResponse(response);\n    return response;\n  }\n}\n\nexport default APIService;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\n\n\nconst PageHeading = (text, variant='h3') => (\n  <Typography variant={variant} style={{color: useTheme().palette.primary, fontWeight: \"bold\", marginBottom: \"0.5em\"}}>\n    {text}\n  </Typography>\n);\n\n\nconst UnauthorizedMessage = (page='current') => (\n  <Typography>\n    Your account is not authorized to access the {page} page. Only administrators can make changes to this information.\n    If you believe you should have access to this page, please contact an administrator or supervisor to correct this.\n  </Typography>\n);\n\n\nexport { PageHeading, UnauthorizedMessage };\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\"\nimport APIService from \"../../APIService\";\nimport {URL_CHANGES, URL_CLASSES, URL_INSTRUCTORS, URL_SOLUTION_CONSTRAINT_MAP, URL_SOLUTIONS} from \"../../urls\";\nimport Button from \"@material-ui/core/Button\";\nimport {Link} from \"react-router-dom\";\nimport {PageHeading, UnauthorizedMessage} from \"../Utility/text-styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst AssistantPage = () => {\n  const [unauthorized, setUnauthorized] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  const [changes, setChanges] = useState(false);\n  const [runningScheduler, setRunningScheduler] = useState(false);\n\n  const [solutions, setSolutions] = useState([]);\n  const [instructors, setInstructors] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [constraintMap, setConstraintMap] = useState({});\n\n  const runScheduler = () => {\n    setLoaded(false);\n    setRunningScheduler(true);\n    setSolutions([]);\n    APIService.post(URL_SOLUTIONS).then((data) => {\n      if (data) {\n        setSolutions(data);\n      }\n    }, (error) => console.error(error)).finally(() => {\n      setLoaded(true);\n      setRunningScheduler(false);\n      setChanges(false);\n    });\n  };\n\n  const runSchedulerSection = () => {\n    let result = (<br />);\n\n    if (instructors.length === 0 || sections.length === 0) {\n      result = (\n        <>\n          <Typography>Welcome to ADTAA! To get started, classes and instructors must be defined to generate schedules\n            from. Please use the button below to go to the setup page.</Typography>\n          <br />\n          <Button color={\"primary\"} variant={\"contained\"} component={Link} to={'/setup'}>Go to Setup</Button>\n        </>\n      );\n    } else if (solutions.length === 0) {\n      result = (\n        <>\n          <Typography>No solutions have been generated.</Typography>\n          <br />\n          <Button variant={\"contained\"} color={\"primary\"} onClick={runScheduler}>\n            Run Scheduler\n          </Button>\n        </>\n      );\n    }\n\n    return result;\n  };\n\n  const getConstraintViolations = (schedule) => {\n    let assignmentViolations = 0;\n    let disciplineViolations = 0;\n    let overlapViolations = 0;\n\n    let assignmentMap = {};\n\n    instructors.forEach(instructor => {\n      const assigned = schedule.assignments.filter(a => a.instructor === instructor);\n      const count = assigned.length;\n      if (count > instructor.maxSections) {\n        assignmentViolations += 1;\n      }\n      assignmentMap[instructor.id] = assigned.map(a => a.section);\n    });\n\n    schedule.assignments.forEach(assignment => {\n      if (assignment.instructor != null) {\n        const approved = constraintMap.discipline_overlap_map[assignment.section];\n        if (!approved.includes(assignment.instructor)) {\n          disciplineViolations += 1;\n        }\n\n        const overlap = constraintMap.section_overlap_map[assignment.section];\n        if (assignmentMap[assignment.instructor].some(section => overlap.includes(section))) {\n          overlapViolations += 1;\n        }\n      }\n    });\n\n    let result = '';\n    if (assignmentViolations) result += `${assignmentViolations} instructors assigned over limit, `;\n    if (disciplineViolations) result += `${disciplineViolations} instructors teaching outside of their expertise, `;\n    if (overlapViolations) result += `${overlapViolations} instructors with schedule conflicts, `;\n    return (result.length > 0) ? result.slice(0, -2) : 'None';\n  }\n\n  const generateCards = () => {\n    let cards = [];\n    let count = 1;\n\n    for (let schedule of solutions.slice(0, 12)) {\n      const border = (schedule.assignment_count === schedule.assignments.length) ?\n        '5px #008800 solid' : '1px black solid';\n      cards.push(\n        <Card variant={\"outlined\"} key={schedule.id} style={{width: '20%', margin: '1em', border: border}}>\n          <CardContent>\n            <Typography>Option {count}</Typography>\n            <Typography>Covered Classes: {schedule.assignment_count}/{schedule.assignments.length}</Typography>\n            <Typography>Issues: {getConstraintViolations(schedule)}</Typography>\n          </CardContent>\n          <CardActions>\n            <IconButton style={{marginLeft: \"auto\"}} component={Link} to={`/edit/${schedule.id}`}>\n              <EditIcon />\n            </IconButton>\n          </CardActions>\n        </Card>\n      );\n      count += 1;\n    }\n\n    return cards;\n  }\n\n  const handleError = (error) => {\n    if (error.message === '403') {\n      setUnauthorized(true);\n    } else {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    const allPromise = Promise.all([\n      APIService.get(URL_SOLUTIONS), APIService.get(URL_INSTRUCTORS), APIService.get(URL_CLASSES),\n      APIService.get(URL_SOLUTION_CONSTRAINT_MAP), APIService.get(URL_CHANGES)\n    ]);\n\n    allPromise.then(data => {\n      setSolutions(data[0]);\n      setInstructors(data[1]);\n      setSections(data[2]);\n      setConstraintMap(data[3]);\n      setChanges(data[4].data_changed);\n      setLoaded(true);\n    }).catch(handleError);\n  }, []);\n\n  if (unauthorized) {\n    return (\n      <div>\n        {PageHeading('Generated Schedules')}\n        {UnauthorizedMessage('scheduler')}\n      </div>\n    );\n  }\n\n  return (\n    <div data-testid=\"AssistantPage\">\n      {PageHeading('Generated Schedules')}\n      {runningScheduler &&\n      <Typography>Please wait for the scheduler to finish, this step can take several minutes.</Typography>\n      }\n      {(!loaded) ?\n        <CircularProgress /> : runSchedulerSection()\n      }\n      {(loaded && changes && solutions.length > 0) &&\n        <Card variant={\"outlined\"} style={{margin: 'auto auto 1rem auto', width: '60%'}}>\n          <CardContent>\n            <Typography>These solutions were generated with data that has been modified, and could be invalid.\n              Click this button to re-run the scheduler!</Typography>\n          </CardContent>\n          <CardActions>\n            <Button variant={\"contained\"} color={\"primary\"} style={{margin: \"auto\"}}\n                    onClick={runScheduler}>Run Scheduler</Button>\n          </CardActions>\n        </Card>\n      }\n      {loaded &&\n        <Grid container alignItems={\"center\"} justifyContent={\"center\"}>\n          {generateCards()}\n        </Grid>\n      }\n    </div>\n  );\n}\n\nAssistantPage.propTypes = {};\n\nAssistantPage.defaultProps = {};\n\nexport default AssistantPage;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Chip from \"@material-ui/core/Chip\";\nimport APIService from \"../../../APIService\";\nimport {URL_INSTRUCTORS} from \"../../../urls\";\n\n\nconst InstructorForm = (props) => {\n  const { row, setRow, disciplines } = props;\n  const [newQualification, setNewQualification] = useState('');\n\n  const onLastNameChange = (e) => setRow({...row, lastName: e.target.value});\n  const onMaxSectionsChange = (e) => setRow({...row, maxSections: e.target.value.replace(/[^0-9]/g, '')});\n  const onNewQualificationChange = (e) => setNewQualification(e.target.value);\n  const onAddNewQualification = () => setRow({...row, qualifications: row.qualifications.concat([newQualification])});\n\n  const getDisciplineOptions = () => disciplines.filter(\n    d => row.qualifications.findIndex(q => q.id === d.id) < 0\n  );\n\n  return (\n    <Grid container alignItems={\"center\"} justifyContent={\"center\"} spacing={2}>\n      <Grid item>\n        <TextField id={\"lastNameInput\"} label={\"Last Name\"} required\n                   inputProps={{ maxLength: 30 }} type={\"text\"}\n                   value={row.lastName || ''} onChange={onLastNameChange} />\n      </Grid>\n      <Grid item>\n        <TextField id={\"maxSectionsInput\"} label={\"Max Sections\"} required\n                   inputProps={{ inputMode: 'numeric', pattern: '[0-9]*', maxLength: 2 }} type={\"text\"}\n                   value={row.maxSections || ''} onChange={onMaxSectionsChange} />\n      </Grid>\n      <Grid item>\n        <TextField id={\"qualificationsSelect\"} select label={\"Qualifications\"} style={{minWidth: 150}}\n                   value={newQualification} onChange={onNewQualificationChange}>\n          {getDisciplineOptions().map((option) => (\n            <MenuItem key={option.name} value={option}>\n              {option.name}\n            </MenuItem>\n          ))}\n        </TextField>\n      </Grid>\n      <Grid item>\n        <Button variant={\"contained\"} color={\"default\"} onClick={onAddNewQualification}>Add</Button>\n      </Grid>\n      <Grid item xs={12}>\n        {row.qualifications.map((qual) => (\n          <Chip label={qual.name}\n                onDelete={() => setRow({...row, qualifications: row.qualifications.filter(x => x.id !== qual.id)})} />\n        ))}\n      </Grid>\n    </Grid>\n  );\n}\n\n\nconst InstructorDialog = (props) => {\n  const { create, open, setOpen, row, disciplines, setInstructors } = props;\n  const [instructorFormData, setInstructorFormData] = useState(\n    {lastName: null, maxSections: null, qualifications: []});\n\n  const title = (create) ? 'Create Instructor' : 'Edit Instructor';\n\n  const close = () => setOpen(false);\n\n  const onSubmit = () => {\n    let data = {...instructorFormData, qualifications: instructorFormData.qualifications.map(obj => obj.id)};\n\n    if (create) {\n      APIService.post(URL_INSTRUCTORS, data).then((newRow) => {\n        setInstructors((instructors) => instructors.concat(\n          [{...newRow, qualifications: instructorFormData.qualifications}])\n        );\n        setOpen(false);\n      }, (error) => console.log(error));\n    } else {\n      APIService.put(URL_INSTRUCTORS, data).then(() => {\n        setInstructors((instructors) => {\n          const rowIndex = instructors.findIndex(instructor => instructor.id === instructorFormData.id);\n          const instructorsCopy = instructors.slice(0);\n          instructorsCopy[rowIndex] = instructorFormData;\n          return instructorsCopy;\n        });\n        setOpen(false);\n      }, (error) => console.log(error));\n    }\n  }\n\n  useEffect(() => {\n    if (open && !create) {\n      setInstructorFormData(row);\n    } else if (open && create) {\n      setInstructorFormData({lastName: null, maxSections: null, qualifications: []});\n    }\n  }, [open]);\n\n  return (\n    <div data-testid=\"InstructorDialog\">\n      <Dialog open={open}\n              onClose={close}\n              aria-labelledby=\"instructor-dialog\"\n              fullWidth maxWidth={\"sm\"}>\n        <DialogTitle id=\"instructor-dialog\">{title}</DialogTitle>\n        <DialogContent>\n          <InstructorForm row={instructorFormData} setRow={setInstructorFormData} disciplines={disciplines} />\n        </DialogContent>\n        <DialogActions>\n          <Button variant={\"contained\"} onClick={close} color={\"default\"}>Cancel</Button>\n          <Button variant={\"contained\"} disabled={!instructorFormData.lastName || !instructorFormData.maxSections}\n                  onClick={onSubmit} color={\"primary\"}>Submit</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nInstructorDialog.propTypes = {};\n\nInstructorDialog.defaultProps = {};\n\nexport default InstructorDialog;\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport InstructorDialog from \"../InstructorDialog/InstructorDialog\";\nimport APIService from \"../../../APIService\";\nimport {URL_INSTRUCTORS} from \"../../../urls\";\n\nconst InstructorListItems = (instructors, setInstructors, openEditDialog) => {\n  let listItems = [];\n\n  for (let instructor of instructors) {\n    listItems.push(\n      <ListItem key={instructor.id}>\n        <ListItemText primary={instructor.lastName}\n                      secondary={'Assignment Limit: ' + instructor.maxSections.toString()} />\n        <ListItemSecondaryAction>\n          <IconButton edge={\"end\"} aria-label={\"edit-instructor\"} onClick={() => openEditDialog(instructor)}>\n            <EditIcon />\n          </IconButton>\n          <IconButton edge={\"end\"} aria-label={\"delete-instructor\"}\n                      onClick={() => {\n                        APIService.delete(URL_INSTRUCTORS, instructor.id).then(() => {\n                          setInstructors(instructors.filter(i => i.id !== instructor.id));\n                        }, (errors) => console.error(errors));\n                      }}>\n            <DeleteIcon />\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n    );\n    listItems.push(<Divider key={`divider-${instructor.id}`} />);\n  }\n\n  return listItems;\n};\n\nconst InstructorList = (props) => {\n  const [selected, setSelected] = useState({});\n\n  const [addOpen, setAddOpen] = useState(false);\n  const openAddDialog = () => setAddOpen(true);\n  const [editOpen, setEditOpen] = useState(false);\n  const openEditDialog = (instructor) => {\n    setSelected(instructor);\n    setEditOpen(true);\n  };\n\n  return (\n    <div data-testid=\"InstructorList\">\n      <List style={{border: `1px #0000001f solid`}}>\n        {InstructorListItems(props.instructors, props.setInstructors, openEditDialog)}\n        <ListItem button onClick={openAddDialog} key={'addRow'}>\n          <ListItemIcon><AddIcon /></ListItemIcon>\n          <ListItemText primary={'Add New'} />\n        </ListItem>\n      </List>\n      <InstructorDialog create={true} open={addOpen} setOpen={setAddOpen}\n                        disciplines={props.disciplines} setInstructors={props.setInstructors} />\n      <InstructorDialog open={editOpen} setOpen={setEditOpen} row={selected}\n                        disciplines={props.disciplines} setInstructors={props.setInstructors} />\n    </div>\n  );\n};\n\nInstructorList.propTypes = {};\n\nInstructorList.defaultProps = {};\n\nexport default InstructorList;\n","export const DayAbbrevToValue = {\n  'Mon.': 'Monday', 'Tue.': 'Tuesday', 'Wed.': 'Wednesday', 'Thu.': 'Thursday',\n  'Fri.': 'Friday', 'Sat.': 'Saturday', 'Sun.': 'Sunday'\n};\n\nexport const timeslotToString = (timeslot) => {\n  return `${timeslot.meetingDays} ${timeslot.begin_time.slice(0, -3)}-${timeslot.end_time.slice(0, -3)}`;\n};\n","import React, {useState} from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {DayAbbrevToValue, timeslotToString} from \"../../../constants\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ArrowDropDown from \"@material-ui/icons/ArrowDropDown\";\nimport ArrowRight from \"@material-ui/icons/ArrowRight\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport Button from \"@material-ui/core/Button\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Radio from \"@material-ui/core/Radio\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport APIService from \"../../../APIService\";\nimport {URL_CLASSES, URL_TIMESLOT} from \"../../../urls\";\n\n\nconst SectionForm = (props) => {\n  const { row, classes, setClasses } = props;\n  const [selectedSection, setSelectedSection] = useState(-1);\n  const [selectedTimeSlot, setSelectedTimeSlot] = useState(-1);\n  const [newTimeSlot, setNewTimeSlot] = useState({meetingDays: 'Sun.', begin_time: '', end_time: ''});\n\n  const selectSection = (id) => setSelectedSection(id);\n  const isNewTimeSlotInvalid = () => {\n    return !(Object.keys(DayAbbrevToValue).includes(newTimeSlot.meetingDays)) ||\n      (newTimeSlot.begin_time.length < 5) || (newTimeSlot.end_time.length < 5);\n  };\n\n  const createSection = (timeSlot) => {\n    APIService.post(URL_CLASSES, {course: row.id, meetingTimes: [timeSlot]})\n      .then(data => {\n        console.log(data);\n        console.log(classes);\n        setClasses(clss => clss.concat([data]));\n      }, error => console.error(error));\n  };\n\n  const deleteSection = (section_id) => {\n    APIService.delete(URL_CLASSES, section_id).then(data => {\n      if (section_id === selectedSection) {\n        setSelectedSection(-1);\n      }\n      setClasses(classes.filter(c => c.id !== section_id));\n    }, error => console.error(error));\n  };\n\n  const updateSection = (section) => {\n    const request = {id: section.id, course: section.course.id, meetingTimes: section.meetingTimes};\n    APIService.put(URL_CLASSES, request).then((data) => {\n      setClasses((clss) => {\n        const rowIndex = clss.findIndex(cls => cls.id === section.id);\n        const classesCopy = clss.slice(0);\n        classesCopy[rowIndex] = data;\n        return classesCopy;\n      });\n    }, (error) => console.error(error));\n  };\n\n  const addTimeSlotToSection = (timeSlot, section) => {\n    let updatedSection = Object.assign({}, section);\n    updatedSection.meetingTimes.push(timeSlot);\n    updateSection(updatedSection);\n  };\n\n  const removeTimeSlotFromSection = (timeSlot_id, section) => {\n    let updatedSection = Object.assign({}, section);\n    updatedSection.meetingTimes = updatedSection.meetingTimes.filter(ts => ts.id !== timeSlot_id);\n    updateSection(updatedSection);\n  };\n\n  const updateTimeSlot = (timeSlot) => {\n    APIService.put(URL_TIMESLOT, timeSlot).then(data => {\n      setClasses((clss) => {\n        const rowIndex = clss.findIndex(cls => cls.id === selectedSection);\n        const classesCopy = clss.slice(0);\n        const oldTimeSlot = classesCopy[rowIndex].meetingTimes.findIndex(mt => mt.id === timeSlot.id);\n        classesCopy[rowIndex].meetingTimes[oldTimeSlot] = data;\n        classesCopy[rowIndex].meetingTimeString = timeslotToString(data);\n        return classesCopy;\n      });\n    }, (error) => console.error(error));\n  }\n\n  const getIcon = (id) => {\n    if (selectedSection === id) {\n      return (<ListItemIcon><ArrowRight/></ListItemIcon>);\n    } else {\n      return (<ListItemIcon><ArrowDropDown/></ListItemIcon>);\n    }\n  };\n\n  const getTimeSlotRows = (cls) => {\n    if (cls.id !== selectedSection) return [];\n    let rows = [];\n    for (let time of cls.meetingTimes) {\n      const label = `${time.meetingDays} ${time.begin_time}-${time.end_time}`\n      rows.push((\n        <FormControlLabel key={time.id} value={time.id} label={label} control={<Radio />} />\n      ));\n    }\n    return rows;\n  };\n\n  const getSectionList = () => {\n    let list = [];\n    if (classes) {\n      list = classes.filter(cls => cls.course.id === row.id).map((cls) => (\n        <div key={cls.id}>\n          <ListItem button onClick={() => selectSection(cls.id)}>\n            {getIcon(cls.id)}\n            <ListItemText primary={`Section ${cls.id}`} secondary={`${cls.meetingTimes.length} time slot(s)`} />\n            <ListItemSecondaryAction>\n              <IconButton onClick={() => removeTimeSlotFromSection(selectedTimeSlot, cls)}\n                          disabled={selectedTimeSlot < 0}>\n                <RemoveIcon />\n              </IconButton>\n              <IconButton onClick={() => deleteSection(cls.id)}>\n                <DeleteIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n          <FormGroup>\n            <RadioGroup value={selectedTimeSlot}\n                        onChange={event => setSelectedTimeSlot(parseInt(event.target.value))}>\n              {getTimeSlotRows(cls)}\n            </RadioGroup>\n          </FormGroup>\n        </div>\n      ))\n    }\n    return list;\n  };\n\n  return (\n    <Grid container alignItems={\"center\"} justifyContent={\"center\"} spacing={2}>\n      <Grid item xs={2}>\n        <TextField select label={\"Day\"} style={{minWidth: 60}} value={newTimeSlot.meetingDays}\n                   onChange={event => setNewTimeSlot({...newTimeSlot, meetingDays: event.target.value})}>\n          {Object.keys(DayAbbrevToValue).map((option) => (\n            <MenuItem key={option} value={option}>\n              {option}\n            </MenuItem>\n          ))}\n        </TextField>\n      </Grid>\n      <Grid item xs={4}>\n        <TextField label={\"Begin Time\"} type={\"time\"} value={newTimeSlot.begin_time}\n                   onChange={event => setNewTimeSlot({...newTimeSlot, begin_time: event.target.value})}\n                   InputLabelProps={{shrink: true}} inputProps={{step: 60}} fullWidth />\n      </Grid>\n      <Grid item xs={4}>\n        <TextField label={\"End Time\"} type={\"time\"} value={newTimeSlot.end_time}\n                   onChange={event => setNewTimeSlot({...newTimeSlot, end_time: event.target.value})}\n                   InputLabelProps={{shrink: true}} inputProps={{step: 60}} fullWidth />\n      </Grid>\n      {classes.filter(c => c.course.id === row.id).length > 0 &&\n      <Grid item>\n        <Button variant={\"contained\"} color={\"default\"}\n                disabled={selectedTimeSlot < 0 || isNewTimeSlotInvalid()}\n                onClick={() => updateTimeSlot({...newTimeSlot, id: selectedTimeSlot})}>\n          Change Selected Time\n        </Button>\n        <Button variant={\"contained\"} color={\"default\"}\n                disabled={selectedSection < 0 || isNewTimeSlotInvalid()}\n                onClick={() => addTimeSlotToSection(newTimeSlot, classes.find(c => c.id === selectedSection))}>\n          Add to Selected Section\n        </Button>\n      </Grid>\n      }\n      <Grid item>\n        <Button variant={\"contained\"} color={\"primary\"} disabled={isNewTimeSlotInvalid()}\n                onClick={() => createSection(newTimeSlot)}>Add to New Section</Button>\n      </Grid>\n      <Grid item xs={12}>\n        {getSectionList()}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default SectionForm;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Chip from \"@material-ui/core/Chip\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SectionForm from \"../SectionForm/SectionForm\";\nimport APIService from \"../../../APIService\";\nimport {URL_COURSES, URL_INSTRUCTORS} from \"../../../urls\";\n\n\nconst ClassForm = (props) => {\n  const { row, setRow, classes, setClasses, disciplines, create } = props;\n  const [newDiscipline, setNewDiscipline] = useState('');\n\n  const onNewDisciplineChange = (e) => setNewDiscipline(e.target.value);\n  const getDisciplineOptions = () => disciplines.filter(\n    d => row.subject_disciplines.findIndex(q => q.id === d.id) < 0\n  );\n  const onAddNewDiscipline = () =>\n    setRow({...row, subject_disciplines: row.subject_disciplines.concat([newDiscipline])});\n\n  return (\n    <>\n      <Typography variant={'h6'} style={{textAlign: \"center\"}}>Course</Typography>\n      <Grid container alignItems={\"center\"} justifyContent={\"center\"} spacing={2}>\n        <Grid item>\n          <TextField label={\"Course Title\"} required value={row.course_title || ''}\n                     inputProps={{ maxLength: 55 }} type={\"text\"}\n                     onChange={(e) => setRow({...row, course_title: e.target.value})} />\n        </Grid>\n        <Grid item>\n          <TextField label={\"Course Number\"} required value={row.course_number || ''}\n                     inputProps={{ inputMode: 'numeric', pattern: '[0-9]*', maxLength: 4 }} type={\"text\"}\n                     onChange={(e) => setRow({...row, course_number: e.target.value})}  />\n        </Grid>\n        <Grid item>\n          <TextField select label={\"Subject Disciplines\"} style={{minWidth: 160}}\n                     value={newDiscipline} onChange={onNewDisciplineChange}>\n            {getDisciplineOptions().map((option) => (\n              <MenuItem key={option.name} value={option}>\n                {option.name}\n              </MenuItem>\n            ))}\n          </TextField>\n        </Grid>\n        <Grid item>\n          <Button variant={\"contained\"} color={\"default\"} onClick={onAddNewDiscipline}>Add</Button>\n        </Grid>\n        <Grid item xs={12}>\n          {row.subject_disciplines.map((qual) => (\n            <Chip key={qual.id} label={qual.name} onDelete={() =>\n              setRow({...row, subject_disciplines: row.subject_disciplines.filter(x => x.id !== qual.id)})} />\n          ))}\n        </Grid>\n      </Grid>\n      {!create &&\n        <>\n          <Typography variant={'h6'} style={{textAlign: \"center\", marginTop: \"1rem\"}}>Sections</Typography>\n          <SectionForm row={row} classes={classes} setClasses={setClasses} />\n        </>\n      }\n    </>\n\n  );\n};\n\n\nconst ClassDialog = (props) => {\n  const { create, open, setOpen, row, setCourses, classes, setClasses, disciplines, setSelected, setEditOpen } = props;\n  const [courseFormData, setCourseFormData] = useState(\n    {course_title: '', course_number: null, subject_disciplines: []});\n\n  const title = (create) ? 'Create Class' : 'Edit Class';\n\n  const isCourseFormValid = () => {\n    return !courseFormData.course_title || !courseFormData.course_number;\n  };\n\n  const close = () => setOpen(false);\n\n  const onSubmit = () => {\n    const data = {...courseFormData, subject_disciplines: courseFormData.subject_disciplines.map(sd => sd.id)};\n\n    if (create) {\n      APIService.post(URL_COURSES, data).then((newRow) => {\n        const newCourse = {...newRow, subject_disciplines: courseFormData.subject_disciplines};\n        setCourses(courses => courses.concat([newCourse]));\n        setSelected(newCourse);\n        setOpen(false);\n        setEditOpen(true);\n      }, error => console.error(error));\n    } else {\n      APIService.put(URL_COURSES, data).then((data) => {\n        setCourses(courses => {\n          const rowIndex = courses.findIndex(crs => crs.id === courseFormData.id);\n          const coursesCopy = courses.slice(0);\n          coursesCopy[rowIndex] = courseFormData;\n          return coursesCopy;\n        });\n        setOpen(false);\n      }, error => console.error(error));\n    }\n  };\n\n  useEffect(() => {\n    if (open && !create) {\n      setCourseFormData(row);\n    } else if (open && create) {\n      setCourseFormData({course_title: '', course_number: null, subject_disciplines: []});\n    }\n  }, [open]);\n\n  return (\n    <div data-testid=\"ClassDialog\">\n      <Dialog open={open}\n              onClose={close}\n              aria-labelledby=\"instructor-dialog\"\n              fullWidth maxWidth={\"sm\"}>\n        <DialogTitle id=\"instructor-dialog\">{title}</DialogTitle>\n        <DialogContent>\n          <ClassForm row={courseFormData} setRow={setCourseFormData} classes={classes} setClasses={setClasses}\n                     disciplines={disciplines} create={create} />\n        </DialogContent>\n        <DialogActions>\n          <Button variant={\"contained\"} onClick={close} color={\"default\"}>Cancel</Button>\n          <Button variant={\"contained\"} onClick={onSubmit} color={\"primary\"}\n                  disabled={isCourseFormValid()}>Submit</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nClassDialog.propTypes = {};\n\nClassDialog.defaultProps = {};\n\nexport default ClassDialog;\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport List from \"@material-ui/core/List\";\nimport ClassDialog from \"../ClassDialog/ClassDialog\";\nimport APIService from \"../../../APIService\";\nimport {URL_COURSES} from \"../../../urls\";\n\nconst ClassListItems = (classes, courses, setCourses, openEditDialog) => {\n  let listItems = [];\n\n  for (let course of courses) {\n    const classesOnCourse = classes.filter(cls => cls.course.id === course.id);\n    const meetingTimeStrings = classesOnCourse.map(cls => cls.meetingTimeString);\n    listItems.push(\n      <ListItem key={course.id}>\n        <ListItemText primary={'CPSC ' + course.course_number + ' - ' + course.course_title}\n                      secondary={classesOnCourse.length.toString() + ' Section(s) - ' + meetingTimeStrings.join(' | ')} />\n        <ListItemSecondaryAction>\n          <IconButton edge={\"end\"} onClick={() => openEditDialog(course)}>\n            <EditIcon />\n          </IconButton>\n          <IconButton edge={\"end\"}\n                      onClick={() => {\n                        APIService.delete(URL_COURSES, course.id).then(data => {\n                          setCourses(courses => courses.filter(crs => crs.id !== course.id));\n                        }, error => console.error(error));\n                      }}>\n            <DeleteIcon />\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n    );\n    listItems.push(<Divider key={`divider-${course.id}`} />);\n  }\n\n  return listItems;\n};\n\nconst ClassList = (props) => {\n  const [selected, setSelected] = useState({});\n\n  const [addOpen, setAddOpen] = useState(false);\n  const openAddDialog = () => setAddOpen(true);\n  const [editOpen, setEditOpen] = useState(false);\n  const openEditDialog = (course) => {\n    setSelected(course)\n    setEditOpen(true);\n  };\n\n  return (\n    <div data-testid=\"ClassList\">\n      <List style={{border: `1px #0000001f solid`}}>\n        {ClassListItems(props.classes, props.courses, props.setCourses, openEditDialog)}\n        <ListItem button onClick={openAddDialog} key={'addRow'}>\n          <ListItemIcon><AddIcon /></ListItemIcon>\n          <ListItemText primary={'Add New'} />\n        </ListItem>\n      </List>\n      <ClassDialog create={true} open={addOpen} setOpen={setAddOpen} setCourses={props.setCourses}\n                   disciplines={props.disciplines} setClasses={props.setClasses}\n                   setSelected={setSelected} setEditOpen={setEditOpen}/>\n      <ClassDialog open={editOpen} setOpen={setEditOpen} row={selected} setCourses={props.setCourses}\n                   disciplines={props.disciplines} classes={props.classes} setClasses={props.setClasses} />\n    </div>\n  );\n};\n\nClassList.propTypes = {};\n\nClassList.defaultProps = {};\n\nexport default ClassList;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport InstructorList from \"./InstructorList/InstructorList\";\nimport ClassList from \"./ClassList/ClassList\";\nimport APIService from \"../../APIService\";\nimport {URL_CLASSES, URL_COURSES, URL_DISCIPLINES, URL_INSTRUCTORS} from \"../../urls\";\nimport {PageHeading, UnauthorizedMessage} from \"../Utility/text-styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst SetupPage = () => {\n  const [unauthorized, setUnauthorized] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n\n  const [disciplines, setDisciplines] = useState([]);\n  const [instructors, setInstructors] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [courses, setCourses] = useState([]);\n\n  const handleError = (error) => {\n    if (error.message === '403') {\n      setUnauthorized(true);\n    } else {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    const allPromise = Promise.all([APIService.get(URL_DISCIPLINES), APIService.get(URL_INSTRUCTORS),\n      APIService.get(URL_CLASSES), APIService.get(URL_COURSES)]);\n\n    allPromise.then(data => {\n      setDisciplines(data[0]);\n      setInstructors(data[1]);\n      setClasses(data[2]);\n      setCourses(data[3]);\n      setLoaded(true);\n    }, handleError);\n  }, []);\n\n  if (unauthorized) {\n    return (\n      <div data-testid=\"SetupPage\">\n        {PageHeading('Setup Page')}\n        {UnauthorizedMessage('setup')}\n      </div>\n    );\n  }\n\n  return (\n    <div data-testid=\"SetupPage\">\n      <Grid container spacing={2} justifyContent={\"center\"}>\n        <Grid container item xs={5} direction={\"column\"}>\n          {PageHeading('Teaching Staff', 'h4')}\n          <div style={{padding: '1rem 5rem'}}>\n            {(!loaded) ?\n              <CircularProgress /> :\n              <InstructorList instructors={instructors} setInstructors={setInstructors} disciplines={disciplines} />}\n          </div>\n        </Grid>\n        <Divider orientation={\"vertical\"} flexItem />\n        <Grid container item xs={5} direction={\"column\"}>\n          {PageHeading('Class Roster', 'h4')}\n          <div style={{padding: '1rem 5rem'}}>\n            {(!loaded) ?\n              <CircularProgress /> :\n              <ClassList classes={classes} setClasses={setClasses} courses={courses}\n                         setCourses={setCourses} disciplines={disciplines} />}\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nSetupPage.propTypes = {};\n\nSetupPage.defaultProps = {};\n\nexport default SetupPage;\n","import React, {useEffect, useState} from 'react';\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {PageHeading} from \"../Utility/text-styles\";\nimport APIService from \"../../APIService\";\nimport {saveToken} from \"../../auth\";\nimport {URL_CHANGE_PASSWORD, URL_CREATE_REGISTRATION_REQUEST} from \"../../urls\";\n\nconst LoginForm = (setUsername, setPassword) => {\n  return (\n    <>\n      <Grid container alignItems={\"center\"} justifyContent={\"center\"} spacing={2}>\n        <Grid item xs={12}>\n          <TextField required label={\"Email\"} type={\"text\"} onChange={event => setUsername(event.target.value)} />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField required label={\"Password\"} type={\"password\"} onChange={event => setPassword(event.target.value)} />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nconst RegisterForm = (accessLevels, setUsername, setPassword, setAccessLevel) => {\n  return (\n    <>\n      <Grid container alignItems={\"center\"} justifyContent={\"center\"} spacing={2}>\n        <Grid item xs={12}>\n          <TextField required label={\"Email\"} type={\"text\"}\n                     onChange={e => setUsername(e.target.value)} />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField select label={\"Requested Access Level\"} style={{minWidth: 200}}\n                     onChange={e => setAccessLevel(e.target.value)}>\n            {accessLevels.map((option) => (\n              <MenuItem key={option} value={option}>\n                {option}\n              </MenuItem>\n            ))}\n          </TextField>\n        </Grid>\n        <Grid item xs={12}>\n          <TextField required label={\"Requested Password\"} type={\"password\"}\n                     onChange={e => setPassword(e.target.value)} />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nconst LoginPage = (props) => {\n  const theme = useTheme();\n\n  const [isLoginForm, setIsLoginForm] = useState(true);\n  const accessLevels = ['root', 'admin', 'assistant'];\n\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const [accessLevel, setAccessLevel] = useState();\n\n  const onSubmit = () => {\n    if (isLoginForm) {\n      APIService.authenticate(username, password).then((data) => {\n        saveToken(data);\n        window.location.reload(false);\n      }, (error) => {\n        if (error.message === '404') {\n          // This means that this is first user\n          APIService.put(URL_CHANGE_PASSWORD,\n            {username: 'root', password: 'root', new_password: password}, false).then(() => {\n            APIService.authenticate('root', password).then(data => {\n              saveToken(data);\n              window.location.reload(false);\n            }, (error) => console.error(error));\n          }, error => console.error(error));\n        } else {\n          console.error(error);\n        }\n      });\n    } else {\n      APIService.post(URL_CREATE_REGISTRATION_REQUEST,\n        {contact_email: username, requested_password: password, access_level: accessLevel}).then((data) => {\n        console.log(data);\n      }, (error) => console.error(error));\n    }\n  };\n\n  return (\n    <div data-testid=\"LoginPage\">\n      {PageHeading((isLoginForm) ? 'Login' : 'Submit Registration Request')}\n      {(isLoginForm) ?\n        LoginForm(setUsername, setPassword) :\n        RegisterForm(accessLevels, setUsername, setPassword, setAccessLevel)\n      }\n      <Button color={\"primary\"} variant={\"contained\"} style={{marginTop: '2em', marginRight: '1em'}}\n              onClick={onSubmit}>Submit</Button>\n      <Button color={\"default\"} variant={\"contained\"}\n              style={{marginTop: '2em'}}\n              onClick={() => setIsLoginForm(!isLoginForm)}>\n        {(isLoginForm) ? 'Register' : 'Return to Login'}\n      </Button>\n    </div>\n  );\n};\nLoginPage.propTypes = {};\n\nLoginPage.defaultProps = {};\n\nexport default LoginPage;\n","import {createTheme, responsiveFontSizes} from \"@material-ui/core/styles\";\nimport React, {Component} from \"react\";\nimport {MuiThemeProvider} from \"@material-ui/core\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst muiTheme = responsiveFontSizes(createTheme({\n  palette: {\n    primary: {\n      main: '#800000'\n    }\n  }\n}));\n\nexport const styleWrapper = Component => props => {\n  return (\n    <MuiThemeProvider theme={muiTheme}>\n      <CssBaseline />\n      <Component {...props} />\n    </MuiThemeProvider>\n  );\n};\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\n\n\nconst EditAssignmentDialog = (props) => {\n  const { open, setOpen, row, schedule, setSchedule, instructors, sectionOverlapMap, disciplineMap } = props;\n  const [selectedInstructor, setSelectedInstructor] = useState();\n\n  const close = () => setOpen(false);\n\n  const onInstructorSelect = (e) => {\n    setSelectedInstructor(e.target.value);\n  };\n\n  const onSubmit = () => {\n    let newScheduleAssignments = schedule.assignments;\n    const replaceIndex = newScheduleAssignments.findIndex(as => as.id === row.id);\n    newScheduleAssignments[replaceIndex].instructor = selectedInstructor;\n\n    const newSchedule = schedule;\n    schedule.assignments = newScheduleAssignments\n    setSchedule(newSchedule);\n    close();\n  };\n\n  useEffect(() => {\n    if (row != null) {\n      setSelectedInstructor(row.instructor);\n    }\n  }, [row]);\n\n\n  return (\n    <div data-testid=\"EditAssignmentDialog\">\n      <Dialog open={open} onClose={close}\n              fullWidth maxWidth={\"sm\"}>\n        <DialogTitle>Edit Assignment</DialogTitle>\n        <DialogContent>\n          {row != null &&\n            <>\n              <Typography style={{textAlign: \"center\", fontWeight: 'bold'}}>\n                {row.course_number} {row.course_title}</Typography>\n              <Typography style={{textAlign: \"center\"}}>\n                {row.meetingTimeString}</Typography>\n            </>\n          }\n          {instructors.size != null &&\n            <TextField select label={\"Instructor\"} style={{minWidth: 160}}\n                       value={selectedInstructor} onChange={onInstructorSelect}>\n              {Array.from(instructors.values()).map((instructor) => (\n                <MenuItem key={instructor.id} value={instructor.id}>\n                  {instructor.lastName}\n                </MenuItem>\n              ))}\n            </TextField>\n          }\n        </DialogContent>\n        <DialogActions>\n          <Button variant={\"contained\"} onClick={close}>Cancel</Button>\n          <Button variant={\"contained\"} color={\"primary\"}\n                  onClick={onSubmit} disabled={!selectedInstructor}>Submit</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nEditAssignmentDialog.propTypes = {};\n\nEditAssignmentDialog.defaultProps = {};\n\nexport default EditAssignmentDialog;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {PageHeading} from \"../../Utility/text-styles\";\nimport {Link, useParams} from \"react-router-dom\";\nimport APIService from \"../../../APIService\";\nimport {URL_CLASSES, URL_INSTRUCTORS, URL_SOLUTION_CONSTRAINT_MAP, URL_SOLUTIONS} from \"../../../urls\";\nimport {DataGrid} from \"@material-ui/data-grid\";\nimport Button from \"@material-ui/core/Button\";\nimport EditAssignmentDialog from \"./EditAssignmentDialog/EditAssignmentDialog\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\n\nconst EditSolution = () => {\n  const [solution, setSolution] = useState();\n  const [editedSolution, setEditedSolution] = useState();\n  const [instructors, setInstructors] = useState({});\n  const [sections, setSections] = useState({});\n  const [sectionOverlapMap, setSectionOverlapMap] = useState({});\n  const [disciplineMap, setDisciplineMap] = useState({});\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [editRow, setEditRow] = useState();\n\n  const { solution_id } = useParams();\n\n  const columns = [\n    { field: 'id', headerName: 'ID', hide: true},\n    { field: 'course_title', headerName: 'Course', flex: 1},\n    { field: 'course_number', hide: true},\n    { field: 'meetingTimeString', headerName: 'Meeting Times', flex: 3},\n    { field: 'subject_disciplines', headerName: 'Subject Disciplines', hide: true},\n    { field: 'instructor_lastName', headerName: 'Assigned Instructor', flex: 1},\n    { field: 'Edit', renderCell: (cellValues) => {\n        return (\n          <IconButton onClick={() => {\n            setEditRow(cellValues.row);\n            setEditDialogOpen(true);\n          }}>\n            <EditIcon />\n          </IconButton>\n        );\n      }, flex: 0.5},\n  ];\n\n  const getTableData = (assignments) => {\n    let data = [];\n\n    if (sections.size !== 0 && sections.size != null) {\n      for (let assignment of assignments) {\n        const section = sections.get(assignment.section);\n\n        let instructor_name = 'Unassigned';\n        if (assignment.instructor != null) {\n          instructor_name = instructors.get(assignment.instructor).lastName;\n        }\n\n        if (section) {\n          data.push({id: assignment.id, course_title: section.course.course_title,\n            course_number: section.course.course_number, meetingTimeString: section.meetingTimeString,\n            instructor: assignment.instructor, instructor_lastName: instructor_name,\n            subject_disciplines: section.course.subject_disciplines});\n        }\n      }\n    }\n\n    return data;\n  };\n\n  const isDataPopulated = () => (solution != null && instructors.size != null && sections.size != null &&\n    Object.keys(sectionOverlapMap).length !== 0 && Object.keys(disciplineMap).length !== 0);\n\n  useEffect(() => {\n    APIService.get(URL_SOLUTIONS + solution_id.toString()).then((data) => {\n      setSolution(data);\n      setEditedSolution(data);\n    }, (error) => {\n      console.error(error);\n    });\n\n    APIService.get(URL_INSTRUCTORS).then((data) => {\n      setInstructors(new Map(data.map(obj => [obj.id, obj])));\n    }, (error) => {\n      console.error(error);\n    });\n\n    APIService.get(URL_CLASSES).then((data) => {\n      setSections(new Map(data.map(obj => [obj.id, obj])));\n    }, (error) => {\n      console.error(error);\n    });\n\n    APIService.get(URL_SOLUTION_CONSTRAINT_MAP).then((data) => {\n      setSectionOverlapMap(data.section_overlap_map);\n      setDisciplineMap(data.discipline_overlap_map);\n    }, (error) => console.error(error));\n  }, [solution_id]);\n\n\n  return (\n    <div data-testid=\"EditSolution\">\n      <div style={{marginBottom: '0.5rem', display: 'flex', flexDirection: 'row', justifyContent: 'space-between',\n        alignItems: 'flex-end', width: '80vw', marginLeft: 'auto', marginRight: 'auto'}}>\n        <Button variant={\"contained\"} style={{height: '36px'}} component={Link} to={'/'}>Cancel</Button>\n        {PageHeading('Edit Solution')}\n        <Button variant={\"contained\"} style={{height: '36px'}} color={\"primary\"}>Submit</Button>\n      </div>\n      <div style={{height: '80vh', width: '80vw', margin: 'auto'}}>\n        {(isDataPopulated()) ?\n          (<DataGrid rows={getTableData(editedSolution.assignments)} columns={columns} autoPageSize/>)\n          : (<p>Loading</p>)}\n      </div>\n      {isDataPopulated() &&\n        <EditAssignmentDialog open={editDialogOpen} setOpen={setEditDialogOpen} row={editRow} schedule={editedSolution}\n                              setSchedule={setEditedSolution} instructors={instructors}\n                              sectionOverlapMap={sectionOverlapMap} disciplineMap={disciplineMap} />\n      }\n    </div>\n  );\n};\n\nEditSolution.propTypes = {};\n\nEditSolution.defaultProps = {};\n\nexport default EditSolution;\n","import React from \"react\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport MainNavbar from \"./components/MainNavbar/MainNavbar\";\nimport AssistantPage from \"./components/AssistantPage/AssistantPage\";\nimport SetupPage from \"./components/SetupPage/SetupPage\";\nimport LoginPage from \"./components/LoginPage/LoginPage\";\nimport {styleWrapper} from \"./StyleWrapper\";\nimport './App.css'\nimport EditSolution from \"./components/AssistantPage/EditSolution/EditSolution\";\nimport {getToken} from \"./auth\";\n\nfunction App() {\n  return (\n    <>\n      <MainNavbar/>\n      <div className={'content'}>\n        <Routes>\n          <Route path={'/'} element={getToken() ? <AssistantPage /> : <Navigate to={\"/login\"} />} />\n          <Route path={'/edit/:solution_id'} element={getToken() ? <EditSolution /> : <Navigate to={\"/login\"} />} />\n          <Route path={'/setup'} element={getToken() ? <SetupPage /> : <Navigate to={\"/login\"} />} />\n          <Route path={'/login'} element={!getToken() ? <LoginPage /> : <Navigate to={\"/\"} />} />\n        </Routes>\n      </div>\n    </>\n  );\n}\n\nexport default styleWrapper(App);\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}