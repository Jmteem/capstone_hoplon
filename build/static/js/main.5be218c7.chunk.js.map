{"version":3,"sources":["auth.js","components/MainNavbar/MainNavbar.js","urls.js","APIService.js","components/Utility/text-styles.js","components/Utility/ErrorDialog/ErrorDialog.js","components/AssistantPage/AssistantPage.js","components/SetupPage/InstructorDialog/InstructorDialog.js","components/SetupPage/InstructorList/InstructorList.js","constants.js","components/SetupPage/SectionForm/SectionForm.js","components/SetupPage/ClassDialog/ClassDialog.js","components/SetupPage/ClassList/ClassList.js","components/SetupPage/SetupPage.js","components/LoginPage/LoginPage.js","StyleWrapper.js","components/AssistantPage/EditSolution/EditAssignmentDialog/EditAssignmentDialog.js","components/AssistantPage/EditSolution/EditSolution.js","components/SetupPage/EditSection/CreateTimeSlotDialog/CreateTimeSlotDialog.js","components/SetupPage/EditSection/EditSection.js","App.js","reportWebVitals.js","index.js"],"names":["getToken","Cookies","get","clearToken","remove","saveToken","userToken","set","token","logout","window","location","reload","MainNavbar","AppBar","color","Toolbar","style","justifyContent","Typography","variant","width","fontWeight","fontStyle","Button","component","Link","to","onClick","defaultProps","API_URL","URL_DISCIPLINES","URL_INSTRUCTORS","URL_CLASSES","URL_COURSES","URL_SOLUTIONS","URL_SOLUTION_CONSTRAINT_MAP","URL_AUTH","URL_CREATE_REGISTRATION_REQUEST","URL_CHANGE_PASSWORD","URL_CHANGES","URL_WRITE_ACCESS","catchErrorResponse","response","status","Error","statusText","injectHeader","options","ignoreAuth","headers","addJsonHeader","method","APIService","authenticate","username","password","a","body","JSON","stringify","fetch","json","url","post","data","put","dataHasID","id","toString","delete","PageHeading","text","useTheme","palette","primary","marginBottom","UnauthorizedMessage","page","ErrorDialog","props","open","setOpen","message","close","Dialog","onClose","DialogTitle","DialogContent","DialogActions","AssistantPage","useState","unauthorized","setUnauthorized","loaded","setLoaded","changes","setChanges","runningScheduler","setRunningScheduler","solutions","setSolutions","instructors","setInstructors","sections","setSections","constraintMap","setConstraintMap","errorOpen","setErrorOpen","errorMessage","setErrorMessage","runScheduler","then","handleError","finally","getConstraintViolations","schedule","assignmentViolations","disciplineViolations","overlapViolations","assignmentMap","forEach","instructor","assigned","assignments","filter","length","maxSections","map","section","assignment","discipline_overlap_map","includes","overlap","section_overlap_map","some","push","conflictCount","Set","size","result","slice","error","useEffect","Promise","all","data_changed","catch","runSchedulerSection","CircularProgress","Card","margin","CardContent","CardActions","Grid","container","alignItems","cards","count","border","assignment_count","IconButton","marginLeft","generateCards","InstructorForm","row","setRow","disciplines","newQualification","setNewQualification","spacing","item","TextField","label","required","inputProps","maxLength","type","value","lastName","onChange","e","target","inputMode","pattern","replace","select","minWidth","d","qualifications","findIndex","q","option","MenuItem","name","concat","xs","qual","Chip","onDelete","x","InstructorDialog","create","errorDialog","instructorFormData","setInstructorFormData","title","fullWidth","maxWidth","disabled","obj","newRow","rowIndex","instructorsCopy","InstructorList","writeAuthorized","selected","setSelected","addOpen","setAddOpen","editOpen","setEditOpen","List","listItems","ListItem","ListItemText","secondary","ListItemSecondaryAction","Tooltip","placement","edge","openEditDialog","i","Divider","InstructorListItems","button","ListItemIcon","DayAbbrevToValue","LoginFormMessages","timeslotToString","timeslot","begin_time","end_time","meetingDays","convertTimeToNumber","time","Number","split","SectionForm","classes","selectedSection","setSelectedSection","classesOnCourse","cls","course","CenteredListItem","withStyles","root","textAlign","getTimeSlotRows","rows","meetingTimes","list","getSectionList","ClassForm","setClasses","newDiscipline","setNewDiscipline","course_title","course_number","subject_disciplines","marginTop","ClassDialog","setCourses","courseFormData","setCourseFormData","sd","newCourse","courses","crs","coursesCopy","ClassList","meetingTimeStrings","meetingTimeString","join","ClassListItems","SetupPage","setWriteAuthorized","setDisciplines","openErrorDialog","direction","padding","orientation","flexItem","LoginPage","isLoginForm","setIsLoginForm","accessLevels","setUsername","setPassword","accessLevel","setAccessLevel","successMessage","setSuccessMessage","event","marginRight","new_password","contact_email","requested_password","access_level","muiTheme","responsiveFontSizes","createTheme","main","EditAssignmentDialog","setSchedule","sectionOverlapMap","disciplineMap","selectedInstructor","setSelectedInstructor","Array","from","values","newScheduleAssignments","replaceIndex","as","newSchedule","EditSolution","setSolution","editedSolution","setEditedSolution","setSectionOverlapMap","setDisciplineMap","editDialogOpen","setEditDialogOpen","editRow","setEditRow","successSnackbar","setSuccessSnackbar","editsMade","setEditsMade","solution_id","useParams","columns","field","headerName","hide","flex","renderCell","cellValues","Map","display","flexDirection","height","instructor_name","instructor_lastName","getTableData","autoPageSize","Snackbar","autoHideDuration","Alert","severity","CreateTimeSlotDialog","onSubmit","setTimeslot","Object","keys","InputLabelProps","shrink","step","EditSection","setCourse","selectedTimeSlot","setSelectedTimeSlot","action","setAction","course_id","deleteSection","s","updateSection","validateSection","sectionsCopy","console","log","day","timesOnDay","mt","timeIntervals","meetingTime","arr","func","pairwise","sort","i1","i2","curr","next","items","find","times","getTimeSlotListItems","timeSlot","styleWrapper","Component","className","path","element","theme","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAEMA,EAAW,WACf,OAAOC,IAAQC,IAAI,UAGfC,EAAa,WACjBF,IAAQG,OAAO,UAGXC,EAAY,SAACC,GACjBL,IAAQM,IAAI,QAASD,EAAUE,Q,OCF3BC,EAAS,WACbN,IACAO,OAAOC,SAASC,QAAO,IAGnBC,EAAa,kBACjB,qBAAK,cAAY,aAAjB,SACE,cAACC,EAAA,EAAD,CAAQC,MAAO,UAAf,SACE,eAACC,EAAA,EAAD,CAASC,MAAO,CAACC,eAAgB,gBAAjC,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKH,MAAO,CAACI,MAAO,MAAOC,WAAY,SAAUC,UAAW,UAAhF,mBAGA,cAACC,EAAA,EAAD,CAAQT,MAAO,UAAWK,QAAS,YAAaK,UAAWC,IAAMC,GAAI,IAArE,uBACA,cAACH,EAAA,EAAD,CAAQT,MAAO,UAAWK,QAAS,YAAaK,UAAWC,IAAMC,GAAI,SAArE,mBACC3B,IACC,cAACwB,EAAA,EAAD,CAAQT,MAAO,UAAWK,QAAS,YAAaQ,QAASnB,EAAzD,oBACA,cAACe,EAAA,EAAD,CAAQT,MAAO,UAAWK,QAAS,YAAaK,UAAWC,IAAMC,GAAI,SAArE,2BASVd,EAAWgB,aAAe,GAEXhB,Q,qGCpCFiB,EAAU,QACnBC,EAAe,UAAMD,EAAN,eACfE,EAAe,UAAMF,EAAN,eAEfG,GADY,UAAMH,EAAN,aACD,UAAMA,EAAN,aACXI,EAAW,UAAMJ,EAAN,WACXK,EAAa,UAAML,EAAN,aACbM,EAA2B,UAAMN,EAAN,2BAC3BO,EAAQ,UAAMP,EAAN,eACRQ,EAA+B,UAAMR,EAAN,+BAC/BS,EAAmB,UAAMT,EAAN,wBACnBU,EAAW,UAAMV,EAAN,YACXW,EAAgB,UAAMX,EAAN,gBCTpB,SAASY,EAAmBC,GAK1B,GAJwB,MAApBA,EAASC,QAAkB5C,KAC7BG,IAGEwC,EAASC,QAAU,KAAOD,EAASC,OAAS,IAC9C,MAAM,IAAIC,MAAJ,UAAaF,EAASC,OAAtB,cAAkCD,EAASG,aAIrD,IAAMC,EAAe,SAACC,GAA+B,IAAtBC,EAAqB,wDAC9CC,EAAU,GAERC,EAAmC,SAAnBH,EAAQI,QAAwC,QAAnBJ,EAAQI,OACrD5C,EAAQR,IAEd,OAAKmD,GAAkB3C,GAInB2C,IACFD,EAAQ,gBAAkB,oBAExB1C,IAAUyC,IACZC,EAAO,cAAP,gBAAoC1C,IAEtCwC,EAAQE,QAAUA,EAEXF,GAXEA,GAcLK,EAAa,CACjBC,aAAa,WAAD,4BAAE,WAAOC,EAAUC,GAAjB,iBAAAC,EAAA,6DACNT,EAAU,CAACI,OAAQ,OAAQM,KAAMC,KAAKC,UAAU,CAACL,SAAUA,EAAUC,SAAUA,KADzE,SAEWK,MAAMxB,EAAUU,EAAaC,GAAS,IAFjD,cAGZN,EADMC,EAFM,0BAILA,EAASmB,QAJJ,2CAAF,qDAAC,GAOb5D,IAAI,WAAD,4BAAE,WAAO6D,GAAP,iBAAAN,EAAA,6DACGT,EAAU,CAAEI,OAAQ,OADvB,SAEoBS,MAAME,EAAKhB,EAAaC,IAF5C,cAGHN,EADMC,EAFH,0BAIIA,EAASmB,QAJb,2CAAF,mDAAC,GAOJE,KAAK,WAAD,4BAAE,WAAOD,EAAKE,GAAZ,+BAAAR,EAAA,6DAAkBR,EAAlB,gCACED,EAAU,CAAEI,OAAQ,OAAQM,KAAMC,KAAKC,UAAUK,IADnD,SAEmBJ,MAAME,EAAKhB,EAAaC,EAASC,IAFpD,cAGJP,EADMC,EAFF,0BAIGA,EAASmB,QAJZ,2CAAF,qDAAC,GAOLI,IAAI,WAAD,4BAAE,WAAOH,EAAKE,GAAZ,+BAAAR,EAAA,6DAAkBU,IAAlB,iCACGnB,EAAU,CAAEI,OAAQ,MAAOM,KAAMC,KAAKC,UAAUK,IAClDE,IAAWJ,GAAOE,EAAKG,GAAGC,YAF3B,SAGoBR,MAAME,EAAKhB,EAAaC,IAH5C,cAIHN,EADMC,EAHH,0BAKKoB,IAAQxB,EAAuBI,EAAWA,EAASmB,QALxD,2CAAF,qDAAC,GAQJQ,OAAO,WAAD,4BAAE,WAAOP,EAAKK,GAAZ,iBAAAX,EAAA,6DACAT,EAAU,CAAEI,OAAQ,UADpB,SAEiBS,MAAME,EAAMK,EAAGC,WAAYtB,EAAaC,IAFzD,cAGNN,EADMC,EAFA,0BAICA,GAJD,2CAAF,qDAAC,IAQMU,I,kBCnETkB,EAAc,SAACC,GAAD,IAAOpD,EAAP,uDAAe,KAAf,OAClB,cAACD,EAAA,EAAD,CAAYC,QAASA,EAASH,MAAO,CAACF,MAAO0D,MAAWC,QAAQC,QAASrD,WAAY,OAAQsD,aAAc,SAA3G,SACGJ,KAKCK,EAAsB,eAACC,EAAD,uDAAM,UAAN,OAC1B,eAAC3D,EAAA,EAAD,2DACgD2D,EADhD,0L,kDCJIC,GAAc,SAACC,GACnB,IAAQC,EAA2BD,EAA3BC,KAAMC,EAAqBF,EAArBE,QAASC,EAAYH,EAAZG,QAEjBC,EAAQ,kBAAMF,GAAQ,IAE5B,OACE,qBAAK,cAAY,cAAjB,SACE,eAACG,GAAA,EAAD,CAAQJ,KAAMA,EAAMK,QAASF,EAA7B,UACE,cAACG,GAAA,EAAD,oBACA,cAACC,GAAA,EAAD,UACGL,IAEH,cAACM,GAAA,EAAD,UACE,cAACjE,EAAA,EAAD,CAAQJ,QAAS,YAAaL,MAAO,UAAWa,QAASwD,EAAzD,wBASVL,GAAYlD,aAAe,GAEZkD,UChBTW,GAAgB,WACpB,MAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA4BF,oBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAgDN,oBAAS,GAAzD,mBAAOO,EAAP,KAAyBC,EAAzB,KAEA,EAAkCR,mBAAS,IAA3C,mBAAOS,EAAP,KAAkBC,EAAlB,KACA,EAAsCV,mBAAS,IAA/C,mBAAOW,EAAP,KAAoBC,EAApB,KACA,EAAgCZ,mBAAS,IAAzC,mBAAOa,EAAP,KAAiBC,EAAjB,KACA,EAA0Cd,mBAAS,IAAnD,mBAAOe,EAAP,KAAsBC,EAAtB,KAEA,EAAkChB,oBAAS,GAA3C,oBAAOiB,GAAP,MAAkBC,GAAlB,MACA,GAAwClB,mBAAS,IAAjD,qBAAOmB,GAAP,MAAqBC,GAArB,MAEMC,GAAe,WACnBjB,GAAU,GACVI,GAAoB,GACpBE,EAAa,IACbhD,EAAWW,KAAK7B,GAAe8E,MAAK,SAAChD,GAC/BA,GACFoC,EAAapC,KAEdiD,IAAaC,SAAQ,WACtBpB,GAAU,GACVI,GAAoB,GACpBF,GAAW,OA+BTmB,GAA0B,SAACC,GAC/B,IAAIC,EAAuB,EACvBC,EAAuB,EACvBC,EAAoB,GAEpBC,EAAgB,GAEpBnB,EAAYoB,SAAQ,SAAAC,GAClB,IAAMC,EAAWP,EAASQ,YAAYC,QAAO,SAAArE,GAAC,OAAIA,EAAEkE,aAAeA,EAAWvD,MAChEwD,EAASG,OACXJ,EAAWK,cACrBV,GAAwB,GAE1BG,EAAcE,EAAWvD,IAAMwD,EAASK,KAAI,SAAAxE,GAAC,OAAIA,EAAEyE,cAGrDb,EAASQ,YAAYH,SAAQ,SAAAS,GAC3B,GAA6B,MAAzBA,EAAWR,WAAoB,CAChBjB,EAAc0B,uBAAuBD,EAAWD,SACnDG,SAASF,EAAWR,cAChCJ,GAAwB,GAG1B,IAAMe,EAAU5B,EAAc6B,oBAAoBJ,EAAWD,SACzDT,EAAcU,EAAWR,YAAYa,MAAK,SAAAN,GAAO,OAAII,EAAQD,SAASH,OACxEV,EAAkBiB,KAAKN,EAAWR,gBAIxC,IAAMe,EAAgB,IAAIC,IAAInB,GAAmBoB,KAE7CC,EAAS,GAOb,OANIvB,IACFuB,GAAM,UAAOvB,EAAP,sBAA0CA,EAAuB,EAAK,GAAK,IAA3E,2BACJC,IACFsB,GAAM,UAAOtB,EAAP,sBAA0CA,EAAuB,EAAK,GAAK,IAA3E,oCACJmB,IACFG,GAAM,UAAOH,EAAP,sBAAmCA,EAAgB,EAAK,GAAK,IAA7D,+BACAG,EAAOd,OAAS,EAAKc,EAAOC,MAAM,GAAI,GAAK,QA8B/C5B,GAAc,SAAC6B,GACe,QAA9BA,EAAM5D,QAAQ2D,MAAM,EAAG,GACzBjD,GAAgB,IAEhBkB,GAAgBgC,EAAM5D,SACtB0B,IAAa,KAoBjB,OAhBAmC,qBAAU,WACWC,QAAQC,IAAI,CAC7B7F,EAAWnD,IAAIiC,GAAgBkB,EAAWnD,IAAI8B,GAAkBqB,EAAWnD,IAAI+B,GAC/EoB,EAAWnD,IAAIkC,GAA8BiB,EAAWnD,IAAIsC,KAGnDyE,MAAK,SAAAhD,GACdoC,EAAapC,EAAK,IAClBsC,EAAetC,EAAK,IACpBwC,EAAYxC,EAAK,IACjB0C,EAAiB1C,EAAK,IACtBgC,EAAWhC,EAAK,GAAGkF,cACnBpD,GAAU,MACTqD,MAAMlC,MACR,IAECtB,EAEA,gCACGrB,EAAY,uBACZM,EAAoB,gBAMzB,sBAAK,cAAY,gBAAjB,UACGN,EAAY,uBACZ2B,GACD,cAAC/E,EAAA,EAAD,2FAEG2E,EAvIqB,WAC1B,IAAI+C,EAAU,uBAuBd,OArB2B,IAAvBvC,EAAYyB,QAAoC,IAApBvB,EAASuB,OACvCc,EACE,qCACE,cAAC1H,EAAA,EAAD,yKAEA,uBACA,cAACK,EAAA,EAAD,CAAQT,MAAO,UAAWK,QAAS,YAAaK,UAAWC,IAAMC,GAAI,SAArE,4BAG0B,IAArByE,EAAU2B,SACnBc,EACE,qCACE,cAAC1H,EAAA,EAAD,gDACA,uBACA,cAACK,EAAA,EAAD,CAAQJ,QAAS,YAAaL,MAAO,UAAWa,QAASoF,GAAzD,+BAOC6B,EAgHoBQ,GAAvB,cAACC,GAAA,EAAD,IAEAxD,GAAUE,GAAWI,EAAU2B,OAAS,GACxC,eAACwB,EAAA,EAAD,CAAMnI,QAAS,WAAYH,MAAO,CAACuI,OAAQ,sBAAuBnI,MAAO,OAAzE,UACE,cAACoI,EAAA,EAAD,UACE,cAACtI,EAAA,EAAD,kJAGF,cAACuI,EAAA,EAAD,UACE,cAAClI,EAAA,EAAD,CAAQJ,QAAS,YAAaL,MAAO,UAAWE,MAAO,CAACuI,OAAQ,QACxD5H,QAASoF,GADjB,gCAKLlB,GACC,cAAC6D,EAAA,EAAD,CAAMC,WAAS,EAACC,WAAY,SAAU3I,eAAgB,SAAtD,SAnFgB,WACpB,IAD0B,EACtB4I,EAAQ,GACRC,EAAQ,EAFc,cAIL3D,EAAU0C,MAAM,EAAG,KAJd,IAI1B,2BAA6C,CAAC,IAArCzB,EAAoC,QACrC2C,EAAU3C,EAAS4C,mBAAqB5C,EAASQ,YAAYE,OACjE,oBAAsB,kBACxB+B,EAAMrB,KACJ,eAACc,EAAA,EAAD,CAAMnI,QAAS,WAA8BH,MAAO,CAACI,MAAO,MAAOmI,OAAQ,MAAOQ,OAAQA,GAA1F,UACE,eAACP,EAAA,EAAD,WACE,eAACtI,EAAA,EAAD,qBAAoB4I,KACpB,eAAC5I,EAAA,EAAD,+BAA8BkG,EAAS4C,iBAAvC,IAA0D5C,EAASQ,YAAYE,UAC/E,eAAC5G,EAAA,EAAD,sBAAqBiG,GAAwBC,SAE/C,cAACqC,EAAA,EAAD,UACE,cAACQ,EAAA,EAAD,CAAYjJ,MAAO,CAACkJ,WAAY,QAAS1I,UAAWC,IAAMC,GAAE,gBAAW0F,EAASjD,IAAhF,SACE,cAAC,IAAD,UAR0BiD,EAASjD,KAa3C2F,GAAS,GArBe,8BAwB1B,OAAOD,EA4DAM,KAGL,cAAC,GAAD,CAAanF,KAAM2B,GAAW1B,QAAS2B,GAAc1B,QAAS2B,SAOpEpB,GAAc7D,aAAe,GAEd6D,U,0ICnMT2E,GAAiB,SAACrF,GACtB,IAAQsF,EAA6BtF,EAA7BsF,IAAKC,EAAwBvF,EAAxBuF,OAAQC,EAAgBxF,EAAhBwF,YACrB,EAAgD7E,mBAAS,IAAzD,mBAAO8E,EAAP,KAAyBC,EAAzB,KAWA,OACE,eAACf,EAAA,EAAD,CAAMC,WAAS,EAACC,WAAY,SAAU3I,eAAgB,SAAUyJ,QAAS,EAAzE,UACE,cAAChB,EAAA,EAAD,CAAMiB,MAAI,EAAV,SACE,cAACC,GAAA,EAAD,CAAWzG,GAAI,gBAAiB0G,MAAO,YAAaC,UAAQ,EACjDC,WAAY,CAAEC,UAAW,IAAMC,KAAM,OACrCC,MAAOb,EAAIc,UAAY,GAAIC,SAdnB,SAACC,GAAD,OAAOf,EAAO,6BAAID,GAAL,IAAUc,SAAUE,EAAEC,OAAOJ,cAgB/D,cAACxB,EAAA,EAAD,CAAMiB,MAAI,EAAV,SACE,cAACC,GAAA,EAAD,CAAWzG,GAAI,mBAAoB0G,MAAO,eAAgBC,UAAQ,EACvDC,WAAY,CAAEQ,UAAW,UAAWC,QAAS,SAAUR,UAAW,GAAKC,KAAM,OAC7EC,MAAOb,EAAItC,aAAe,GAAIqD,SAlBnB,SAACC,GAAD,OAAOf,EAAO,6BAAID,GAAL,IAAUtC,YAAasD,EAAEC,OAAOJ,MAAMO,QAAQ,UAAW,YAoB9F,cAAC/B,EAAA,EAAD,CAAMiB,MAAI,EAAV,SACE,cAACC,GAAA,EAAD,CAAWzG,GAAI,uBAAwBuH,QAAM,EAACb,MAAO,iBAAkB7J,MAAO,CAAC2K,SAAU,KAC9ET,MAAOV,EAAkBY,SArBT,SAACC,GAAD,OAAOZ,EAAoBY,EAAEC,OAAOJ,QAoB/D,SAjB6BX,EAAY1C,QAC7C,SAAA+D,GAAC,OAAIvB,EAAIwB,eAAeC,WAAU,SAAAC,GAAC,OAAIA,EAAE5H,KAAOyH,EAAEzH,MAAM,KAkB1B6D,KAAI,SAACgE,GAAD,OAC1B,cAACC,GAAA,EAAD,CAA4Bf,MAAOc,EAAnC,SACGA,EAAOE,MADKF,EAAOE,aAM5B,cAACxC,EAAA,EAAD,CAAMiB,MAAI,EAAV,SACE,cAACpJ,EAAA,EAAD,CAAQJ,QAAS,YAAaL,MAAO,UAAWa,QA7BxB,kBAAM2I,EAAO,6BAAID,GAAL,IAAUwB,eAAgBxB,EAAIwB,eAAeM,OAAO,CAAC3B,QA6BzF,mBAEF,cAACd,EAAA,EAAD,CAAMiB,MAAI,EAACyB,GAAI,GAAf,SACG/B,EAAIwB,eAAe7D,KAAI,SAACqE,GAAD,OACtB,cAACC,GAAA,EAAD,CAAMzB,MAAOwB,EAAKH,KACZK,SAAU,kBAAMjC,EAAO,6BAAID,GAAL,IAAUwB,eAAgBxB,EAAIwB,eAAehE,QAAO,SAAA2E,GAAC,OAAIA,EAAErI,KAAOkI,EAAKlI,qBAQvGsI,GAAmB,SAAC1H,GACxB,IAAQ2H,EAAyE3H,EAAzE2H,OAAQ1H,EAAiED,EAAjEC,KAAMC,EAA2DF,EAA3DE,QAASoF,EAAkDtF,EAAlDsF,IAAKE,EAA6CxF,EAA7CwF,YAAajE,EAAgCvB,EAAhCuB,eAAgBqG,EAAgB5H,EAAhB4H,YACjE,EAAoDjH,mBAClD,CAACyF,SAAU,KAAMpD,YAAa,KAAM8D,eAAgB,KADtD,mBAAOe,EAAP,KAA2BC,EAA3B,KAGMC,EAASJ,EAAU,oBAAsB,kBAEzCvH,EAAQ,kBAAMF,GAAQ,IA+B5B,OARA8D,qBAAU,WACJ/D,IAAS0H,EACXG,EAAsBxC,GACbrF,GAAQ0H,GACjBG,EAAsB,CAAC1B,SAAU,KAAMpD,YAAa,KAAM8D,eAAgB,OAE3E,CAAC7G,IAGF,qBAAK,cAAY,mBAAjB,SACE,eAACI,GAAA,EAAD,CAAQJ,KAAMA,EACNK,QAASF,EACT,kBAAgB,oBAChB4H,WAAS,EAACC,SAAU,KAH5B,UAIE,cAAC1H,GAAA,EAAD,CAAanB,GAAG,oBAAhB,SAAqC2I,IACrC,cAACvH,GAAA,EAAD,UACE,cAAC,GAAD,CAAgB8E,IAAKuC,EAAoBtC,OAAQuC,EAAuBtC,YAAaA,MAEvF,eAAC/E,GAAA,EAAD,WACE,cAACjE,EAAA,EAAD,CAAQJ,QAAS,YAAaQ,QAASwD,EAAOrE,MAAO,UAArD,oBACA,cAACS,EAAA,EAAD,CAAQJ,QAAS,YAAa8L,UAAWL,EAAmBzB,WAAayB,EAAmB7E,YACpFpG,QA1CC,WACf,IAAIqC,EAAI,6BAAO4I,GAAP,IAA2Bf,eAAgBe,EAAmBf,eAAe7D,KAAI,SAAAkF,GAAG,OAAIA,EAAI/I,QAEhGuI,EACFtJ,EAAWW,KAAKhC,EAAiBiC,GAAMgD,MAAK,SAACmG,GAC3C7G,GAAe,SAACD,GAAD,OAAiBA,EAAY8F,OAC1C,CAAC,6BAAIgB,GAAL,IAAatB,eAAgBe,EAAmBf,yBAEjD,SAAC/C,GAAD,OAAW6D,EAAY7D,EAAM5D,YAAUgC,QAAQ/B,GAElD/B,EAAWa,IAAIlC,EAAiBiC,GAAMgD,MAAK,WACzCV,GAAe,SAACD,GACd,IAAM+G,EAAW/G,EAAYyF,WAAU,SAAApE,GAAU,OAAIA,EAAWvD,KAAOyI,EAAmBzI,MACpFkJ,EAAkBhH,EAAYwC,MAAM,GAE1C,OADAwE,EAAgBD,GAAYR,EACrBS,QAER,SAACvE,GAAD,OAAW6D,EAAY7D,EAAM5D,YAAUgC,QAAQ/B,IAyBnBrE,MAAO,UADlC,6BAUV2L,GAAiB7K,aAAe,GAEjB6K,U,UC7GTa,GAAiB,SAACvI,GACtB,IAAOsB,EAA0EtB,EAA1EsB,YAAaC,EAA6DvB,EAA7DuB,eAAgBiE,EAA6CxF,EAA7CwF,YAAagD,EAAgCxI,EAAhCwI,gBAAiBZ,EAAe5H,EAAf4H,YAClE,EAAgCjH,mBAAS,IAAzC,mBAAO8H,EAAP,KAAiBC,EAAjB,KAEA,EAA8B/H,oBAAS,GAAvC,mBAAOgI,EAAP,KAAgBC,EAAhB,KAEA,EAAgCjI,oBAAS,GAAzC,mBAAOkI,EAAP,KAAiBC,EAAjB,KAyCA,OACE,sBAAK,cAAY,iBAAjB,UACE,eAACC,GAAA,EAAD,CAAM9M,MAAO,CAAC+I,OAAO,uBAArB,UArCwB,WAC1B,IADgC,EAC5BgE,EAAY,GADgB,cAGT1H,GAHS,yBAGvBqB,EAHuB,QAI9BqG,EAAUvF,KACR,eAACwF,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAcvJ,QAASgD,EAAWyD,SACpB+C,UAAW,qBAAuBxG,EAAWK,YAAY3D,aACtEmJ,GACC,eAACY,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAStB,MAAO,kBAAmBuB,UAAW,OAA9C,SACE,cAACpE,EAAA,EAAD,CAAYqE,KAAM,MAAO,aAAY,kBAAmB3M,QAAS,kBAhBxD,SAAC+F,GACtB+F,EAAY/F,GACZmG,GAAY,GAcuEU,CAAe7G,IAAtF,SACE,cAAC,IAAD,QAGJ,cAAC0G,GAAA,EAAD,CAAStB,MAAO,oBAAqBuB,UAAW,QAAhD,SACE,cAACpE,EAAA,EAAD,CAAYqE,KAAM,MAAO,aAAY,oBACzB3M,QAAS,WACPyB,EAAWiB,OAAOtC,EAAiB2F,EAAWvD,IAAI6C,MAAK,WACrDV,EAAeD,EAAYwB,QAAO,SAAA2G,GAAC,OAAIA,EAAErK,KAAOuD,EAAWvD,UAC1D,SAAC2E,GAAD,OAAW6D,EAAY7D,EAAM5D,aAJ9C,SAME,cAAC,KAAD,aAjBKwC,EAAWvD,KAwB5B4J,EAAUvF,KAAK,cAACiG,GAAA,EAAD,qBAAyB/G,EAAWvD,OA1BrD,2BAAqC,IAHL,8BAgChC,OAAO4J,EAMFW,GACAnB,GACC,eAACS,GAAA,EAAD,CAAUW,QAAM,EAAChN,QA/CH,kBAAMgM,GAAW,IA+C/B,UACE,cAACiB,GAAA,EAAD,UAAc,cAAC,KAAD,MACd,cAACX,GAAA,EAAD,CAAcvJ,QAAS,cAFqB,aAMjD6I,GACD,qCACE,cAAC,GAAD,CAAkBb,QAAQ,EAAM1H,KAAM0I,EAASzI,QAAS0I,EAAYhB,YAAaA,EAC/DpC,YAAaA,EAAajE,eAAgBA,IAC5D,cAAC,GAAD,CAAkBtB,KAAM4I,EAAU3I,QAAS4I,EAAaxD,IAAKmD,EAAUb,YAAaA,EAClEpC,YAAaA,EAAajE,eAAgBA,WASpEgH,GAAe1L,aAAe,GAEf0L,UC3FFuB,GAAmB,CAC9B,OAAQ,SAAU,OAAQ,UAAW,OAAQ,YAAa,OAAQ,WAClE,OAAQ,SAAU,OAAQ,WAAY,OAAQ,UAGnCC,GAET,+GAFSA,GAIT,6CAJSA,GAKU,6FAGVC,GAAmB,SAACC,GAG/B,OAFIA,EAASC,WAAWnH,OAAS,IAAGkH,EAASC,WAAaD,EAASC,WAAWpG,MAAM,GAAI,IACpFmG,EAASE,SAASpH,OAAS,IAAGkH,EAASE,SAAWF,EAASE,SAASrG,MAAM,GAAI,IAC5E,GAAN,OAAUmG,EAASG,YAAnB,YAAkCH,EAASC,WAA3C,YAAyDD,EAASE,WAGvDE,GAAsB,SAACC,GAGlC,OAFcC,OAAOD,EAAKE,MAAM,KAAK,IACrBD,OAAOD,EAAKE,MAAM,KAAK,GAAK,K,kDCuD/BC,GAhEK,SAACzK,GACnB,IAAQsF,EAAiBtF,EAAjBsF,IAAKoF,EAAY1K,EAAZ0K,QACb,EAA8C/J,oBAAU,GAAxD,mBAAOgK,EAAP,KAAwBC,EAAxB,KAEA5G,qBAAU,WACR,IAAM6G,EAAkBH,EAAQ5H,QAAO,SAAAgI,GAAG,OAAIA,EAAIC,OAAO3L,KAAOkG,EAAIlG,MAChEyL,EAAgB9H,OAAS,GAC3B6H,EAAmBC,EAAgB,GAAGzL,MAEvC,IAEH,IAAM4L,EAAmBC,aAAW,CAClCC,KAAM,CAACC,UAAW,WADKF,CAEtB/B,MAUGkC,EAAkB,SAACN,GACvB,GAAIA,EAAI1L,KAAOuL,EAAiB,MAAO,GACvC,IAF+B,EAE3BU,EAAO,GAFoB,cAGdP,EAAIQ,cAHU,IAG/B,2BAAmC,CAAC,IAA3BhB,EAA0B,QAC3BxE,EAAQkE,GAAiBM,GAC/Be,EAAK5H,KACH,cAACwF,GAAA,EAAD,UACE,cAAC+B,EAAD,CAAkBrL,QAASmG,KADdwE,EAAKlL,MANO,8BAW/B,OAAOiM,GAqBT,OACE,cAAC1G,EAAA,EAAD,CAAMC,WAAS,EAACC,WAAY,SAAU3I,eAAgB,SAAUyJ,QAAS,EAAzE,SACE,cAAChB,EAAA,EAAD,CAAMiB,MAAI,EAACyB,GAAI,GAAf,SApBmB,WACrB,IAAIkE,EAAO,GAcX,OAbIb,IACFa,EAAOb,EAAQ5H,QAAO,SAAAgI,GAAG,OAAIA,EAAIC,OAAO3L,KAAOkG,EAAIlG,MAAI6D,KAAI,SAAC6H,GAAD,OACzD,gCACE,eAAC7B,GAAA,EAAD,CAAUW,QAAM,EAAChN,QAAS,kBAAMgO,EAAmBE,EAAI1L,KAAvD,WA3BSA,EA4BE0L,EAAI1L,GA3BjBuL,IAAoBvL,EACd,cAACyK,GAAA,EAAD,UAAc,cAAC,KAAD,MAEd,cAACA,GAAA,EAAD,UAAc,cAAC,KAAD,OAyBhB,cAACX,GAAA,EAAD,CAAcvJ,QAAO,kBAAamL,EAAI1L,IAAM+J,UAAS,UAAK2B,EAAIQ,aAAavI,OAAtB,sBAEvD,cAACgG,GAAA,EAAD,UACGqC,EAAgBN,OANXA,EAAI1L,IA1BJ,IAACA,MAqCRmM,EAMFC,QCjDHC,GAAY,SAACzL,GACjB,IAAQsF,EAA0DtF,EAA1DsF,IAAKC,EAAqDvF,EAArDuF,OAAQmF,EAA6C1K,EAA7C0K,QAASgB,EAAoC1L,EAApC0L,WAAYlG,EAAwBxF,EAAxBwF,YAAamC,EAAW3H,EAAX2H,OACvD,EAA0ChH,mBAAS,IAAnD,mBAAOgL,EAAP,KAAsBC,EAAtB,KASA,OACE,qCACE,cAACzP,EAAA,EAAD,CAAYC,QAAS,KAAMH,MAAO,CAACkP,UAAW,UAA9C,oBACA,eAACxG,EAAA,EAAD,CAAMC,WAAS,EAACC,WAAY,SAAU3I,eAAgB,SAAUyJ,QAAS,EAAzE,UACE,cAAChB,EAAA,EAAD,CAAMiB,MAAI,EAAV,SACE,cAACC,GAAA,EAAD,CAAWC,MAAO,eAAgBC,UAAQ,EAACI,MAAOb,EAAIuG,cAAgB,GAC3D7F,WAAY,CAAEC,UAAW,IAAMC,KAAM,OACrCG,SAAU,SAACC,GAAD,OAAOf,EAAO,6BAAID,GAAL,IAAUuG,aAAcvF,EAAEC,OAAOJ,cAErE,cAACxB,EAAA,EAAD,CAAMiB,MAAI,EAAV,SACE,cAACC,GAAA,EAAD,CAAWC,MAAO,gBAAiBC,UAAQ,EAACI,MAAOb,EAAIwG,eAAiB,GAC7D9F,WAAY,CAAEQ,UAAW,UAAWC,QAAS,SAAUR,UAAW,GAAKC,KAAM,OAC7EG,SAAU,SAACC,GAAD,OAAOf,EAAO,6BAAID,GAAL,IAAUwG,cAAexF,EAAEC,OAAOJ,cAEtE,cAACxB,EAAA,EAAD,CAAMiB,MAAI,EAAV,SACE,cAACC,GAAA,EAAD,CAAWc,QAAM,EAACb,MAAO,sBAAuB7J,MAAO,CAAC2K,SAAU,KACvDT,MAAOwF,EAAetF,SAvBX,SAACC,GAAD,OAAOsF,EAAiBtF,EAAEC,OAAOJ,QAsBvD,SArB2BX,EAAY1C,QAC7C,SAAA+D,GAAC,OAAIvB,EAAIyG,oBAAoBhF,WAAU,SAAAC,GAAC,OAAIA,EAAE5H,KAAOyH,EAAEzH,MAAM,KAsB7B6D,KAAI,SAACgE,GAAD,OAC1B,cAACC,GAAA,EAAD,CAA4Bf,MAAOc,EAAnC,SACGA,EAAOE,MADKF,EAAOE,aAM5B,cAACxC,EAAA,EAAD,CAAMiB,MAAI,EAAV,SACE,cAACpJ,EAAA,EAAD,CAAQJ,QAAS,YAAaL,MAAO,UAAWa,QA5B7B,kBACzB2I,EAAO,6BAAID,GAAL,IAAUyG,oBAAqBzG,EAAIyG,oBAAoB3E,OAAO,CAACuE,QA2B/D,mBAEF,cAAChH,EAAA,EAAD,CAAMiB,MAAI,EAACyB,GAAI,GAAf,SACG/B,EAAIyG,oBAAoB9I,KAAI,SAACqE,GAAD,OAC3B,cAACC,GAAA,EAAD,CAAoBzB,MAAOwB,EAAKH,KAAMK,SAAU,kBAC9CjC,EAAO,6BAAID,GAAL,IAAUyG,oBAAqBzG,EAAIyG,oBAAoBjJ,QAAO,SAAA2E,GAAC,OAAIA,EAAErI,KAAOkI,EAAKlI,WAD9EkI,EAAKlI,aAKpBuI,GACA,qCACE,eAACxL,EAAA,EAAD,CAAYC,QAAS,KAAMH,MAAO,CAACkP,UAAW,SAAUa,UAAW,OAAQ7G,WAAY,SAAvF,UACE,cAACkE,GAAA,EAAD,CAAStB,MAAO,gBAAiBuB,UAAW,OAA5C,SACE,cAACpE,EAAA,EAAD,CAAYzI,UAAWC,IAAMC,GAAE,iBAAY2I,EAAIlG,IAA/C,SACE,cAAC,IAAD,QAHN,cAQA,cAAC,GAAD,CAAakG,IAAKA,EAAKoF,QAASA,EAASgB,WAAYA,WASzDO,GAAc,SAACjM,GACnB,IAAQ2H,EACiD3H,EADjD2H,OAAQ1H,EACyCD,EADzCC,KAAMC,EACmCF,EADnCE,QAASoF,EAC0BtF,EAD1BsF,IAAK4G,EACqBlM,EADrBkM,WAAYxB,EACS1K,EADT0K,QAASgB,EACA1L,EADA0L,WACvDlG,EAAuDxF,EAAvDwF,YAAakD,EAA0C1I,EAA1C0I,YAAaI,EAA6B9I,EAA7B8I,YAAalB,EAAgB5H,EAAhB4H,YACzC,EAA4CjH,mBAC1C,CAACkL,aAAc,GAAIC,cAAe,KAAMC,oBAAqB,KAD/D,mBAAOI,EAAP,KAAuBC,EAAvB,KAGMrE,EAASJ,EAAU,eAAiB,aAMpCvH,EAAQ,kBAAMF,GAAQ,IAgC5B,OARA8D,qBAAU,WACJ/D,IAAS0H,EACXyE,EAAkB9G,GACTrF,GAAQ0H,GACjByE,EAAkB,CAACP,aAAc,GAAIC,cAAe,KAAMC,oBAAqB,OAEhF,CAAC9L,IAGF,qBAAK,cAAY,cAAjB,SACE,eAACI,GAAA,EAAD,CAAQJ,KAAMA,EACNK,QAASF,EACT,kBAAgB,oBAChB4H,WAAS,EAACC,SAAU,KAH5B,UAIE,cAAC1H,GAAA,EAAD,CAAanB,GAAG,oBAAhB,SAAqC2I,IACrC,cAACvH,GAAA,EAAD,UACE,cAAC,GAAD,CAAW8E,IAAK6G,EAAgB5G,OAAQ6G,EAAmB1B,QAASA,EAASgB,WAAYA,EAC9ElG,YAAaA,EAAamC,OAAQA,MAE/C,eAAClH,GAAA,EAAD,WACE,cAACjE,EAAA,EAAD,CAAQJ,QAAS,YAAaQ,QAASwD,EAAOrE,MAAO,UAArD,oBACA,cAACS,EAAA,EAAD,CAAQJ,QAAS,YAAaQ,QA3CrB,WACf,IAAMqC,EAAI,6BAAOkN,GAAP,IAAuBJ,oBAAqBI,EAAeJ,oBAAoB9I,KAAI,SAAAoJ,GAAE,OAAIA,EAAGjN,QAElGuI,EACFtJ,EAAWW,KAAK9B,EAAa+B,GAAMgD,MAAK,SAACmG,GACvC,IAAMkE,EAAS,6BAAOlE,GAAP,IAAe2D,oBAAqBI,EAAeJ,sBAClEG,GAAW,SAAAK,GAAO,OAAIA,EAAQnF,OAAO,CAACkF,OACtC5D,EAAY4D,GACZxD,GAAY,MACX,SAAA/E,GAAK,OAAI6D,EAAY7D,EAAM5D,YAAUgC,QAAQ/B,GAEhD/B,EAAWa,IAAIhC,EAAa+B,GAAMgD,MAAK,SAAChD,GACtCiN,GAAW,SAAAK,GACT,IAAMlE,EAAWkE,EAAQxF,WAAU,SAAAyF,GAAG,OAAIA,EAAIpN,KAAO+M,EAAe/M,MAC9DqN,EAAcF,EAAQzI,MAAM,GAElC,OADA2I,EAAYpE,GAAY8D,EACjBM,QAER,SAAA1I,GAAK,OAAI6D,EAAY7D,EAAM5D,YAAUgC,QAAQ/B,IAyBKrE,MAAO,UAChDmM,UAjDNiE,EAAeN,eAAiBM,EAAeL,cAgDjD,6BAUVG,GAAYpP,aAAe,GAEZoP,UCzITS,GAAY,SAAC1M,GACjB,IAAO0K,EAAuF1K,EAAvF0K,QAASgB,EAA8E1L,EAA9E0L,WAAYa,EAAkEvM,EAAlEuM,QAASL,EAAyDlM,EAAzDkM,WAAY1G,EAA6CxF,EAA7CwF,YAAagD,EAAgCxI,EAAhCwI,gBAAiBZ,EAAe5H,EAAf4H,YAC/E,EAAgCjH,mBAAS,IAAzC,mBAAO8H,EAAP,KAAiBC,EAAjB,KAEA,EAA8B/H,oBAAS,GAAvC,mBAAOgI,EAAP,KAAgBC,EAAhB,KAEA,EAAgCjI,oBAAS,GAAzC,mBAAOkI,EAAP,KAAiBC,EAAjB,KA2CA,OACE,sBAAK,cAAY,YAAjB,UACE,eAACC,GAAA,EAAD,CAAM9M,MAAO,CAAC+I,OAAO,uBAArB,UAvCmB,WACrB,IAD2B,EACvBgE,EAAY,GADW,cAGRuD,GAHQ,yBAGlBxB,EAHkB,QAInBF,EAAkBH,EAAQ5H,QAAO,SAAAgI,GAAG,OAAIA,EAAIC,OAAO3L,KAAO2L,EAAO3L,MACjEuN,EAAqB9B,EAAgB5H,KAAI,SAAA6H,GAAG,OAAIA,EAAI8B,qBAC1D5D,EAAUvF,KACR,eAACwF,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAcvJ,QAAS,QAAUoL,EAAOe,cAAgB,MAAQf,EAAOc,aACzD1C,UAAW0B,EAAgB9H,OAAO1D,WAAa,iBAAmBsN,EAAmBE,KAAK,SACvGrE,GACC,eAACY,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAStB,MAAO,cAAeuB,UAAW,OAA1C,SACE,cAACpE,EAAA,EAAD,CAAYqE,KAAM,MAAO3M,QAAS,kBAlBzB,SAACmO,GACtBrC,EAAYqC,GACZjC,GAAY,GAgBwCU,CAAeuB,IAAvD,SACE,cAAC,IAAD,QAGJ,cAAC1B,GAAA,EAAD,CAAStB,MAAO,gBAAiBuB,UAAW,QAA5C,SACE,cAACpE,EAAA,EAAD,CAAYqE,KAAM,MACN3M,QAAS,WACPyB,EAAWiB,OAAOpC,EAAa6N,EAAO3L,IAAI6C,MAAK,SAAAhD,GAC7CiN,GAAW,SAAAK,GAAO,OAAIA,EAAQzJ,QAAO,SAAA0J,GAAG,OAAIA,EAAIpN,KAAO2L,EAAO3L,YAC7D,SAAA2E,GAAK,OAAI6D,EAAY7D,EAAM5D,aAJ5C,SAME,cAAC,KAAD,aAjBK4K,EAAO3L,KAwBxB4J,EAAUvF,KAAK,cAACiG,GAAA,EAAD,qBAAyBqB,EAAO3L,OA5BjD,2BAA6B,IAHF,8BAkC3B,OAAO4J,EAMF8D,GACAtE,GACC,eAACS,GAAA,EAAD,CAAUW,QAAM,EAAChN,QAjDH,kBAAMgM,GAAW,IAiD/B,UACE,cAACiB,GAAA,EAAD,UAAc,cAAC,KAAD,MACd,cAACX,GAAA,EAAD,CAAcvJ,QAAS,cAFqB,aAMjD6I,GACC,qCACE,cAAC,GAAD,CAAab,QAAQ,EAAM1H,KAAM0I,EAASzI,QAAS0I,EAAYsD,WAAYA,EAC9D1G,YAAaA,EAAakG,WAAYA,EAAY9D,YAAaA,EAC/Dc,YAAaA,EAAaI,YAAaA,IACpD,cAAC,GAAD,CAAa7I,KAAM4I,EAAU3I,QAAS4I,EAAaxD,IAAKmD,EAAUyD,WAAYA,EACjE1G,YAAaA,EAAakF,QAASA,EAASgB,WAAYA,EAAY9D,YAAaA,WAUxG8E,GAAU7P,aAAe,GAEV6P,UClFTK,GAAY,WAChB,MAAwCpM,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA8CF,oBAAS,GAAvD,mBAAO6H,EAAP,KAAwBwE,EAAxB,KACA,EAA4BrM,oBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEA,EAAsCJ,mBAAS,IAA/C,mBAAO6E,EAAP,KAAoByH,EAApB,KACA,EAAsCtM,mBAAS,IAA/C,mBAAOW,EAAP,KAAoBC,EAApB,KACA,EAA8BZ,mBAAS,IAAvC,mBAAO+J,EAAP,KAAgBgB,EAAhB,KACA,EAA8B/K,mBAAS,IAAvC,mBAAO4L,EAAP,KAAgBL,EAAhB,KAEA,EAAkCvL,oBAAS,GAA3C,mBAAOiB,EAAP,KAAkBC,EAAlB,KACA,EAAwClB,mBAAS,IAAjD,mBAAOmB,EAAP,KAAqBC,EAArB,KAEMmL,EAAkB,SAAC/M,GACvB4B,EAAgB5B,GAChB0B,GAAa,IAGTK,EAAc,SAAC6B,GACe,QAA9BA,EAAM5D,QAAQ2D,MAAM,EAAG,GACzBjD,GAAgB,GAEhBqM,EAAgBnJ,EAAM5D,UAqB1B,OAjBA6D,qBAAU,WACWC,QAAQC,IAAI,CAAC7F,EAAWnD,IAAI6B,GAAkBsB,EAAWnD,IAAI8B,GAC9EqB,EAAWnD,IAAI+B,GAAcoB,EAAWnD,IAAIgC,KAEnC+E,MAAK,SAAAhD,GACdgO,EAAehO,EAAK,IACpBsC,EAAetC,EAAK,IACpByM,EAAWzM,EAAK,IAChBiN,EAAWjN,EAAK,IAChB8B,GAAU,KACTmB,GAEH7D,EAAWnD,IAAIuC,GAAkBwE,MAAK,eAAU,SAAC8B,GACb,QAA9BA,EAAM5D,QAAQ2D,MAAM,EAAG,IAAckJ,GAAmB,QAE7D,IAECpM,EAEA,sBAAK,cAAY,YAAjB,UACGrB,EAAY,cACZM,EAAoB,YAMzB,sBAAK,cAAY,YAAjB,UACE,eAAC8E,EAAA,EAAD,CAAMC,WAAS,EAACe,QAAS,EAAGzJ,eAAgB,SAA5C,UACE,eAACyI,EAAA,EAAD,CAAMC,WAAS,EAACgB,MAAI,EAACyB,GAAI,EAAG8F,UAAW,SAAvC,UACG5N,EAAY,iBAAkB,MAC/B,qBAAKtD,MAAO,CAACmR,QAAS,aAAtB,SACKtM,EAED,cAAC,GAAD,CAAgBQ,YAAaA,EAAaC,eAAgBA,EAAgBiE,YAAaA,EACvEgD,gBAAiBA,EAAiBZ,YAAasF,IAF/D,cAAC5I,GAAA,EAAD,SAKN,cAACoF,GAAA,EAAD,CAAS2D,YAAa,WAAYC,UAAQ,IAC1C,eAAC3I,EAAA,EAAD,CAAMC,WAAS,EAACgB,MAAI,EAACyB,GAAI,EAAG8F,UAAW,SAAvC,UACG5N,EAAY,eAAgB,MAC7B,qBAAKtD,MAAO,CAACmR,QAAS,aAAtB,SACKtM,EAED,cAAC,GAAD,CAAW4J,QAASA,EAASgB,WAAYA,EAAYa,QAASA,EAASL,WAAYA,EACxE1G,YAAaA,EAAagD,gBAAiBA,EAAiBZ,YAAasF,IAFpF,cAAC5I,GAAA,EAAD,YAMR,cAAC,GAAD,CAAarE,KAAM2B,EAAW1B,QAAS2B,EAAc1B,QAAS2B,QAOpEiL,GAAUlQ,aAAe,GAEVkQ,UCpFTQ,GAAY,WAChB,MAAsC5M,oBAAS,GAA/C,mBAAO6M,EAAP,KAAoBC,EAApB,KACMC,EAAe,CAAC,OAAQ,QAAS,aAEvC,EAAgC/M,mBAAS,IAAzC,mBAAOpC,EAAP,KAAiBoP,EAAjB,KACA,EAAgChN,mBAAS,IAAzC,mBAAOnC,EAAP,KAAiBoP,EAAjB,KACA,EAAsCjN,qBAAtC,mBAAOkN,EAAP,KAAoBC,EAApB,KAEA,EAAwCnN,mBAAS,IAAjD,mBAAOmB,EAAP,KAAqBC,EAArB,KACA,EAA4CpB,mBAAS,IAArD,mBAAOoN,EAAP,KAAuBC,EAAvB,KA8CM9L,EAAc,SAAC6B,GACnB4J,EAAY,IACZC,EAAY,IAEZ,IAAIzN,EAAU,UACoB,QAA9B4D,EAAM5D,QAAQ2D,MAAM,EAAG,KACzB3D,GAAYqN,EAAgBzD,GAAqCA,IAEjC,QAA9BhG,EAAM5D,QAAQ2D,MAAM,EAAG,IAAiB0J,IAC1CrN,GAAW,qEAEb4B,EAAgB5B,IA0ClB,OACE,sBAAK,cAAY,YAAjB,UACGZ,EAAaiO,EAAe,QAAU,+BACvC,sBAAKvR,MAAO,CAACuI,OAAQ,QAArB,UACqB,KAAjB1C,GACA,cAAC3F,EAAA,EAAD,CAAYJ,MAAO,QAASE,MAAO,CAACK,WAAY,QAAhD,SAA0DwF,IAEvC,KAAnBiM,GACA,cAAC5R,EAAA,EAAD,CAAYF,MAAO,CAACK,WAAY,QAAhC,SAA0CyR,OAG5CP,EA1GF,mCACE,eAAC7I,EAAA,EAAD,CAAMC,WAAS,EAACC,WAAY,SAAU3I,eAAgB,SAAUyJ,QAAS,EAAzE,UACE,cAAChB,EAAA,EAAD,CAAMiB,MAAI,EAACyB,GAAI,GAAf,SACE,cAACxB,GAAA,EAAD,CAAWE,UAAQ,EAACD,MAAO,QAASI,KAAM,OAC/BC,MAAO5H,GAAY,GAAI8H,SAAU,SAAA4H,GAAK,OAAIN,EAAYM,EAAM1H,OAAOJ,YAEhF,cAACxB,EAAA,EAAD,CAAMiB,MAAI,EAACyB,GAAI,GAAf,SACE,cAACxB,GAAA,EAAD,CAAWE,UAAQ,EAACD,MAAO,WAAYI,KAAM,WAClCC,MAAO3H,GAAY,GAAI6H,SAAU,SAAA4H,GAAK,OAAIL,EAAYK,EAAM1H,OAAOJ,iBASpF,mCACE,eAACxB,EAAA,EAAD,CAAMC,WAAS,EAACC,WAAY,SAAU3I,eAAgB,SAAUyJ,QAAS,EAAzE,UACE,cAAChB,EAAA,EAAD,CAAMiB,MAAI,EAACyB,GAAI,GAAf,SACE,cAACxB,GAAA,EAAD,CAAWE,UAAQ,EAACD,MAAO,QAASI,KAAM,OAAQC,MAAO5H,GAAY,GAC1D8H,SAAU,SAAAC,GAAC,OAAIqH,EAAYrH,EAAEC,OAAOJ,YAEjD,cAACxB,EAAA,EAAD,CAAMiB,MAAI,EAACyB,GAAI,GAAf,SACE,cAACxB,GAAA,EAAD,CAAWc,QAAM,EAACb,MAAO,yBAA0B7J,MAAO,CAAC2K,SAAU,KAC1DP,SAAU,SAAAC,GAAC,OAAIwH,EAAexH,EAAEC,OAAOJ,QADlD,SAEGuH,EAAazK,KAAI,SAACgE,GAAD,OAChB,cAACC,GAAA,EAAD,CAAuBf,MAAOc,EAA9B,SACGA,GADYA,UAMrB,cAACtC,EAAA,EAAD,CAAMiB,MAAI,EAACyB,GAAI,GAAf,SACE,cAACxB,GAAA,EAAD,CAAWE,UAAQ,EAACD,MAAO,qBAAsBI,KAAM,WAAYC,MAAO3H,GAAY,GAC3E6H,SAAU,SAAAC,GAAC,OAAIsH,EAAYtH,EAAEC,OAAOJ,iBAwErD,cAAC3J,EAAA,EAAD,CAAQT,MAAO,UAAWK,QAAS,YAAaH,MAAO,CAAC+P,UAAW,MAAOkC,YAAa,OAC/EtR,QApDK,WACfmF,EAAgB,IAChBiM,EAAkB,IACdR,EACFnP,EAAWC,aAAaC,EAAUC,GAAUyD,MAAK,SAAChD,GAChD5D,EAAU4D,GACVvD,OAAOC,SAASC,QAAO,MACtB,SAACmI,GACgC,QAA9BA,EAAM5D,QAAQ2D,MAAM,EAAG,GAEzBzF,EAAWa,IAAI3B,EACb,CAACgB,SAAU,OAAQC,SAAU,OAAQ2P,aAAc3P,IAAW,GAAOyD,MAAK,WAC1E5D,EAAWC,aAAa,OAAQE,GAAUyD,MAAK,SAAAhD,GAC7C5D,EAAU4D,GACVvD,OAAOC,SAASC,QAAO,KACtBsG,KACFA,GAEHA,EAAY6B,MAIhB1F,EAAWW,KAAK1B,EACd,CAAC8Q,cAAe7P,EAAU8P,mBAAoB7P,EAAU8P,aAAcT,IAAc5L,MAAK,SAAChD,GAC1F+O,EAAkBjE,MACjB7H,GAELyL,EAAY,IACZC,EAAY,KAuBV,oBAEA,cAACpR,EAAA,EAAD,CAAQT,MAAO,UAAWK,QAAS,YAC3BH,MAAO,CAAC+P,UAAW,OACnBpP,QAxBO,WACjBmF,EAAgB,IAChBiM,EAAkB,IAClBP,GAAgBD,GAChBG,EAAY,IACZC,EAAY,KAiBV,SAGIJ,EAAe,WAAa,wBAOtCD,GAAU1Q,aAAe,GAEV0Q,U,uCC9ITgB,GAAWC,aAAoBC,aAAY,CAC/C/O,QAAS,CACPC,QAAS,CACP+O,KAAM,e,mBCINC,GAAuB,SAAC3O,GAC5B,IAAQC,EAA6FD,EAA7FC,KAAMC,EAAuFF,EAAvFE,QAASoF,EAA8EtF,EAA9EsF,IAAKjD,EAAyErC,EAAzEqC,SAAUuM,EAA+D5O,EAA/D4O,YAAatN,EAAkDtB,EAAlDsB,YACnD,GADqGtB,EAArC6O,kBAAqC7O,EAAlB8O,cAC/BnO,sBAApD,mBAAOoO,EAAP,KAA2BC,EAA3B,KAEM5O,EAAQ,kBAAMF,GAAQ,IAwB5B,OAPA8D,qBAAU,WACG,MAAPsB,GACF0J,EAAsB1J,EAAI3C,cAE3B,CAAC2C,IAIF,qBAAK,cAAY,uBAAjB,SACE,eAACjF,GAAA,EAAD,CAAQJ,KAAMA,EAAMK,QAASF,EACrB4H,WAAS,EAACC,SAAU,KAD5B,UAEE,cAAC1H,GAAA,EAAD,8BACA,eAACC,GAAA,EAAD,WACU,MAAP8E,GACC,qCACE,eAACnJ,EAAA,EAAD,CAAYF,MAAO,CAACkP,UAAW,SAAU7O,WAAY,QAArD,UACGgJ,EAAIwG,cADP,IACuBxG,EAAIuG,gBAC3B,cAAC1P,EAAA,EAAD,CAAYF,MAAO,CAACkP,UAAW,UAA/B,SACG7F,EAAIsH,uBAGU,MAApBtL,EAAYsC,MACX,cAACiC,GAAA,EAAD,CAAWc,QAAM,EAACb,MAAO,aAAc7J,MAAO,CAAC2K,SAAU,KAC9CT,MAAO4I,EAAoB1I,SAtCrB,SAACC,GAC1B0I,EAAsB1I,EAAEC,OAAOJ,QAoCvB,SAEG8I,MAAMC,KAAK5N,EAAY6N,UAAUlM,KAAI,SAACN,GAAD,OACpC,cAACuE,GAAA,EAAD,CAA8Bf,MAAOxD,EAAWvD,GAAhD,SACGuD,EAAWyD,UADCzD,EAAWvD,YAOlC,eAACqB,GAAA,EAAD,WACE,cAACjE,EAAA,EAAD,CAAQJ,QAAS,YAAaQ,QAASwD,EAAvC,oBACA,cAAC5D,EAAA,EAAD,CAAQJ,QAAS,YAAaL,MAAO,UAC7Ba,QA9CC,WACf,IAAIwS,EAAyB/M,EAASQ,YAChCwM,EAAeD,EAAuBrI,WAAU,SAAAuI,GAAE,OAAIA,EAAGlQ,KAAOkG,EAAIlG,MAC1EgQ,EAAuBC,GAAc1M,WAAaoM,EAElD,IAAMQ,EAAclN,EACpBA,EAASQ,YAAcuM,EACvBR,EAAYW,GACZnP,KAsCiC8H,UAAW6G,EADtC,6BAUVJ,GAAqB9R,aAAe,GAErB8R,U,oBC/DTa,GAAe,WACnB,MAAgC7O,qBAAhC,mBAAiB8O,GAAjB,WACA,EAA4C9O,qBAA5C,mBAAO+O,EAAP,KAAuBC,EAAvB,KACA,EAAsChP,mBAAS,IAA/C,mBAAOW,EAAP,KAAoBC,EAApB,KACA,EAAgCZ,mBAAS,IAAzC,mBAAOa,EAAP,KAAiBC,EAAjB,KACA,EAAkDd,mBAAS,IAA3D,mBAAOkO,EAAP,KAA0Be,EAA1B,KACA,EAA0CjP,mBAAS,IAAnD,mBAAOmO,EAAP,KAAsBe,EAAtB,KACA,EAA4ClP,oBAAS,GAArD,mBAAOmP,EAAP,KAAuBC,EAAvB,KACA,EAA8BpP,qBAA9B,mBAAOqP,EAAP,KAAgBC,EAAhB,KACA,EAA4BtP,oBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAwCJ,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,GAArB,KAEA,GAA8CF,oBAAS,GAAvD,qBAAOuP,GAAP,MAAwBC,GAAxB,MACA,GAAkCxP,oBAAS,GAA3C,qBAAOyP,GAAP,MAAkBC,GAAlB,MACA,GAAkC1P,oBAAS,GAA3C,qBAAOiB,GAAP,MAAkBC,GAAlB,MACA,GAAwClB,mBAAS,IAAjD,qBAAOmB,GAAP,MAAqBC,GAArB,MAEQuO,GAAgBC,cAAhBD,YAEFpO,GAAc,SAAC6B,GACe,QAA9BA,EAAM5D,QAAQ2D,MAAM,EAAG,GACzBjD,IAAgB,IAEhBkB,GAAgBgC,EAAM5D,SACtB0B,IAAa,KAIX2O,GAAU,CACd,CAAEC,MAAO,KAAMC,WAAY,KAAMC,MAAM,GACvC,CAAEF,MAAO,eAAgBC,WAAY,SAAUE,KAAM,GACrD,CAAEH,MAAO,gBAAiBE,MAAM,GAChC,CAAEF,MAAO,oBAAqBC,WAAY,gBAAiBE,KAAM,GACjE,CAAEH,MAAO,sBAAuBC,WAAY,sBAAuBC,MAAM,GACzE,CAAEF,MAAO,sBAAuBC,WAAY,sBAAuBE,KAAM,GACzE,CAAEH,MAAO,OAAQI,WAAY,SAACC,GAC1B,OACE,cAAC5L,EAAA,EAAD,CAAYtI,QAAS,WACnBqT,EAAWa,EAAWxL,KACtByK,GAAkB,GAClBM,IAAa,IAHf,SAKE,cAAC,IAAD,OAGHO,KAAM,KA0Cb,GAfA5M,qBAAU,WACWC,QAAQC,IAAI,CAAC7F,EAAWnD,IAAIiC,EAAgBmT,GAAYjR,YACzEhB,EAAWnD,IAAI8B,GAAkBqB,EAAWnD,IAAI+B,GAAcoB,EAAWnD,IAAIkC,KAEpE6E,MAAK,SAAAhD,GACdwQ,EAAYxQ,EAAK,IACjB0Q,EAAkB1Q,EAAK,IACvBsC,EAAe,IAAIwP,IAAI9R,EAAK,GAAGgE,KAAI,SAAAkF,GAAG,MAAI,CAACA,EAAI/I,GAAI+I,QACnD1G,EAAY,IAAIsP,IAAI9R,EAAK,GAAGgE,KAAI,SAAAkF,GAAG,MAAI,CAACA,EAAI/I,GAAI+I,QAChDyH,EAAqB3Q,EAAK,GAAGsE,qBAC7BsM,EAAiB5Q,EAAK,GAAGmE,wBACzBrC,GAAU,MACTqD,MAAMlC,MACR,IAECtB,EACF,OACE,8BACGf,MAcP,OACE,sBAAK,cAAY,eAAjB,UACE,sBAAK5D,MAAO,CAAC2D,aAAc,SAAUoR,QAAS,OAAQC,cAAe,MAAO/U,eAAgB,gBAC1F2I,WAAY,WAAYxI,MAAO,OAAQ8I,WAAY,OAAQ+I,YAAa,QAD1E,UAEE,cAAC1R,EAAA,EAAD,CAAQJ,QAAS,YAAaH,MAAO,CAACiV,OAAQ,QAASzU,UAAWC,IAAMC,GAAI,IAA5E,kBACC4C,EAAY,iBACb,cAAC/C,EAAA,EAAD,CAAQJ,QAAS,YAAaH,MAAO,CAACiV,OAAQ,QAASnV,MAAO,UACtDmM,UAAWkI,GAAWxT,QAhBnB,WACfyB,EAAWa,IAAX,UAAkB/B,GAAlB,OAAkCmT,IAAeZ,GAAgB,GAAOzN,MAAK,SAAAhD,GAC3EkR,IAAmB,GACnBE,IAAa,GACbZ,EAAYxQ,GACZ0Q,EAAkB1Q,KACjBiD,KASC,uBAGF,qBAAKjG,MAAO,CAACiV,OAAQ,OAAQ7U,MAAO,OAAQmI,OAAQ,QAApD,SACI1D,EACC,cAAC,KAAD,CAAUuK,KAnEE,SAACxI,GACpB,IAAI5D,EAAO,GAEX,GAAsB,IAAlBuC,EAASoC,MAA+B,MAAjBpC,EAASoC,KAAc,CAAC,IAAD,gBACzBf,GADyB,IAChD,2BAAoC,CAAC,IAA5BM,EAA2B,QAC5BD,EAAU1B,EAAStG,IAAIiI,EAAWD,SAEpCiO,EAAkB,aACO,MAAzBhO,EAAWR,aACbwO,EAAkB7P,EAAYpG,IAAIiI,EAAWR,YAAYyD,UAGvDlD,GACFjE,EAAKwE,KAAK,CAACrE,GAAI+D,EAAW/D,GAAIyM,aAAc3I,EAAQ6H,OAAOc,aACzDC,cAAe5I,EAAQ6H,OAAOe,cAAec,kBAAmB1J,EAAQ0J,kBACxEjK,WAAYQ,EAAWR,WAAYyO,oBAAqBD,EACxDpF,oBAAqB7I,EAAQ6H,OAAOgB,uBAbM,+BAkBlD,OAAO9M,EA8CgBoS,CAAa3B,EAAe7M,aAAc2N,QAASA,GAASc,cAAY,IACtF,cAAChN,GAAA,EAAD,MAENxD,GACC,cAAC,GAAD,CAAsBb,KAAM6P,EAAgB5P,QAAS6P,EAAmBzK,IAAK0K,EAAS3N,SAAUqN,EAC1Ed,YAAae,EAAmBrO,YAAaA,EAC7CuN,kBAAmBA,EAAmBC,cAAeA,IAE7E,cAAC,GAAD,CAAa7O,KAAM2B,GAAW1B,QAAS2B,GAAc1B,QAAS2B,KAC9D,cAACyP,GAAA,EAAD,CAAUtR,KAAMiQ,GAAiBsB,iBAAkB,IAAMlR,QAAS,kBAAM6P,IAAmB,IAA3F,SACE,cAACsB,GAAA,EAAD,CAAOC,SAAU,UAAjB,+CAQRlC,GAAa3S,aAAe,GAEb2S,UC1ITmC,GAAuB,SAAC3R,GAC5B,IAAQC,EAA4BD,EAA5BC,KAAMC,EAAsBF,EAAtBE,QAAS0R,EAAa5R,EAAb4R,SACvB,EAAgCjR,mBAAS,CAACyJ,YAAa,OAAQF,WAAY,GAAIC,SAAU,KAAzF,mBAAOF,EAAP,KAAiB4H,EAAjB,KAqCMzR,EAAQ,kBAAMF,GAAQ,IAE5B,OACE,qBAAK,cAAY,uBAAjB,SACE,eAACG,GAAA,EAAD,CAAQJ,KAAMA,EAAMK,QAASF,EAA7B,UACE,cAACG,GAAA,EAAD,+BACA,cAACC,GAAA,EAAD,UAjCF,8BACE,eAACmE,EAAA,EAAD,CAAMC,WAAS,EAACC,WAAY,SAAU3I,eAAgB,SAAUyJ,QAAS,EAAzE,UACE,cAAChB,EAAA,EAAD,CAAMiB,MAAI,EAACyB,GAAI,EAAf,SACE,cAACxB,GAAA,EAAD,CAAWc,QAAM,EAACb,MAAO,MAAO7J,MAAO,CAAC2K,SAAU,IAAKT,MAAO8D,EAASG,YAC5D/D,SAAU,SAAA4H,GAAK,OAAI4D,EAAY,6BAAI5H,GAAL,IAAeG,YAAa6D,EAAM1H,OAAOJ,UADlF,SAEG2L,OAAOC,KAAKjI,IAAkB7G,KAAI,SAACgE,GAAD,OACjC,cAACC,GAAA,EAAD,CAAuBf,MAAOc,EAA9B,SACGA,GADYA,UAMrB,cAACtC,EAAA,EAAD,CAAMiB,MAAI,EAACyB,GAAI,EAAf,SACE,cAACxB,GAAA,EAAD,CAAWC,MAAO,aAAcI,KAAM,OAAQC,MAAO8D,EAASC,WACnD7D,SAAU,SAAA4H,GAAK,OAAI4D,EAAY,6BAAI5H,GAAL,IAAeC,WAAY+D,EAAM1H,OAAOJ,UACtE6L,gBAAiB,CAACC,QAAQ,GAAOjM,WAAY,CAACkM,KAAM,IAAKlK,WAAS,MAE/E,cAACrD,EAAA,EAAD,CAAMiB,MAAI,EAACyB,GAAI,EAAf,SACE,cAACxB,GAAA,EAAD,CAAWC,MAAO,WAAYI,KAAM,OAAQC,MAAO8D,EAASE,SACjD9D,SAAU,SAAA4H,GAAK,OAAI4D,EAAY,6BAAI5H,GAAL,IAAeE,SAAU8D,EAAM1H,OAAOJ,UACpE6L,gBAAiB,CAACC,QAAQ,GAAOjM,WAAY,CAACkM,KAAM,IAAKlK,WAAS,aAgBjF,eAACvH,GAAA,EAAD,WACE,cAACjE,EAAA,EAAD,CAAQJ,QAAS,YAAcQ,QAASwD,EAAxC,oBACA,cAAC5D,EAAA,EAAD,CAAQJ,QAAS,YAAaL,MAAO,UAC7BmM,SAAkC,KAAxB+B,EAASC,YAA2C,KAAtBD,EAASE,SACjDvN,QAhDO,WACrBgV,EAAS3H,GACT/J,GAAQ,GACR2R,EAAY,CAACzH,YAAa,OAAQF,WAAY,GAAIC,SAAU,MA2CtD,6BAWVwH,GAAqB9U,aAAe,GAErB8U,UClDTQ,GAAc,WAClB,MAA4BxR,qBAA5B,mBAAOoK,EAAP,KAAeqH,EAAf,KACA,EAAgCzR,mBAAS,IAAzC,mBAAOa,EAAP,KAAiBC,EAAjB,KAEA,EAAwCd,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA4BF,oBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA8CJ,qBAA9C,mBAAOgK,EAAP,KAAwBC,EAAxB,KACA,EAAgDjK,qBAAhD,mBAAO0R,EAAP,KAAyBC,EAAzB,KAEA,EAA8B3R,oBAAS,GAAvC,mBAAOgI,EAAP,KAAgBC,EAAhB,KACA,EAA4BjI,mBAAS,IAArC,mBAAO4R,EAAP,KAAeC,EAAf,KACA,EAAkC7R,oBAAS,GAA3C,mBAAOiB,EAAP,KAAkBC,EAAlB,KACA,EAAwClB,mBAAS,IAAjD,mBAAOmB,EAAP,KAAqBC,EAArB,KAEQ0Q,GAAclC,cAAdkC,UAEFvQ,GAAc,SAAC6B,GACe,QAA9BA,EAAM5D,QAAQ2D,MAAM,EAAG,GACzBjD,GAAgB,IAEhBkB,EAAgB,sBAAD,OAAuBgC,EAAM5D,UAC5C0B,GAAa,KAIjBmC,qBAAU,WACWC,QAAQC,IAAI,CAAC7F,EAAWnD,IAAX,UAAkBgC,GAAlB,OAAgCuV,KAAcpU,EAAWnD,IAAI+B,KAElFgF,MAAK,SAAAhD,GACdmT,EAAUnT,EAAK,IACfwC,EAAYxC,EAAK,GAAG6D,QAAO,SAAAI,GAAO,OAAIA,EAAQ6H,OAAO3L,KAAOH,EAAK,GAAGG,OACpE2B,GAAU,KACTmB,MACF,IAEH,IAQMwQ,GAAgB,WACpBrU,EAAWiB,OAAOrC,EAAa0N,GAAiB1I,MAAK,SAAAhD,GACnDwC,GAAY,SAAAD,GAAQ,OAAIA,EAASsB,QAAO,SAAA6P,GAAC,OAAIA,EAAEvT,KAAOuL,QACtDC,EAAmB,QAClB1I,KAGC0Q,GAAgB,SAAC1P,GAChB2P,GAAgB3P,GAIrB7E,EAAWa,IAAIjC,EAAaiG,GAASjB,MAAK,SAAChD,GACzCwC,GAAY,SAACD,GACX,IAAM6G,EAAW7G,EAASuF,WAAU,SAAA4L,GAAC,OAAIA,EAAEvT,KAAOuL,KAC5CmI,EAAetR,EAASsC,MAAM,GAEpC,OADAgP,EAAazK,GAAYpJ,EAClB6T,KAETC,QAAQC,IAAIrI,GACZoI,QAAQC,IAAIxR,KACXU,IAZDA,GAAY,CAAC/B,QAAS,iDAepB0S,GAAkB,SAAC3P,GACvB,IAAIW,GAAS,EA+Bb,OA5BAiO,OAAOC,KAAKjI,IAAkBpH,SAAQ,SAAAuQ,GACpC,IAAMC,EAAahQ,EAAQoI,aAAaxI,QAAO,SAAAqQ,GAAE,OAAIA,EAAG/I,cAAgB6I,KACxE,GAAIC,EAAWnQ,OAAS,EAAG,CACzB,IAAIqQ,EAAgB,GAqBpB,GAlBAF,EAAWxQ,SAAQ,SAAA2Q,GACjBD,EAAc3P,KAAK,CAAC4G,GAAoBgJ,EAAYnJ,YAAaG,GAAoBgJ,EAAYlJ,eV/EnF,SAACmJ,EAAKC,GAC5B,IAAK,IAAI9J,EAAI,EAAGA,EAAI6J,EAAIvQ,OAAS,EAAG0G,IAClC8J,EAAKD,EAAI7J,GAAI6J,EAAI7J,EAAI,IUwFjB+J,CAPAJ,EAAgBA,EAAcK,MAAK,SAACC,EAAIC,GACtC,OAAID,EAAG,GAAKC,EAAG,GAAW,EACtBA,EAAG,GAAKD,EAAG,IAAY,EACpB,MAIe,SAACE,EAAMC,GACzBA,EAAK,GAAKD,EAAK,IAAMC,EAAK,GAAKD,EAAK,KACtC/P,GAAS,OAIRA,EAAQ,OAAOA,MAIjBA,GA2GT,OAAIjD,EACF,8BACGf,EAAoB,kBAKvB,sBAAK,cAAY,cAAjB,UACKiB,EACD,qCACGvB,EAAY,kBAAD,OAAmBwL,EAAOe,cAA1B,YAA2Cf,EAAOc,aAAlD,MACZ,cAAC1P,EAAA,EAAD,CAAYF,MAAO,CAAC2D,aAAc,QAAlC,4DAxFJ,sBAAK3D,MAAO,CAAC2D,aAAc,QAA3B,UACE,cAACyJ,GAAA,EAAD,CAAStB,MAAO,kBAAmBuB,UAAW,OAA9C,SACE,cAACpE,EAAA,EAAD,CAAYtI,QAAS,WACnB4V,EAAU,UACV5J,GAAW,IAFb,SAIE,cAAC,KAAD,QAGJ,cAAC/C,GAAA,EAAD,CAAWc,QAAM,EAACb,MAAO,WAAY7J,MAAO,CAAC2K,SAAU,IAAKpC,OAAQ,aACzD2B,MAAOwE,GAAmB,GAAItE,SAAU,SAACC,GAAD,OAAOsE,EAAmBtE,EAAEC,OAAOJ,QADtF,SAEG3E,EAASyB,KAAI,SAACgE,GAAD,OACZ,cAACC,GAAA,EAAD,CAA0Bf,MAAOc,EAAO7H,GAAxC,2BACc6H,EAAO7H,KADN6H,EAAO7H,SAK1B,cAACiK,GAAA,EAAD,CAAStB,MAAO,6BAA8BuB,UAAW,QAAzD,SACE,cAACpE,EAAA,EAAD,CAAYtI,QAAS,WACnB8V,MADF,SAGE,cAAC,KAAD,WAqEF,cAAChJ,GAAA,EAAD,IACoB,MAAnBiB,GACD,eAAC5B,GAAA,EAAD,CAAM9M,MAAO,CAACI,MAAO,MAAOmI,OAAQ,QAApC,UAhEqB,WAC3B,IAAIsP,EAAQ,GAENrL,EAAWjH,EAASuS,MAAK,SAAApB,GAAC,OAAIA,EAAEvT,KAAOuL,KAE7C,GAAgB,MAAZlC,EAAkB,CACpB,IAAMuL,EAAQvL,EAAS6C,aACnB0I,EAAMjR,OAAS,GACjBiR,EAAMtR,SAAQ,SAAA4H,GACZwJ,EAAMrQ,KACJ,eAACwF,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAcvJ,QAASqK,GAAiBM,KACxC,eAAClB,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAStB,MAAO,gBAAiBuB,UAAW,OAA5C,SACE,cAACpE,EAAA,EAAD,CAAYtI,QAAS,WACnB4V,EAAU,QACVF,EAAoBhI,EAAKlL,IACzBwJ,GAAW,IAHb,SAKE,cAAC,IAAD,QAGJ,cAACS,GAAA,EAAD,CAAStB,MAAO,kBAAmBuB,UAAW,QAA9C,SACE,cAACpE,EAAA,EAAD,CAAYtI,QAAS,WACnB0V,EAAoBhI,EAAKlL,IACzB,IAAMqJ,EAAWjH,EAASuS,MAAK,SAAApB,GAAC,OAAIhI,IAAoBgI,EAAEvT,MAC1D,GAAgB,MAAZqJ,EAAkB,CACpB,IAAMvF,EAAO,6BAAOuF,GAAP,IAAiBsC,OAAQtC,EAASsC,OAAO3L,GACpDkM,aAAc7C,EAAS6C,aAAaxI,QAAO,SAAAqQ,GAAE,OAAIA,EAAG/T,KAAOkL,EAAKlL,QAC9B,IAAhC8D,EAAQoI,aAAavI,OACvB2P,KAEAE,GAAc1P,KATpB,SAaE,cAAC,KAAD,aA1BOoH,EAAKlL,QAoC5B,OAAO0U,EAmBEG,GACD,cAAC5K,GAAA,EAAD,CAAStB,MAAO,mBAAhB,SACE,cAAC7C,EAAA,EAAD,CAAYtI,QAAS,WACnB4V,EAAU,OACV5J,GAAW,IAFb,SAIE,cAAC,KAAD,WAKN,qBAAK3M,MAAO,CAAC+P,UAAW,UAAxB,SACE,cAACxP,EAAA,EAAD,CAAQJ,QAAS,YAAaL,MAAO,UAAWU,UAAWC,IAAMC,GAAI,UAArE,6BAEF,cAAC,GAAD,CAAsBsD,KAAM0I,EAASzI,QAAS0I,EAAYgJ,SAtI3C,SAAC/N,GAGtB,GAFAkP,QAAQC,IAAInP,GAEG,WAAX0O,EAtEiB2B,EAuELrQ,EAtEhBxF,EAAWW,KAAK/B,EAAa,CAAC8N,OAAQA,EAAO3L,GAAIkM,aAAc,CAAC4I,KAC7DjS,MAAK,SAAAhD,GACJwC,GAAY,SAAAD,GAAQ,OAAIA,EAAS4F,OAAO,CAACnI,OACzC2L,EAAmB3L,EAAKG,MACvB8C,SAmEE,GAAe,QAAXqQ,EAAkB,CAC3B,IAAM9J,EAAWjH,EAASuS,MAAK,SAAApB,GAAC,OAAIhI,IAAoBgI,EAAEvT,MAC1D,GAAgB,MAAZqJ,EAAkB,CACpB,IAAMvF,EAAO,6BAAOuF,GAAP,IAAiBsC,OAAQtC,EAASsC,OAAO3L,KACtD8D,EAAQoI,aAAa7H,KAAKI,GAC1B+O,GAAc1P,SAEX,GAAe,SAAXqP,EAAmB,CAC5B,IAAM9J,EAAWjH,EAASuS,MAAK,SAAApB,GAAC,OAAIhI,IAAoBgI,EAAEvT,MAC1D,GAAgB,MAAZqJ,EAAkB,CACpB,IAAMvF,EAAO,6BAAOuF,GAAP,IAAiBsC,OAAQtC,EAASsC,OAAO3L,KACtDyE,EAAM,6BAAOA,GAAP,IAAezE,GAAIiT,IACzBnP,EAAQoI,aAAepI,EAAQoI,aAAarI,KAAI,SAAAkQ,GAAE,OAAKA,EAAG/T,KAAOiT,EAAoBxO,EAASsP,KAC9FP,GAAc1P,SAGhB6P,QAAQhP,MAAM,qDAxFI,IAACmQ,QAmLN,cAAC5P,GAAA,EAAD,IAyBb,cAAC,GAAD,CAAarE,KAAM2B,EAAW1B,QAAS2B,EAAc1B,QAAS2B,QAOpEqQ,GAAYtV,aAAe,GAEZsV,UCrPAgC,ILhBaC,GKgBbD,ILhBaC,GKD5B,WACE,OACE,qCACE,cAAC,EAAD,IACA,qBAAKC,UAAW,UAAhB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAM,IAAKC,QAASvZ,IAAa,cAAC,GAAD,IAAoB,cAAC,IAAD,CAAU2B,GAAI,aAC1E,cAAC,IAAD,CAAO2X,KAAM,qBAAsBC,QAASvZ,IAAa,cAAC,GAAD,IAAmB,cAAC,IAAD,CAAU2B,GAAI,aAC1F,cAAC,IAAD,CAAO2X,KAAM,SAAUC,QAASvZ,IAAa,cAAC,GAAD,IAAgB,cAAC,IAAD,CAAU2B,GAAI,aAC3E,cAAC,IAAD,CAAO2X,KAAM,oBAAqBC,QAASvZ,IAAa,cAAC,GAAD,IAAkB,cAAC,IAAD,CAAU2B,GAAI,aACxF,cAAC,IAAD,CAAO2X,KAAM,SAAUC,QAAUvZ,IAA6B,cAAC,IAAD,CAAU2B,GAAI,MAA9B,cAAC,GAAD,eLTf,SAAAqD,GACvC,OACE,eAAC,KAAD,CAAkBwU,MAAOjG,GAAzB,UACE,cAACkG,GAAA,EAAD,IACA,cAACL,GAAD,gBAAepU,SMLN0U,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB3S,MAAK,YAAkD,IAA/C4S,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.5be218c7.chunk.js","sourcesContent":["import Cookies from 'js-cookie';\n\nconst getToken = () => {\n  return Cookies.get('token');\n};\n\nconst clearToken = () => {\n  Cookies.remove('token');\n};\n\nconst saveToken = (userToken) => {\n  Cookies.set('token', userToken.token);\n};\n\nexport { getToken, clearToken, saveToken };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Link} from \"react-router-dom\";\nimport {clearToken, getToken} from \"../../auth\";\n\nconst logout = () => {\n  clearToken();\n  window.location.reload(false);\n};\n\nconst MainNavbar = () => (\n  <div data-testid=\"MainNavbar\">\n    <AppBar color={\"primary\"}>\n      <Toolbar style={{justifyContent: \"space-evenly\"}}>\n        <Typography variant=\"h2\" style={{width: '75%', fontWeight: \"bolder\", fontStyle: \"italic\"}}>\n          ADTAA\n        </Typography>\n        <Button color={\"default\"} variant={\"contained\"} component={Link} to={'/'}>Assistant</Button>\n        <Button color={\"default\"} variant={\"contained\"} component={Link} to={'/setup'}>Setup</Button>\n        {getToken() ?\n          <Button color={\"default\"} variant={\"contained\"} onClick={logout}>Logout</Button> :\n          <Button color={\"default\"} variant={\"contained\"} component={Link} to={'/login'}>Login</Button>\n        }\n      </Toolbar>\n    </AppBar>\n  </div>\n);\n\nMainNavbar.propTypes = {};\n\nMainNavbar.defaultProps = {};\n\nexport default MainNavbar;\n","export const API_URL = '/api/',\n    URL_DISCIPLINES = `${API_URL}discipline/`,\n    URL_INSTRUCTORS = `${API_URL}instructor/`,\n    URL_TIMESLOT = `${API_URL}timeslot/`,\n    URL_CLASSES = `${API_URL}section/`,\n    URL_COURSES = `${API_URL}course/`,\n    URL_SOLUTIONS = `${API_URL}solution/`,\n    URL_SOLUTION_CONSTRAINT_MAP = `${API_URL}solution/constraintmap/`,\n    URL_AUTH = `${API_URL}auth/token/`,\n    URL_CREATE_REGISTRATION_REQUEST = `${API_URL}registrationrequest/create/`,\n    URL_CHANGE_PASSWORD = `${API_URL}auth/changepassword/`,\n    URL_CHANGES = `${API_URL}changes/`,\n    URL_WRITE_ACCESS = `${API_URL}writeaccess/`;\n","import {clearToken, getToken} from \"./auth\";\nimport {URL_AUTH, URL_CHANGE_PASSWORD} from \"./urls\";\n\nfunction catchErrorResponse(response) {\n  if (response.status === 401 && getToken()) {\n    clearToken();\n  }\n\n  if (response.status >= 400 && response.status < 600) {\n    throw new Error(`${response.status} - ${response.statusText}`);\n  }\n}\n\nconst injectHeader = (options, ignoreAuth=false) => {\n  let headers = {};\n\n  const addJsonHeader = options.method === 'POST' || options.method === 'PUT';\n  const token = getToken();\n\n  if (!addJsonHeader && !token) {\n    return options;\n  }\n\n  if (addJsonHeader) {\n    headers['Content-Type'] = 'application/json';\n  }\n  if (token && !ignoreAuth) {\n    headers['Authorization'] = `Token ${token}`;\n  }\n  options.headers = headers;\n\n  return options;\n};\n\nconst APIService = {\n  authenticate: async (username, password) => {\n    const options = {method: 'POST', body: JSON.stringify({username: username, password: password})};\n    const response = await fetch(URL_AUTH, injectHeader(options, true));\n    catchErrorResponse(response);\n    return response.json();\n  },\n\n  get: async (url) => {\n    const options = { method: 'GET' };\n    const response = await fetch(url, injectHeader(options));\n    catchErrorResponse(response);\n    return response.json();\n  },\n\n  post: async (url, data, ignoreAuth=false) => {\n    const options = { method: 'POST', body: JSON.stringify(data) };\n    const response = await fetch(url, injectHeader(options, ignoreAuth));\n    catchErrorResponse(response);\n    return response.json();\n  },\n\n  put: async (url, data, dataHasID=true) => {\n    const options = { method: 'PUT', body: JSON.stringify(data) };\n    if (dataHasID) url += data.id.toString();\n    const response = await fetch(url, injectHeader(options));\n    catchErrorResponse(response);\n    return (url === URL_CHANGE_PASSWORD) ? response : response.json();\n  },\n\n  delete: async (url, id) => {\n    const options = { method: 'DELETE' };\n    const response = await fetch(url + id.toString(), injectHeader(options));\n    catchErrorResponse(response);\n    return response;\n  }\n}\n\nexport default APIService;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\n\n\nconst PageHeading = (text, variant='h3') => (\n  <Typography variant={variant} style={{color: useTheme().palette.primary, fontWeight: \"bold\", marginBottom: \"0.5em\"}}>\n    {text}\n  </Typography>\n);\n\n\nconst UnauthorizedMessage = (page='current') => (\n  <Typography>\n    Your account is not authorized to access the {page} page. Only administrators can make changes to this information.\n    If you believe you should have access to this page, please contact an administrator or supervisor to correct this.\n  </Typography>\n);\n\n\nexport { PageHeading, UnauthorizedMessage };\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nconst ErrorDialog = (props) => {\r\n  const { open, setOpen, message } = props;\r\n\r\n  const close = () => setOpen(false);\r\n\r\n  return (\r\n    <div data-testid=\"ErrorDialog\">\r\n      <Dialog open={open} onClose={close}>\r\n        <DialogTitle>Error</DialogTitle>\r\n        <DialogContent>\r\n          {message}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button variant={\"contained\"} color={\"primary\"} onClick={close}>Ok</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nErrorDialog.propTypes = {};\r\n\r\nErrorDialog.defaultProps = {};\r\n\r\nexport default ErrorDialog;\r\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\"\nimport APIService from \"../../APIService\";\nimport {URL_CHANGES, URL_CLASSES, URL_INSTRUCTORS, URL_SOLUTION_CONSTRAINT_MAP, URL_SOLUTIONS} from \"../../urls\";\nimport Button from \"@material-ui/core/Button\";\nimport {Link} from \"react-router-dom\";\nimport {PageHeading, UnauthorizedMessage} from \"../Utility/text-styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport ErrorDialog from \"../Utility/ErrorDialog/ErrorDialog\";\n\nconst AssistantPage = () => {\n  const [unauthorized, setUnauthorized] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  const [changes, setChanges] = useState(false);\n  const [runningScheduler, setRunningScheduler] = useState(false);\n\n  const [solutions, setSolutions] = useState([]);\n  const [instructors, setInstructors] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [constraintMap, setConstraintMap] = useState({});\n\n  const [errorOpen, setErrorOpen] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const runScheduler = () => {\n    setLoaded(false);\n    setRunningScheduler(true);\n    setSolutions([]);\n    APIService.post(URL_SOLUTIONS).then((data) => {\n      if (data) {\n        setSolutions(data);\n      }\n    }, handleError).finally(() => {\n      setLoaded(true);\n      setRunningScheduler(false);\n      setChanges(false);\n    });\n  };\n\n  const runSchedulerSection = () => {\n    let result = (<br />);\n\n    if (instructors.length === 0 || sections.length === 0) {\n      result = (\n        <>\n          <Typography>Welcome to ADTAA! To get started, classes and instructors must be defined to generate schedules\n            from. Please use the button below to go to the setup page.</Typography>\n          <br />\n          <Button color={\"primary\"} variant={\"contained\"} component={Link} to={'/setup'}>Go to Setup</Button>\n        </>\n      );\n    } else if (solutions.length === 0) {\n      result = (\n        <>\n          <Typography>No solutions have been generated.</Typography>\n          <br />\n          <Button variant={\"contained\"} color={\"primary\"} onClick={runScheduler}>\n            Run Scheduler\n          </Button>\n        </>\n      );\n    }\n\n    return result;\n  };\n\n  const getConstraintViolations = (schedule) => {\n    let assignmentViolations = 0;\n    let disciplineViolations = 0;\n    let overlapViolations = [];\n\n    let assignmentMap = {};\n\n    instructors.forEach(instructor => {\n      const assigned = schedule.assignments.filter(a => a.instructor === instructor.id);\n      const count = assigned.length;\n      if (count > instructor.maxSections) {\n        assignmentViolations += 1;\n      }\n      assignmentMap[instructor.id] = assigned.map(a => a.section);\n    });\n\n    schedule.assignments.forEach(assignment => {\n      if (assignment.instructor != null) {\n        const approved = constraintMap.discipline_overlap_map[assignment.section];\n        if (!approved.includes(assignment.instructor)) {\n          disciplineViolations += 1;\n        }\n\n        const overlap = constraintMap.section_overlap_map[assignment.section];\n        if (assignmentMap[assignment.instructor].some(section => overlap.includes(section))) {\n          overlapViolations.push(assignment.instructor);\n        }\n      }\n    });\n    const conflictCount = new Set(overlapViolations).size;\n\n    let result = '';\n    if (assignmentViolations)\n      result += `${assignmentViolations} instructor${(assignmentViolations < 2) ? '' : 's'} assigned over limit, `;\n    if (disciplineViolations)\n      result += `${disciplineViolations} assignment${(disciplineViolations < 2) ? '' : 's'} with unqualified instructors, `;\n    if (conflictCount)\n      result += `${conflictCount} instructor${(conflictCount < 2) ? '' : 's'} with schedule conflicts, `;\n    return (result.length > 0) ? result.slice(0, -2) : 'None';\n  }\n\n  const generateCards = () => {\n    let cards = [];\n    let count = 1;\n\n    for (let schedule of solutions.slice(0, 12)) {\n      const border = (schedule.assignment_count === schedule.assignments.length) ?\n        '5px #008800 solid' : '1px black solid';\n      cards.push(\n        <Card variant={\"outlined\"} key={schedule.id} style={{width: '20%', margin: '1em', border: border}}>\n          <CardContent>\n            <Typography>Option {count}</Typography>\n            <Typography>Covered Classes: {schedule.assignment_count}/{schedule.assignments.length}</Typography>\n            <Typography>Issues: {getConstraintViolations(schedule)}</Typography>\n          </CardContent>\n          <CardActions>\n            <IconButton style={{marginLeft: \"auto\"}} component={Link} to={`/edit/${schedule.id}`}>\n              <EditIcon />\n            </IconButton>\n          </CardActions>\n        </Card>\n      );\n      count += 1;\n    }\n\n    return cards;\n  }\n\n  const handleError = (error) => {\n    if (error.message.slice(0, 3) === '403') {\n      setUnauthorized(true);\n    } else {\n      setErrorMessage(error.message);\n      setErrorOpen(true);\n    }\n  };\n\n  useEffect(() => {\n    const allPromise = Promise.all([\n      APIService.get(URL_SOLUTIONS), APIService.get(URL_INSTRUCTORS), APIService.get(URL_CLASSES),\n      APIService.get(URL_SOLUTION_CONSTRAINT_MAP), APIService.get(URL_CHANGES)\n    ]);\n\n    allPromise.then(data => {\n      setSolutions(data[0]);\n      setInstructors(data[1]);\n      setSections(data[2]);\n      setConstraintMap(data[3]);\n      setChanges(data[4].data_changed);\n      setLoaded(true);\n    }).catch(handleError);\n  }, []);\n\n  if (unauthorized) {\n    return (\n      <div>\n        {PageHeading('Generated Schedules')}\n        {UnauthorizedMessage('scheduler')}\n      </div>\n    );\n  }\n\n  return (\n    <div data-testid=\"AssistantPage\">\n      {PageHeading('Generated Schedules')}\n      {runningScheduler &&\n      <Typography>Please wait for the scheduler to finish, this step can take several minutes.</Typography>\n      }\n      {(!loaded) ?\n        <CircularProgress /> : runSchedulerSection()\n      }\n      {(loaded && changes && solutions.length > 0) &&\n        <Card variant={\"outlined\"} style={{margin: 'auto auto 1rem auto', width: '60%'}}>\n          <CardContent>\n            <Typography>These solutions were generated with data that has been modified, and could be invalid.\n              Click this button to re-run the scheduler!</Typography>\n          </CardContent>\n          <CardActions>\n            <Button variant={\"contained\"} color={\"primary\"} style={{margin: \"auto\"}}\n                    onClick={runScheduler}>Run Scheduler</Button>\n          </CardActions>\n        </Card>\n      }\n      {loaded &&\n        <Grid container alignItems={\"center\"} justifyContent={\"center\"}>\n          {generateCards()}\n        </Grid>\n      }\n      <ErrorDialog open={errorOpen} setOpen={setErrorOpen} message={errorMessage} />\n    </div>\n  );\n}\n\nAssistantPage.propTypes = {};\n\nAssistantPage.defaultProps = {};\n\nexport default AssistantPage;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Chip from \"@material-ui/core/Chip\";\nimport APIService from \"../../../APIService\";\nimport {URL_INSTRUCTORS} from \"../../../urls\";\n\n\nconst InstructorForm = (props) => {\n  const { row, setRow, disciplines } = props;\n  const [newQualification, setNewQualification] = useState('');\n\n  const onLastNameChange = (e) => setRow({...row, lastName: e.target.value});\n  const onMaxSectionsChange = (e) => setRow({...row, maxSections: e.target.value.replace(/[^0-9]/g, '')});\n  const onNewQualificationChange = (e) => setNewQualification(e.target.value);\n  const onAddNewQualification = () => setRow({...row, qualifications: row.qualifications.concat([newQualification])});\n\n  const getDisciplineOptions = () => disciplines.filter(\n    d => row.qualifications.findIndex(q => q.id === d.id) < 0\n  );\n\n  return (\n    <Grid container alignItems={\"center\"} justifyContent={\"center\"} spacing={2}>\n      <Grid item>\n        <TextField id={\"lastNameInput\"} label={\"Last Name\"} required\n                   inputProps={{ maxLength: 30 }} type={\"text\"}\n                   value={row.lastName || ''} onChange={onLastNameChange} />\n      </Grid>\n      <Grid item>\n        <TextField id={\"maxSectionsInput\"} label={\"Max Sections\"} required\n                   inputProps={{ inputMode: 'numeric', pattern: '[0-9]*', maxLength: 2 }} type={\"text\"}\n                   value={row.maxSections || ''} onChange={onMaxSectionsChange} />\n      </Grid>\n      <Grid item>\n        <TextField id={\"qualificationsSelect\"} select label={\"Qualifications\"} style={{minWidth: 150}}\n                   value={newQualification} onChange={onNewQualificationChange}>\n          {getDisciplineOptions().map((option) => (\n            <MenuItem key={option.name} value={option}>\n              {option.name}\n            </MenuItem>\n          ))}\n        </TextField>\n      </Grid>\n      <Grid item>\n        <Button variant={\"contained\"} color={\"default\"} onClick={onAddNewQualification}>Add</Button>\n      </Grid>\n      <Grid item xs={12}>\n        {row.qualifications.map((qual) => (\n          <Chip label={qual.name}\n                onDelete={() => setRow({...row, qualifications: row.qualifications.filter(x => x.id !== qual.id)})} />\n        ))}\n      </Grid>\n    </Grid>\n  );\n}\n\n\nconst InstructorDialog = (props) => {\n  const { create, open, setOpen, row, disciplines, setInstructors, errorDialog } = props;\n  const [instructorFormData, setInstructorFormData] = useState(\n    {lastName: null, maxSections: null, qualifications: []});\n\n  const title = (create) ? 'Create Instructor' : 'Edit Instructor';\n\n  const close = () => setOpen(false);\n\n  const onSubmit = () => {\n    let data = {...instructorFormData, qualifications: instructorFormData.qualifications.map(obj => obj.id)};\n\n    if (create) {\n      APIService.post(URL_INSTRUCTORS, data).then((newRow) => {\n        setInstructors((instructors) => instructors.concat(\n          [{...newRow, qualifications: instructorFormData.qualifications}])\n        );\n      }, (error) => errorDialog(error.message)).finally(close);\n    } else {\n      APIService.put(URL_INSTRUCTORS, data).then(() => {\n        setInstructors((instructors) => {\n          const rowIndex = instructors.findIndex(instructor => instructor.id === instructorFormData.id);\n          const instructorsCopy = instructors.slice(0);\n          instructorsCopy[rowIndex] = instructorFormData;\n          return instructorsCopy;\n        });\n      }, (error) => errorDialog(error.message)).finally(close);\n    }\n  }\n\n  useEffect(() => {\n    if (open && !create) {\n      setInstructorFormData(row);\n    } else if (open && create) {\n      setInstructorFormData({lastName: null, maxSections: null, qualifications: []});\n    }\n  }, [open]);\n\n  return (\n    <div data-testid=\"InstructorDialog\">\n      <Dialog open={open}\n              onClose={close}\n              aria-labelledby=\"instructor-dialog\"\n              fullWidth maxWidth={\"sm\"}>\n        <DialogTitle id=\"instructor-dialog\">{title}</DialogTitle>\n        <DialogContent>\n          <InstructorForm row={instructorFormData} setRow={setInstructorFormData} disciplines={disciplines} />\n        </DialogContent>\n        <DialogActions>\n          <Button variant={\"contained\"} onClick={close} color={\"default\"}>Cancel</Button>\n          <Button variant={\"contained\"} disabled={!instructorFormData.lastName || !instructorFormData.maxSections}\n                  onClick={onSubmit} color={\"primary\"}>Submit</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nInstructorDialog.propTypes = {};\n\nInstructorDialog.defaultProps = {};\n\nexport default InstructorDialog;\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport InstructorDialog from \"../InstructorDialog/InstructorDialog\";\nimport APIService from \"../../../APIService\";\nimport {URL_INSTRUCTORS} from \"../../../urls\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nconst InstructorList = (props) => {\n  const {instructors, setInstructors, disciplines, writeAuthorized, errorDialog} = props;\n  const [selected, setSelected] = useState({});\n\n  const [addOpen, setAddOpen] = useState(false);\n  const openAddDialog = () => setAddOpen(true);\n  const [editOpen, setEditOpen] = useState(false);\n  const openEditDialog = (instructor) => {\n    setSelected(instructor);\n    setEditOpen(true);\n  };\n\n  const InstructorListItems = () => {\n    let listItems = [];\n\n    for (let instructor of instructors) {\n      listItems.push(\n        <ListItem key={instructor.id}>\n          <ListItemText primary={instructor.lastName}\n                        secondary={'Assignment Limit: ' + instructor.maxSections.toString()} />\n          {writeAuthorized &&\n            <ListItemSecondaryAction>\n              <Tooltip title={'Edit Instructor'} placement={'left'}>\n                <IconButton edge={\"end\"} aria-label={\"edit-instructor\"} onClick={() => openEditDialog(instructor)}>\n                  <EditIcon />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title={'Delete Instructor'} placement={'right'}>\n                <IconButton edge={\"end\"} aria-label={\"delete-instructor\"}\n                            onClick={() => {\n                              APIService.delete(URL_INSTRUCTORS, instructor.id).then(() => {\n                                setInstructors(instructors.filter(i => i.id !== instructor.id));\n                              }, (error) => errorDialog(error.message));\n                            }}>\n                  <DeleteIcon />\n                </IconButton>\n              </Tooltip>\n            </ListItemSecondaryAction>\n          }\n        </ListItem>\n      );\n      listItems.push(<Divider key={`divider-${instructor.id}`} />);\n    }\n\n    return listItems;\n  };\n\n  return (\n    <div data-testid=\"InstructorList\">\n      <List style={{border: `1px #0000001f solid`}}>\n        {InstructorListItems()}\n        {writeAuthorized &&\n          <ListItem button onClick={openAddDialog} key={'addRow'}>\n            <ListItemIcon><AddIcon /></ListItemIcon>\n            <ListItemText primary={'Add New'} />\n          </ListItem>\n        }\n      </List>\n      {writeAuthorized &&\n      <>\n        <InstructorDialog create={true} open={addOpen} setOpen={setAddOpen} errorDialog={errorDialog}\n                          disciplines={disciplines} setInstructors={setInstructors} />\n        <InstructorDialog open={editOpen} setOpen={setEditOpen} row={selected} errorDialog={errorDialog}\n                          disciplines={disciplines} setInstructors={setInstructors} />\n      </>\n      }\n    </div>\n  );\n};\n\nInstructorList.propTypes = {};\n\nInstructorList.defaultProps = {};\n\nexport default InstructorList;\n","export const DayAbbrevToValue = {\n  'Mon.': 'Monday', 'Tue.': 'Tuesday', 'Wed.': 'Wednesday', 'Thu.': 'Thursday',\n  'Fri.': 'Friday', 'Sat.': 'Saturday', 'Sun.': 'Sunday'\n};\n\nexport const LoginFormMessages = {\n  registerSuccess:\n    'Successfully submitted registration request. You will receive an email when your request has been processed.',\n  wrongCredentials:\n    'Wrong email or password, please try again.',\n  invalidRegistration: 'Could not process request. Please ensure email address is valid and password is not blank.'\n};\n\nexport const timeslotToString = (timeslot) => {\n  if (timeslot.begin_time.length > 5) timeslot.begin_time = timeslot.begin_time.slice(0, -3);\n  if (timeslot.end_time.length > 5) timeslot.end_time = timeslot.end_time.slice(0, -3);\n  return `${timeslot.meetingDays} ${timeslot.begin_time}-${timeslot.end_time}`;\n};\n\nexport const convertTimeToNumber = (time) => {\n  const hours = Number(time.split(':')[0]);\n  const minutes = Number(time.split(':')[1] / 60);\n  return hours + minutes;\n}\n\nexport const pairwise = (arr, func) => {\n  for (let i = 0; i < arr.length - 1; i++) {\n    func(arr[i], arr[i + 1]);\n  }\n};\n","import React, {useState, useEffect} from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {timeslotToString} from \"../../../constants\";\r\nimport ArrowDropDown from \"@material-ui/icons/ArrowDropDown\";\r\nimport ArrowRight from \"@material-ui/icons/ArrowRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport List from \"@material-ui/core/List\";\r\nimport {withStyles} from \"@material-ui/core\";\r\n\r\n\r\nconst SectionForm = (props) => {\r\n  const { row, classes } = props;\r\n  const [selectedSection, setSelectedSection] = useState(-1);\r\n\r\n  useEffect(() => {\r\n    const classesOnCourse = classes.filter(cls => cls.course.id === row.id);\r\n    if (classesOnCourse.length > 0) {\r\n      setSelectedSection(classesOnCourse[0].id);\r\n    }\r\n  }, []);\r\n\r\n  const CenteredListItem = withStyles({\r\n    root: {textAlign: 'center'}\r\n  })(ListItemText);\r\n\r\n  const getIcon = (id) => {\r\n    if (selectedSection === id) {\r\n      return (<ListItemIcon><ArrowRight/></ListItemIcon>);\r\n    } else {\r\n      return (<ListItemIcon><ArrowDropDown/></ListItemIcon>);\r\n    }\r\n  };\r\n\r\n  const getTimeSlotRows = (cls) => {\r\n    if (cls.id !== selectedSection) return [];\r\n    let rows = [];\r\n    for (let time of cls.meetingTimes) {\r\n      const label = timeslotToString(time);\r\n      rows.push((\r\n        <ListItem key={time.id}>\r\n          <CenteredListItem primary={label} />\r\n        </ListItem>\r\n      ));\r\n    }\r\n    return rows;\r\n  };\r\n\r\n  const getSectionList = () => {\r\n    let list = [];\r\n    if (classes) {\r\n      list = classes.filter(cls => cls.course.id === row.id).map((cls) => (\r\n        <div key={cls.id}>\r\n          <ListItem button onClick={() => setSelectedSection(cls.id)}>\r\n            {getIcon(cls.id)}\r\n            <ListItemText primary={`Section ${cls.id}`} secondary={`${cls.meetingTimes.length} time slot(s)`} />\r\n          </ListItem>\r\n          <List>\r\n            {getTimeSlotRows(cls)}\r\n          </List>\r\n        </div>\r\n      ))\r\n    }\r\n    return list;\r\n  };\r\n\r\n  return (\r\n    <Grid container alignItems={\"center\"} justifyContent={\"center\"} spacing={2}>\r\n      <Grid item xs={12}>\r\n        {getSectionList()}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SectionForm;\r\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Chip from \"@material-ui/core/Chip\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SectionForm from \"../SectionForm/SectionForm\";\nimport APIService from \"../../../APIService\";\nimport {URL_COURSES, URL_INSTRUCTORS} from \"../../../urls\";\nimport {Link} from \"react-router-dom\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\n\nconst ClassForm = (props) => {\n  const { row, setRow, classes, setClasses, disciplines, create } = props;\n  const [newDiscipline, setNewDiscipline] = useState('');\n\n  const onNewDisciplineChange = (e) => setNewDiscipline(e.target.value);\n  const getDisciplineOptions = () => disciplines.filter(\n    d => row.subject_disciplines.findIndex(q => q.id === d.id) < 0\n  );\n  const onAddNewDiscipline = () =>\n    setRow({...row, subject_disciplines: row.subject_disciplines.concat([newDiscipline])});\n\n  return (\n    <>\n      <Typography variant={'h6'} style={{textAlign: \"center\"}}>Course</Typography>\n      <Grid container alignItems={\"center\"} justifyContent={\"center\"} spacing={2}>\n        <Grid item>\n          <TextField label={\"Course Title\"} required value={row.course_title || ''}\n                     inputProps={{ maxLength: 55 }} type={\"text\"}\n                     onChange={(e) => setRow({...row, course_title: e.target.value})} />\n        </Grid>\n        <Grid item>\n          <TextField label={\"Course Number\"} required value={row.course_number || ''}\n                     inputProps={{ inputMode: 'numeric', pattern: '[0-9]*', maxLength: 4 }} type={\"text\"}\n                     onChange={(e) => setRow({...row, course_number: e.target.value})}  />\n        </Grid>\n        <Grid item>\n          <TextField select label={\"Subject Disciplines\"} style={{minWidth: 160}}\n                     value={newDiscipline} onChange={onNewDisciplineChange}>\n            {getDisciplineOptions().map((option) => (\n              <MenuItem key={option.name} value={option}>\n                {option.name}\n              </MenuItem>\n            ))}\n          </TextField>\n        </Grid>\n        <Grid item>\n          <Button variant={\"contained\"} color={\"default\"} onClick={onAddNewDiscipline}>Add</Button>\n        </Grid>\n        <Grid item xs={12}>\n          {row.subject_disciplines.map((qual) => (\n            <Chip key={qual.id} label={qual.name} onDelete={() =>\n              setRow({...row, subject_disciplines: row.subject_disciplines.filter(x => x.id !== qual.id)})} />\n          ))}\n        </Grid>\n      </Grid>\n      {!create &&\n        <>\n          <Typography variant={'h6'} style={{textAlign: \"center\", marginTop: \"1rem\", marginLeft: '-56px'}}>\n            <Tooltip title={'Edit Sections'} placement={'left'}>\n              <IconButton component={Link} to={`/setup/${row.id}`}>\n                <EditIcon />\n              </IconButton>\n            </Tooltip>\n            Sections\n          </Typography>\n          <SectionForm row={row} classes={classes} setClasses={setClasses} />\n        </>\n      }\n    </>\n\n  );\n};\n\n\nconst ClassDialog = (props) => {\n  const { create, open, setOpen, row, setCourses, classes, setClasses,\n    disciplines, setSelected, setEditOpen, errorDialog } = props;\n  const [courseFormData, setCourseFormData] = useState(\n    {course_title: '', course_number: null, subject_disciplines: []});\n\n  const title = (create) ? 'Create Class' : 'Edit Class';\n\n  const isCourseFormValid = () => {\n    return !courseFormData.course_title || !courseFormData.course_number;\n  };\n\n  const close = () => setOpen(false);\n\n  const onSubmit = () => {\n    const data = {...courseFormData, subject_disciplines: courseFormData.subject_disciplines.map(sd => sd.id)};\n\n    if (create) {\n      APIService.post(URL_COURSES, data).then((newRow) => {\n        const newCourse = {...newRow, subject_disciplines: courseFormData.subject_disciplines};\n        setCourses(courses => courses.concat([newCourse]));\n        setSelected(newCourse);\n        setEditOpen(true);\n      }, error => errorDialog(error.message)).finally(close);\n    } else {\n      APIService.put(URL_COURSES, data).then((data) => {\n        setCourses(courses => {\n          const rowIndex = courses.findIndex(crs => crs.id === courseFormData.id);\n          const coursesCopy = courses.slice(0);\n          coursesCopy[rowIndex] = courseFormData;\n          return coursesCopy;\n        });\n      }, error => errorDialog(error.message)).finally(close);\n    }\n  };\n\n  useEffect(() => {\n    if (open && !create) {\n      setCourseFormData(row);\n    } else if (open && create) {\n      setCourseFormData({course_title: '', course_number: null, subject_disciplines: []});\n    }\n  }, [open]);\n\n  return (\n    <div data-testid=\"ClassDialog\">\n      <Dialog open={open}\n              onClose={close}\n              aria-labelledby=\"instructor-dialog\"\n              fullWidth maxWidth={\"sm\"}>\n        <DialogTitle id=\"instructor-dialog\">{title}</DialogTitle>\n        <DialogContent>\n          <ClassForm row={courseFormData} setRow={setCourseFormData} classes={classes} setClasses={setClasses}\n                     disciplines={disciplines} create={create} />\n        </DialogContent>\n        <DialogActions>\n          <Button variant={\"contained\"} onClick={close} color={\"default\"}>Cancel</Button>\n          <Button variant={\"contained\"} onClick={onSubmit} color={\"primary\"}\n                  disabled={isCourseFormValid()}>Submit</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nClassDialog.propTypes = {};\n\nClassDialog.defaultProps = {};\n\nexport default ClassDialog;\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport List from \"@material-ui/core/List\";\nimport ClassDialog from \"../ClassDialog/ClassDialog\";\nimport APIService from \"../../../APIService\";\nimport {URL_COURSES} from \"../../../urls\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nconst ClassList = (props) => {\n  const {classes, setClasses, courses, setCourses, disciplines, writeAuthorized, errorDialog} = props;\n  const [selected, setSelected] = useState({});\n\n  const [addOpen, setAddOpen] = useState(false);\n  const openAddDialog = () => setAddOpen(true);\n  const [editOpen, setEditOpen] = useState(false);\n  const openEditDialog = (course) => {\n    setSelected(course)\n    setEditOpen(true);\n  };\n\n  const ClassListItems = () => {\n    let listItems = [];\n\n    for (let course of courses) {\n      const classesOnCourse = classes.filter(cls => cls.course.id === course.id);\n      const meetingTimeStrings = classesOnCourse.map(cls => cls.meetingTimeString);\n      listItems.push(\n        <ListItem key={course.id}>\n          <ListItemText primary={'CPSC ' + course.course_number + ' - ' + course.course_title}\n                        secondary={classesOnCourse.length.toString() + ' Section(s) - ' + meetingTimeStrings.join(' | ')} />\n          {writeAuthorized &&\n            <ListItemSecondaryAction>\n              <Tooltip title={'Edit Course'} placement={'left'}>\n                <IconButton edge={\"end\"} onClick={() => openEditDialog(course)}>\n                  <EditIcon />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title={'Delete Course'} placement={'right'}>\n                <IconButton edge={\"end\"}\n                            onClick={() => {\n                              APIService.delete(URL_COURSES, course.id).then(data => {\n                                setCourses(courses => courses.filter(crs => crs.id !== course.id));\n                              }, error => errorDialog(error.message));\n                            }}>\n                  <DeleteIcon />\n                </IconButton>\n              </Tooltip>\n            </ListItemSecondaryAction>\n          }\n        </ListItem>\n      );\n      listItems.push(<Divider key={`divider-${course.id}`} />);\n    }\n\n    return listItems;\n  };\n\n  return (\n    <div data-testid=\"ClassList\">\n      <List style={{border: `1px #0000001f solid`}}>\n        {ClassListItems()}\n        {writeAuthorized &&\n          <ListItem button onClick={openAddDialog} key={'addRow'}>\n            <ListItemIcon><AddIcon /></ListItemIcon>\n            <ListItemText primary={'Add New'} />\n          </ListItem>\n        }\n      </List>\n      {writeAuthorized &&\n        <>\n          <ClassDialog create={true} open={addOpen} setOpen={setAddOpen} setCourses={setCourses}\n                       disciplines={disciplines} setClasses={setClasses} errorDialog={errorDialog}\n                       setSelected={setSelected} setEditOpen={setEditOpen}/>\n          <ClassDialog open={editOpen} setOpen={setEditOpen} row={selected} setCourses={setCourses}\n                       disciplines={disciplines} classes={classes} setClasses={setClasses} errorDialog={errorDialog} />\n        </>\n      }\n\n    </div>\n  );\n};\n\nClassList.propTypes = {};\n\nClassList.defaultProps = {};\n\nexport default ClassList;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport InstructorList from \"./InstructorList/InstructorList\";\nimport ClassList from \"./ClassList/ClassList\";\nimport APIService from \"../../APIService\";\nimport {URL_CLASSES, URL_COURSES, URL_DISCIPLINES, URL_INSTRUCTORS, URL_WRITE_ACCESS} from \"../../urls\";\nimport {PageHeading, UnauthorizedMessage} from \"../Utility/text-styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ErrorDialog from \"../Utility/ErrorDialog/ErrorDialog\";\n\nconst SetupPage = () => {\n  const [unauthorized, setUnauthorized] = useState(false);\n  const [writeAuthorized, setWriteAuthorized] = useState(true);\n  const [loaded, setLoaded] = useState(false);\n\n  const [disciplines, setDisciplines] = useState([]);\n  const [instructors, setInstructors] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [courses, setCourses] = useState([]);\n\n  const [errorOpen, setErrorOpen] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const openErrorDialog = (message) => {\n    setErrorMessage(message);\n    setErrorOpen(true);\n  };\n\n  const handleError = (error) => {\n    if (error.message.slice(0, 3) === '403') {\n      setUnauthorized(true);\n    } else {\n      openErrorDialog(error.message);\n    }\n  };\n\n  useEffect(() => {\n    const allPromise = Promise.all([APIService.get(URL_DISCIPLINES), APIService.get(URL_INSTRUCTORS),\n      APIService.get(URL_CLASSES), APIService.get(URL_COURSES)]);\n\n    allPromise.then(data => {\n      setDisciplines(data[0]);\n      setInstructors(data[1]);\n      setClasses(data[2]);\n      setCourses(data[3]);\n      setLoaded(true);\n    }, handleError);\n\n    APIService.get(URL_WRITE_ACCESS).then(() => {}, (error) => {\n      if (error.message.slice(0, 3) === '403') setWriteAuthorized(false);\n    });\n  }, []);\n\n  if (unauthorized) {\n    return (\n      <div data-testid=\"SetupPage\">\n        {PageHeading('Setup Page')}\n        {UnauthorizedMessage('setup')}\n      </div>\n    );\n  }\n\n  return (\n    <div data-testid=\"SetupPage\">\n      <Grid container spacing={2} justifyContent={\"center\"}>\n        <Grid container item xs={5} direction={\"column\"}>\n          {PageHeading('Teaching Staff', 'h4')}\n          <div style={{padding: '1rem 5rem'}}>\n            {(!loaded) ?\n              <CircularProgress /> :\n              <InstructorList instructors={instructors} setInstructors={setInstructors} disciplines={disciplines}\n                              writeAuthorized={writeAuthorized} errorDialog={openErrorDialog} />}\n          </div>\n        </Grid>\n        <Divider orientation={\"vertical\"} flexItem />\n        <Grid container item xs={5} direction={\"column\"}>\n          {PageHeading('Class Roster', 'h4')}\n          <div style={{padding: '1rem 5rem'}}>\n            {(!loaded) ?\n              <CircularProgress /> :\n              <ClassList classes={classes} setClasses={setClasses} courses={courses} setCourses={setCourses}\n                         disciplines={disciplines} writeAuthorized={writeAuthorized} errorDialog={openErrorDialog} />}\n          </div>\n        </Grid>\n      </Grid>\n      <ErrorDialog open={errorOpen} setOpen={setErrorOpen} message={errorMessage} />\n    </div>\n  );\n};\n\nSetupPage.propTypes = {};\n\nSetupPage.defaultProps = {};\n\nexport default SetupPage;\n","import React, {useEffect, useState} from 'react';\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {PageHeading} from \"../Utility/text-styles\";\nimport APIService from \"../../APIService\";\nimport {saveToken} from \"../../auth\";\nimport {URL_CHANGE_PASSWORD, URL_CREATE_REGISTRATION_REQUEST} from \"../../urls\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {LoginFormMessages} from \"../../constants\";\n\nconst LoginPage = () => {\n  const [isLoginForm, setIsLoginForm] = useState(true);\n  const accessLevels = ['root', 'admin', 'assistant'];\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [accessLevel, setAccessLevel] = useState();\n\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n\n  const LoginForm = () => {\n    return (\n      <>\n        <Grid container alignItems={\"center\"} justifyContent={\"center\"} spacing={2}>\n          <Grid item xs={12}>\n            <TextField required label={\"Email\"} type={\"text\"}\n                       value={username || ''} onChange={event => setUsername(event.target.value)} />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField required label={\"Password\"} type={\"password\"}\n                       value={password || ''} onChange={event => setPassword(event.target.value)} />\n          </Grid>\n        </Grid>\n      </>\n    );\n  };\n\n  const RegisterForm = () => {\n    return (\n      <>\n        <Grid container alignItems={\"center\"} justifyContent={\"center\"} spacing={2}>\n          <Grid item xs={12}>\n            <TextField required label={\"Email\"} type={\"text\"} value={username || ''}\n                       onChange={e => setUsername(e.target.value)} />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField select label={\"Requested Access Level\"} style={{minWidth: 200}}\n                       onChange={e => setAccessLevel(e.target.value)}>\n              {accessLevels.map((option) => (\n                <MenuItem key={option} value={option}>\n                  {option}\n                </MenuItem>\n              ))}\n            </TextField>\n          </Grid>\n          <Grid item xs={12}>\n            <TextField required label={\"Requested Password\"} type={\"password\"} value={password || ''}\n                       onChange={e => setPassword(e.target.value)} />\n          </Grid>\n        </Grid>\n      </>\n    );\n  };\n\n  const handleError = (error) => {\n    setUsername('');\n    setPassword('');\n\n    let message = 'ERROR: ';\n    if (error.message.slice(0, 3) === '400') {\n      message += (isLoginForm) ?  LoginFormMessages.wrongCredentials : LoginFormMessages.invalidRegistration;\n    }\n    if (error.message.slice(0, 3) === '403' && !isLoginForm) {\n      message += 'A registration request for that email is already being processed!'\n    }\n    setErrorMessage(message);\n  };\n\n  const onSubmit = () => {\n    setErrorMessage('');\n    setSuccessMessage('');\n    if (isLoginForm) {\n      APIService.authenticate(username, password).then((data) => {\n        saveToken(data);\n        window.location.reload(false);\n      }, (error) => {\n        if (error.message.slice(0, 3) === '404') {\n          // This means that this is first user\n          APIService.put(URL_CHANGE_PASSWORD,\n            {username: 'root', password: 'root', new_password: password}, false).then(() => {\n            APIService.authenticate('root', password).then(data => {\n              saveToken(data);\n              window.location.reload(false);\n            }, handleError);\n          }, handleError);\n        } else {\n          handleError(error);\n        }\n      });\n    } else {\n      APIService.post(URL_CREATE_REGISTRATION_REQUEST,\n        {contact_email: username, requested_password: password, access_level: accessLevel}).then((data) => {\n        setSuccessMessage(LoginFormMessages.registerSuccess);\n      }, handleError);\n    }\n    setUsername('');\n    setPassword('');\n  };\n\n  const switchForm = () => {\n    setErrorMessage('');\n    setSuccessMessage('');\n    setIsLoginForm(!isLoginForm);\n    setUsername('');\n    setPassword('');\n  };\n\n  return (\n    <div data-testid=\"LoginPage\">\n      {PageHeading((isLoginForm) ? 'Login' : 'Submit Registration Request')}\n      <div style={{margin: '1rem'}}>\n        {(errorMessage !== '') &&\n          <Typography color={\"error\"} style={{fontWeight: 'bold'}}>{errorMessage}</Typography>\n        }\n        {(successMessage !== '') &&\n          <Typography style={{fontWeight: 'bold'}}>{successMessage}</Typography>\n        }\n      </div>\n      {(isLoginForm) ? LoginForm() : RegisterForm()}\n      <Button color={\"primary\"} variant={\"contained\"} style={{marginTop: '2em', marginRight: '1em'}}\n              onClick={onSubmit}>Submit</Button>\n      <Button color={\"default\"} variant={\"contained\"}\n              style={{marginTop: '2em'}}\n              onClick={switchForm}>\n        {(isLoginForm) ? 'Register' : 'Return to Login'}\n      </Button>\n    </div>\n  );\n};\nLoginPage.propTypes = {};\n\nLoginPage.defaultProps = {};\n\nexport default LoginPage;\n","import {createTheme, responsiveFontSizes} from \"@material-ui/core/styles\";\nimport React, {Component} from \"react\";\nimport {MuiThemeProvider} from \"@material-ui/core\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst muiTheme = responsiveFontSizes(createTheme({\n  palette: {\n    primary: {\n      main: '#800000'\n    }\n  }\n}));\n\nexport const styleWrapper = Component => props => {\n  return (\n    <MuiThemeProvider theme={muiTheme}>\n      <CssBaseline />\n      <Component {...props} />\n    </MuiThemeProvider>\n  );\n};\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\n\n\nconst EditAssignmentDialog = (props) => {\n  const { open, setOpen, row, schedule, setSchedule, instructors, sectionOverlapMap, disciplineMap } = props;\n  const [selectedInstructor, setSelectedInstructor] = useState();\n\n  const close = () => setOpen(false);\n\n  const onInstructorSelect = (e) => {\n    setSelectedInstructor(e.target.value);\n  };\n\n  const onSubmit = () => {\n    let newScheduleAssignments = schedule.assignments;\n    const replaceIndex = newScheduleAssignments.findIndex(as => as.id === row.id);\n    newScheduleAssignments[replaceIndex].instructor = selectedInstructor;\n\n    const newSchedule = schedule;\n    schedule.assignments = newScheduleAssignments\n    setSchedule(newSchedule);\n    close();\n  };\n\n  useEffect(() => {\n    if (row != null) {\n      setSelectedInstructor(row.instructor);\n    }\n  }, [row]);\n\n\n  return (\n    <div data-testid=\"EditAssignmentDialog\">\n      <Dialog open={open} onClose={close}\n              fullWidth maxWidth={\"sm\"}>\n        <DialogTitle>Edit Assignment</DialogTitle>\n        <DialogContent>\n          {row != null &&\n            <>\n              <Typography style={{textAlign: \"center\", fontWeight: 'bold'}}>\n                {row.course_number} {row.course_title}</Typography>\n              <Typography style={{textAlign: \"center\"}}>\n                {row.meetingTimeString}</Typography>\n            </>\n          }\n          {instructors.size != null &&\n            <TextField select label={\"Instructor\"} style={{minWidth: 160}}\n                       value={selectedInstructor} onChange={onInstructorSelect}>\n              {Array.from(instructors.values()).map((instructor) => (\n                <MenuItem key={instructor.id} value={instructor.id}>\n                  {instructor.lastName}\n                </MenuItem>\n              ))}\n            </TextField>\n          }\n        </DialogContent>\n        <DialogActions>\n          <Button variant={\"contained\"} onClick={close}>Cancel</Button>\n          <Button variant={\"contained\"} color={\"primary\"}\n                  onClick={onSubmit} disabled={!selectedInstructor}>Submit</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nEditAssignmentDialog.propTypes = {};\n\nEditAssignmentDialog.defaultProps = {};\n\nexport default EditAssignmentDialog;\n","import React, {useEffect, useState} from 'react';\nimport {PageHeading, UnauthorizedMessage} from \"../../Utility/text-styles\";\nimport {Link, useParams} from \"react-router-dom\";\nimport APIService from \"../../../APIService\";\nimport {URL_CLASSES, URL_INSTRUCTORS, URL_SOLUTION_CONSTRAINT_MAP, URL_SOLUTIONS} from \"../../../urls\";\nimport {DataGrid} from \"@material-ui/data-grid\";\nimport Button from \"@material-ui/core/Button\";\nimport EditAssignmentDialog from \"./EditAssignmentDialog/EditAssignmentDialog\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport ErrorDialog from \"../../Utility/ErrorDialog/ErrorDialog\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\n\n\nconst EditSolution = () => {\n  const [solution, setSolution] = useState();\n  const [editedSolution, setEditedSolution] = useState();\n  const [instructors, setInstructors] = useState({});\n  const [sections, setSections] = useState({});\n  const [sectionOverlapMap, setSectionOverlapMap] = useState({});\n  const [disciplineMap, setDisciplineMap] = useState({});\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [editRow, setEditRow] = useState();\n  const [loaded, setLoaded] = useState(false);\n  const [unauthorized, setUnauthorized] = useState(false);\n\n  const [successSnackbar, setSuccessSnackbar] = useState(false);\n  const [editsMade, setEditsMade] = useState(false);\n  const [errorOpen, setErrorOpen] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const { solution_id } = useParams();\n\n  const handleError = (error) => {\n    if (error.message.slice(0, 3) === '403') {\n      setUnauthorized(true);\n    } else {\n      setErrorMessage(error.message);\n      setErrorOpen(true);\n    }\n  };\n\n  const columns = [\n    { field: 'id', headerName: 'ID', hide: true},\n    { field: 'course_title', headerName: 'Course', flex: 1},\n    { field: 'course_number', hide: true},\n    { field: 'meetingTimeString', headerName: 'Meeting Times', flex: 3},\n    { field: 'subject_disciplines', headerName: 'Subject Disciplines', hide: true},\n    { field: 'instructor_lastName', headerName: 'Assigned Instructor', flex: 1},\n    { field: 'Edit', renderCell: (cellValues) => {\n        return (\n          <IconButton onClick={() => {\n            setEditRow(cellValues.row);\n            setEditDialogOpen(true);\n            setEditsMade(true);\n          }}>\n            <EditIcon />\n          </IconButton>\n        );\n      }, flex: 0.5},\n  ];\n\n  const getTableData = (assignments) => {\n    let data = [];\n\n    if (sections.size !== 0 && sections.size != null) {\n      for (let assignment of assignments) {\n        const section = sections.get(assignment.section);\n\n        let instructor_name = 'Unassigned';\n        if (assignment.instructor != null) {\n          instructor_name = instructors.get(assignment.instructor).lastName;\n        }\n\n        if (section) {\n          data.push({id: assignment.id, course_title: section.course.course_title,\n            course_number: section.course.course_number, meetingTimeString: section.meetingTimeString,\n            instructor: assignment.instructor, instructor_lastName: instructor_name,\n            subject_disciplines: section.course.subject_disciplines});\n        }\n      }\n    }\n\n    return data;\n  };\n\n  useEffect(() => {\n    const allPromise = Promise.all([APIService.get(URL_SOLUTIONS + solution_id.toString()),\n      APIService.get(URL_INSTRUCTORS), APIService.get(URL_CLASSES), APIService.get(URL_SOLUTION_CONSTRAINT_MAP)]);\n\n    allPromise.then(data => {\n      setSolution(data[0]);\n      setEditedSolution(data[0]);\n      setInstructors(new Map(data[1].map(obj => [obj.id, obj])));\n      setSections(new Map(data[2].map(obj => [obj.id, obj])));\n      setSectionOverlapMap(data[3].section_overlap_map);\n      setDisciplineMap(data[3].discipline_overlap_map);\n      setLoaded(true);\n    }).catch(handleError);\n  }, []);\n\n  if (unauthorized) {\n    return (\n      <div>\n        {UnauthorizedMessage()}\n      </div>\n    );\n  }\n\n  const onSubmit = () => {\n    APIService.put(`${URL_SOLUTIONS}${solution_id}`, editedSolution, false).then(data => {\n      setSuccessSnackbar(true);\n      setEditsMade(false);\n      setSolution(data);\n      setEditedSolution(data);\n    }, handleError);\n  };\n\n  return (\n    <div data-testid=\"EditSolution\">\n      <div style={{marginBottom: '0.5rem', display: 'flex', flexDirection: 'row', justifyContent: 'space-between',\n        alignItems: 'flex-end', width: '80vw', marginLeft: 'auto', marginRight: 'auto'}}>\n        <Button variant={\"contained\"} style={{height: '36px'}} component={Link} to={'/'}>Back</Button>\n        {PageHeading('Edit Solution')}\n        <Button variant={\"contained\"} style={{height: '36px'}} color={\"primary\"}\n                disabled={!editsMade} onClick={onSubmit}>Submit</Button>\n      </div>\n      <div style={{height: '80vh', width: '80vw', margin: 'auto'}}>\n        {(loaded) ?\n          (<DataGrid rows={getTableData(editedSolution.assignments)} columns={columns} autoPageSize/>)\n          : (<CircularProgress />)}\n      </div>\n      {loaded &&\n        <EditAssignmentDialog open={editDialogOpen} setOpen={setEditDialogOpen} row={editRow} schedule={editedSolution}\n                              setSchedule={setEditedSolution} instructors={instructors}\n                              sectionOverlapMap={sectionOverlapMap} disciplineMap={disciplineMap} />\n      }\n      <ErrorDialog open={errorOpen} setOpen={setErrorOpen} message={errorMessage} />\n      <Snackbar open={successSnackbar} autoHideDuration={4000} onClose={() => setSuccessSnackbar(false)}>\n        <Alert severity={'success'}>Solution saved successfully</Alert>\n      </Snackbar>\n    </div>\n  );\n};\n\nEditSolution.propTypes = {};\n\nEditSolution.defaultProps = {};\n\nexport default EditSolution;\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {DayAbbrevToValue} from \"../../../../constants\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\n\r\nconst CreateTimeSlotDialog = (props) => {\r\n  const { open, setOpen, onSubmit } = props;\r\n  const [timeslot, setTimeslot] = useState({meetingDays: 'Mon.', begin_time: '', end_time: ''});\r\n\r\n  const onBeforeSubmit = () => {\r\n    onSubmit(timeslot);\r\n    setOpen(false);\r\n    setTimeslot({meetingDays: 'Mon.', begin_time: '', end_time: ''});\r\n  }\r\n\r\n  const getTimeSlotForm = () => {\r\n    return (\r\n      <div>\r\n        <Grid container alignItems={\"center\"} justifyContent={\"center\"} spacing={2}>\r\n          <Grid item xs={4}>\r\n            <TextField select label={\"Day\"} style={{minWidth: 60}} value={timeslot.meetingDays}\r\n                       onChange={event => setTimeslot({...timeslot, meetingDays: event.target.value})}>\r\n              {Object.keys(DayAbbrevToValue).map((option) => (\r\n                <MenuItem key={option} value={option}>\r\n                  {option}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={8}>\r\n            <TextField label={\"Begin Time\"} type={\"time\"} value={timeslot.begin_time}\r\n                       onChange={event => setTimeslot({...timeslot, begin_time: event.target.value})}\r\n                       InputLabelProps={{shrink: true}} inputProps={{step: 60}} fullWidth />\r\n          </Grid>\r\n          <Grid item xs={8}>\r\n            <TextField label={\"End Time\"} type={\"time\"} value={timeslot.end_time}\r\n                       onChange={event => setTimeslot({...timeslot, end_time: event.target.value})}\r\n                       InputLabelProps={{shrink: true}} inputProps={{step: 60}} fullWidth />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const close = () => setOpen(false);\r\n\r\n  return (\r\n    <div data-testid=\"CreateTimeSlotDialog\">\r\n      <Dialog open={open} onClose={close}>\r\n        <DialogTitle>Create Time Slot</DialogTitle>\r\n        <DialogContent>\r\n          {getTimeSlotForm()}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button variant={\"contained\"}  onClick={close}>Cancel</Button>\r\n          <Button variant={\"contained\"} color={\"primary\"}\r\n                  disabled={timeslot.begin_time === '' || timeslot.end_time === ''}\r\n                  onClick={onBeforeSubmit}>Submit</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nCreateTimeSlotDialog.propTypes = {};\r\n\r\nCreateTimeSlotDialog.defaultProps = {};\r\n\r\nexport default CreateTimeSlotDialog;\r\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {Link, useParams} from \"react-router-dom\";\nimport {PageHeading, UnauthorizedMessage} from \"../../Utility/text-styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport APIService from \"../../../APIService\";\nimport {URL_CLASSES, URL_COURSES} from \"../../../urls\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Button from \"@material-ui/core/Button\";\nimport CreateTimeSlotDialog from \"./CreateTimeSlotDialog/CreateTimeSlotDialog\";\nimport {convertTimeToNumber, DayAbbrevToValue, pairwise, timeslotToString} from \"../../../constants\";\nimport ErrorDialog from \"../../Utility/ErrorDialog/ErrorDialog\";\n\n\nconst EditSection = () => {\n  const [course, setCourse] = useState();\n  const [sections, setSections] = useState([]);\n\n  const [unauthorized, setUnauthorized] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  const [selectedSection, setSelectedSection] = useState();\n  const [selectedTimeSlot, setSelectedTimeSlot] = useState();\n\n  const [addOpen, setAddOpen] = useState(false);\n  const [action, setAction] = useState('');\n  const [errorOpen, setErrorOpen] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const { course_id } = useParams();\n\n  const handleError = (error) => {\n    if (error.message.slice(0, 3) === '403') {\n      setUnauthorized(true);\n    } else {\n      setErrorMessage(`Encountered error: ${error.message}`);\n      setErrorOpen(true);\n    }\n  };\n\n  useEffect(() => {\n    const allPromise = Promise.all([APIService.get(`${URL_COURSES}${course_id}`), APIService.get(URL_CLASSES)]);\n\n    allPromise.then(data => {\n      setCourse(data[0]);\n      setSections(data[1].filter(section => section.course.id === data[0].id));\n      setLoaded(true)\n    }, handleError);\n  }, []);\n\n  const createSection = (timeSlot) => {\n    APIService.post(URL_CLASSES, {course: course.id, meetingTimes: [timeSlot]})\n      .then(data => {\n        setSections(sections => sections.concat([data]));\n        setSelectedSection(data.id);\n      }, handleError);\n  };\n\n  const deleteSection = () => {\n    APIService.delete(URL_CLASSES, selectedSection).then(data => {\n      setSections(sections => sections.filter(s => s.id !== selectedSection));\n      setSelectedSection(null);\n    }, handleError);\n  };\n\n  const updateSection = (section) => {\n    if (!validateSection(section)) {\n      handleError({message: 'Section cannot have overlapping time slots.'});\n      return;\n    }\n    APIService.put(URL_CLASSES, section).then((data) => {\n      setSections((sections) => {\n        const rowIndex = sections.findIndex(s => s.id === selectedSection);\n        const sectionsCopy = sections.slice(0);\n        sectionsCopy[rowIndex] = data;\n        return sectionsCopy;\n      });\n      console.log(selectedSection);\n      console.log(sections);\n    }, handleError);\n  };\n\n  const validateSection = (section) => {\n    let result = true;\n\n    // Check each day to ensure no times overlap\n    Object.keys(DayAbbrevToValue).forEach(day => {\n      const timesOnDay = section.meetingTimes.filter(mt => mt.meetingDays === day);\n      if (timesOnDay.length > 0) {\n        let timeIntervals = [];\n\n        // Convert each time into a number\n        timesOnDay.forEach(meetingTime => {\n          timeIntervals.push([convertTimeToNumber(meetingTime.begin_time), convertTimeToNumber(meetingTime.end_time)]);\n        });\n\n        // Sort the time intervals\n        timeIntervals = timeIntervals.sort((i1, i2) => {\n          if (i1[0] > i2[1]) return 1;\n          if (i2[0] > i1[1]) return -1;\n          return 0;\n        });\n\n        // Check if any overlap\n        pairwise(timeIntervals, (curr, next) => {\n          if (next[0] < curr[1] && next[1] > curr[0]) {\n            result = false;\n          }\n        });\n\n        if (!result) return result;\n      }\n    });\n\n    return result;\n  };\n\n  const onDialogSubmit = (result) => {\n    console.log(result);\n\n    if (action === 'create') {\n      createSection(result);\n    } else if (action === 'add') {\n      const selected = sections.find(s => selectedSection === s.id);\n      if (selected != null) {\n        const section = {...selected, course: selected.course.id};\n        section.meetingTimes.push(result);\n        updateSection(section);\n      }\n    } else if (action === 'edit') {\n      const selected = sections.find(s => selectedSection === s.id);\n      if (selected != null) {\n        const section = {...selected, course: selected.course.id};\n        result = {...result, id: selectedTimeSlot};\n        section.meetingTimes = section.meetingTimes.map(mt => (mt.id === selectedTimeSlot) ? result : mt);\n        updateSection(section);\n      }\n    } else {\n      console.error('Time Slot Dialog submitted before action was set!');\n    }\n  };\n\n  const getSectionForm = () => {\n    return (\n      <div style={{marginBottom: '2rem'}}>\n        <Tooltip title={'Add New Section'} placement={'left'}>\n          <IconButton onClick={() => {\n            setAction('create');\n            setAddOpen(true);\n          }}>\n            <AddIcon />\n          </IconButton>\n        </Tooltip>\n        <TextField select label={\"Sections\"} style={{minWidth: 240, margin: 'auto 1rem'}}\n                   value={selectedSection || ''} onChange={(e) => setSelectedSection(e.target.value)}>\n          {sections.map((option) => (\n            <MenuItem key={option.id} value={option.id}>\n              {`Section ${option.id}`}\n            </MenuItem>\n          ))}\n        </TextField>\n        <Tooltip title={'Remove Section from Course'} placement={'right'}>\n          <IconButton onClick={() => {\n            deleteSection();\n          }}>\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      </div>\n    );\n  };\n\n  const getTimeSlotListItems = () => {\n    let items = [];\n\n    const selected = sections.find(s => s.id === selectedSection);\n\n    if (selected != null) {\n      const times = selected.meetingTimes;\n      if (times.length > 0) {\n        times.forEach(time => {\n          items.push(\n            <ListItem key={time.id}>\n              <ListItemText primary={timeslotToString(time)} />\n              <ListItemSecondaryAction>\n                <Tooltip title={'Edit Timeslot'} placement={'left'}>\n                  <IconButton onClick={() => {\n                    setAction('edit');\n                    setSelectedTimeSlot(time.id);\n                    setAddOpen(true);\n                  }}>\n                    <EditIcon />\n                  </IconButton>\n                </Tooltip>\n                <Tooltip title={'Remove Timeslot'} placement={'right'}>\n                  <IconButton onClick={() => {\n                    setSelectedTimeSlot(time.id);\n                    const selected = sections.find(s => selectedSection === s.id);\n                    if (selected != null) {\n                      const section = {...selected, course: selected.course.id,\n                        meetingTimes: selected.meetingTimes.filter(mt => mt.id !== time.id)};\n                      if (section.meetingTimes.length === 0) {\n                        deleteSection();\n                      } else {\n                        updateSection(section);\n                      }\n                    }\n                  }}>\n                    <DeleteIcon />\n                  </IconButton>\n                </Tooltip>\n              </ListItemSecondaryAction>\n            </ListItem>\n          );\n        });\n      }\n    }\n\n    return items;\n  };\n\n  if (unauthorized) return (\n    <div>\n      {UnauthorizedMessage('edit section')}\n    </div>\n  );\n\n  return (\n    <div data-testid=\"EditSection\">\n      {(!loaded) ? <CircularProgress /> :\n        <>\n          {PageHeading(`Edit Sections (${course.course_number} ${course.course_title})`)}\n          <Typography style={{marginBottom: '1rem'}}>Select a section to view/edit timeslots below.</Typography>\n          {getSectionForm()}\n          <Divider />\n          {selectedSection != null &&\n          <List style={{width: '25%', margin: 'auto'}}>\n            {getTimeSlotListItems()}\n            <Tooltip title={'Add New Timeslot'}>\n              <IconButton onClick={() => {\n                setAction('add');\n                setAddOpen(true);\n              }}>\n                <AddIcon />\n              </IconButton>\n            </Tooltip>\n          </List>\n          }\n          <div style={{marginTop: '2.5rem'}}>\n            <Button variant={\"contained\"} color={\"primary\"} component={Link} to={'/setup/'}>Back to Setup</Button>\n          </div>\n          <CreateTimeSlotDialog open={addOpen} setOpen={setAddOpen} onSubmit={onDialogSubmit} />\n        </>\n      }\n      <ErrorDialog open={errorOpen} setOpen={setErrorOpen} message={errorMessage} />\n    </div>\n  );\n}\n\nEditSection.propTypes = {};\n\nEditSection.defaultProps = {};\n\nexport default EditSection;\n","import React from \"react\";\r\nimport { Routes, Route, Navigate } from \"react-router-dom\";\r\nimport MainNavbar from \"./components/MainNavbar/MainNavbar\";\r\nimport AssistantPage from \"./components/AssistantPage/AssistantPage\";\r\nimport SetupPage from \"./components/SetupPage/SetupPage\";\r\nimport LoginPage from \"./components/LoginPage/LoginPage\";\r\nimport {styleWrapper} from \"./StyleWrapper\";\r\nimport './App.css'\r\nimport EditSolution from \"./components/AssistantPage/EditSolution/EditSolution\";\r\nimport {getToken} from \"./auth\";\r\nimport EditSection from \"./components/SetupPage/EditSection/EditSection\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <MainNavbar/>\r\n      <div className={'content'}>\r\n        <Routes>\r\n          <Route path={'/'} element={getToken() ? <AssistantPage /> : <Navigate to={\"/login\"} />} />\r\n          <Route path={'/edit/:solution_id'} element={getToken() ? <EditSolution /> : <Navigate to={\"/login\"} />} />\r\n          <Route path={'/setup'} element={getToken() ? <SetupPage /> : <Navigate to={\"/login\"} />} />\r\n          <Route path={'/setup/:course_id'} element={getToken() ? <EditSection /> : <Navigate to={\"/login\"} />} />\r\n          <Route path={'/login'} element={!getToken() ? <LoginPage /> : <Navigate to={\"/\"} />} />\r\n        </Routes>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default styleWrapper(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}