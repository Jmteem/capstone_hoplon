{"version":3,"sources":["auth.js","components/MainNavbar/MainNavbar.js","urls.js","APIService.js","components/Utility/text-styles.js","components/AssistantPage/AssistantPage.js","components/SetupPage/InstructorDialog/InstructorDialog.js","components/SetupPage/InstructorList/InstructorList.js","constants.js","components/SetupPage/SectionForm/SectionForm.js","components/SetupPage/ClassDialog/ClassDialog.js","components/SetupPage/ClassList/ClassList.js","components/SetupPage/SetupPage.js","components/LoginPage/LoginPage.js","StyleWrapper.js","components/AssistantPage/EditSolution/EditAssignmentDialog/EditAssignmentDialog.js","components/AssistantPage/EditSolution/EditSolution.js","App.js","reportWebVitals.js","index.js"],"names":["getToken","Cookies","get","clearToken","remove","saveToken","userToken","set","token","logout","window","location","reload","MainNavbar","AppBar","color","Toolbar","style","justifyContent","Typography","variant","width","fontWeight","fontStyle","Button","component","Link","to","onClick","defaultProps","API_URL","URL_DISCIPLINES","URL_INSTRUCTORS","URL_TIMESLOT","URL_CLASSES","URL_COURSES","URL_SOLUTIONS","URL_SOLUTION_CONSTRAINT_MAP","URL_AUTH","URL_CREATE_REGISTRATION_REQUEST","URL_CHANGE_PASSWORD","URL_CHANGES","catchErrorResponse","response","status","Error","injectHeader","options","ignoreAuth","headers","addJsonHeader","method","APIService","authenticate","username","password","a","body","JSON","stringify","fetch","json","url","post","data","put","dataHasID","id","toString","delete","PageHeading","text","useTheme","palette","primary","marginBottom","UnauthorizedMessage","page","runSchedulerSection","schedule","instructors","sections","runScheduler","result","size","length","generateCards","cards","count","option","push","Card","margin","CardContent","assignment_count","assignments","CardActions","IconButton","marginLeft","AssistantPage","useState","unauthorized","setUnauthorized","loaded","setLoaded","changes","setChanges","runningScheduler","setRunningScheduler","solutions","setSolutions","setInstructors","setSections","then","error","console","finally","handleError","message","useEffect","Promise","all","Map","map","obj","data_changed","catch","CircularProgress","Grid","container","alignItems","slice","InstructorForm","props","row","setRow","disciplines","newQualification","setNewQualification","spacing","item","TextField","label","required","inputProps","maxLength","type","value","lastName","onChange","e","target","inputMode","pattern","maxSections","replace","select","minWidth","filter","d","qualifications","findIndex","q","MenuItem","name","concat","xs","qual","Chip","onDelete","x","InstructorDialog","create","open","setOpen","instructorFormData","setInstructorFormData","title","close","Dialog","onClose","fullWidth","maxWidth","DialogTitle","DialogContent","DialogActions","disabled","newRow","log","rowIndex","instructor","instructorsCopy","InstructorListItems","openEditDialog","listItems","ListItem","ListItemText","secondary","ListItemSecondaryAction","edge","i","errors","Divider","InstructorList","selected","setSelected","addOpen","setAddOpen","editOpen","setEditOpen","List","border","button","ListItemIcon","DayAbbrevToValue","SectionForm","classes","setClasses","selectedSection","setSelectedSection","selectedTimeSlot","setSelectedTimeSlot","meetingDays","begin_time","end_time","newTimeSlot","setNewTimeSlot","isNewTimeSlotInvalid","Object","keys","includes","updateSection","section","request","course","meetingTimes","clss","cls","classesCopy","getTimeSlotRows","rows","time","FormControlLabel","control","Radio","event","InputLabelProps","shrink","step","c","timeSlot","timeslot","oldTimeSlot","mt","meetingTimeString","updatedSection","assign","addTimeSlotToSection","find","list","timeSlot_id","ts","removeTimeSlotFromSection","section_id","FormGroup","RadioGroup","parseInt","getSectionList","ClassForm","newDiscipline","setNewDiscipline","textAlign","course_title","course_number","subject_disciplines","marginTop","ClassDialog","setCourses","courseFormData","setCourseFormData","sd","newCourse","courses","crs","coursesCopy","ClassListItems","classesOnCourse","meetingTimeStrings","join","ClassList","SetupPage","setDisciplines","direction","padding","orientation","flexItem","LoginForm","setUsername","setPassword","RegisterForm","accessLevels","setAccessLevel","LoginPage","isLoginForm","setIsLoginForm","accessLevel","marginRight","new_password","contact_email","requested_password","access_level","muiTheme","responsiveFontSizes","createTheme","main","EditAssignmentDialog","setSchedule","sectionOverlapMap","disciplineMap","selectedInstructor","setSelectedInstructor","Array","from","values","newScheduleAssignments","replaceIndex","as","newSchedule","EditSolution","solution","setSolution","editedSolution","setEditedSolution","setSectionOverlapMap","setDisciplineMap","editDialogOpen","setEditDialogOpen","editRow","setEditRow","solution_id","useParams","columns","field","headerName","hide","flex","renderCell","cellValues","isDataPopulated","section_overlap_map","discipline_overlap_map","display","flexDirection","height","assignment","instructor_name","instructor_lastName","getTableData","autoPageSize","styleWrapper","Component","className","path","element","theme","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e621b08.chunk.js","sourcesContent":["import Cookies from 'js-cookie';\n\nconst getToken = () => {\n  return Cookies.get('token');\n};\n\nconst clearToken = () => {\n  Cookies.remove('token');\n};\n\nconst saveToken = (userToken) => {\n  Cookies.set('token', userToken.token);\n};\n\nexport { getToken, clearToken, saveToken };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Link} from \"react-router-dom\";\nimport {clearToken, getToken} from \"../../auth\";\n\nconst logout = () => {\n  clearToken();\n  window.location.reload(false);\n};\n\nconst MainNavbar = () => (\n  <div data-testid=\"MainNavbar\">\n    <AppBar color={\"primary\"}>\n      <Toolbar style={{justifyContent: \"space-evenly\"}}>\n        <Typography variant=\"h2\" style={{width: '75%', fontWeight: \"bolder\", fontStyle: \"italic\"}}>\n          ADTAA\n        </Typography>\n        <Button color={\"default\"} variant={\"contained\"} component={Link} to={'/'}>Assistant</Button>\n        <Button color={\"default\"} variant={\"contained\"} component={Link} to={'/setup'}>Setup</Button>\n        {getToken() ?\n          <Button color={\"default\"} variant={\"contained\"} onClick={logout}>Logout</Button> :\n          <Button color={\"default\"} variant={\"contained\"} component={Link} to={'/login'}>Login</Button>\n        }\n      </Toolbar>\n    </AppBar>\n  </div>\n);\n\nMainNavbar.propTypes = {};\n\nMainNavbar.defaultProps = {};\n\nexport default MainNavbar;\n","export const API_URL = '/api/',\n  URL_DISCIPLINES = `${API_URL}discipline/`,\n  URL_INSTRUCTORS = `${API_URL}instructor/`,\n  URL_TIMESLOT = `${API_URL}timeslot/`,\n  URL_CLASSES = `${API_URL}section/`,\n  URL_COURSES = `${API_URL}course/`,\n  URL_SOLUTIONS = `${API_URL}solution/`,\n  URL_SOLUTION_CONSTRAINT_MAP = `${API_URL}solution/constraintmap/`,\n  URL_AUTH = `${API_URL}auth/token/`,\n  URL_CREATE_REGISTRATION_REQUEST = `${API_URL}registrationrequest/create/`,\n  URL_CHANGE_PASSWORD = `${API_URL}auth/changepassword/`,\n  URL_CHANGES = `${API_URL}changes/`;\n","import {clearToken, getToken} from \"./auth\";\nimport {URL_AUTH, URL_CHANGE_PASSWORD, URL_CREATE_REGISTRATION_REQUEST} from \"./urls\";\n\nfunction catchErrorResponse(response) {\n  if (response.status === 401 && getToken()) {\n    clearToken();\n  }\n\n  if (response.status >= 400 && response.status < 600) {\n    throw new Error(response.status);\n  }\n}\n\nconst injectHeader = (options, ignoreAuth=false) => {\n  let headers = {};\n\n  const addJsonHeader = options.method === 'POST' || options.method === 'PUT';\n  const token = getToken();\n\n  if (!addJsonHeader && !token) {\n    return options;\n  }\n\n  if (addJsonHeader) {\n    headers['Content-Type'] = 'application/json';\n  }\n  if (token && !ignoreAuth) {\n    headers['Authorization'] = `Token ${token}`;\n  }\n  options.headers = headers;\n\n  return options;\n};\n\nconst APIService = {\n  authenticate: async (username, password) => {\n    const options = {method: 'POST', body: JSON.stringify({username: username, password: password})};\n    const response = await fetch(URL_AUTH, injectHeader(options, true));\n    catchErrorResponse(response);\n    return response.json();\n  },\n\n  get: async (url) => {\n    const options = { method: 'GET' };\n    const response = await fetch(url, injectHeader(options));\n    catchErrorResponse(response);\n    return response.json();\n  },\n\n  post: async (url, data, ignoreAuth=false) => {\n    const options = { method: 'POST', body: JSON.stringify(data) };\n    const response = await fetch(url, injectHeader(options, ignoreAuth));\n    catchErrorResponse(response);\n    return response.json();\n  },\n\n  put: async (url, data, dataHasID=true) => {\n    const options = { method: 'PUT', body: JSON.stringify(data) };\n    if (dataHasID) url += data.id.toString();\n    const response = await fetch(url, injectHeader(options));\n    catchErrorResponse(response);\n    return (url === URL_CHANGE_PASSWORD) ? response : response.json();\n  },\n\n  delete: async (url, id) => {\n    const options = { method: 'DELETE' };\n    const response = await fetch(url + id.toString(), injectHeader(options));\n    catchErrorResponse(response);\n    return response;\n  }\n}\n\nexport default APIService;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\n\n\nconst PageHeading = (text, variant='h3') => (\n  <Typography variant={variant} style={{color: useTheme().palette.primary, fontWeight: \"bold\", marginBottom: \"0.5em\"}}>\n    {text}\n  </Typography>\n);\n\n\nconst UnauthorizedMessage = (page='current') => (\n  <Typography>\n    Your account is not authorized to access the {page} page. Only administrators can make changes to this information.\n    If you believe you should have access to this page, please contact an administrator or supervisor to correct this.\n  </Typography>\n);\n\n\nexport { PageHeading, UnauthorizedMessage };\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\"\nimport APIService from \"../../APIService\";\nimport {URL_CHANGES, URL_CLASSES, URL_INSTRUCTORS, URL_SOLUTIONS} from \"../../urls\";\nimport Button from \"@material-ui/core/Button\";\nimport {Link} from \"react-router-dom\";\nimport {PageHeading, UnauthorizedMessage} from \"../Utility/text-styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst runSchedulerSection = (schedule, instructors, sections, runScheduler) => {\n  let result = (<br />);\n\n  if ((instructors.size === 0 || instructors.size == null) || (sections.size === 0 || sections.size == null)) {\n    result = (\n      <>\n        <Typography>Welcome to ADTAA! To get started, classes and instructors must be defined to generate schedules\n          from. Please use the button below to go to the setup page.</Typography>\n        <br />\n        <Button color={\"primary\"} variant={\"contained\"} component={Link} to={'/setup'}>Go to Setup</Button>\n      </>\n    );\n  } else if (schedule.length === 0) {\n    result = (\n      <>\n        <Typography>No solutions have been generated.</Typography>\n        <br />\n        <Button variant={\"contained\"} color={\"primary\"} onClick={runScheduler}>\n          Run Scheduler\n        </Button>\n      </>\n    );\n  }\n\n  return result;\n};\n\nconst generateCards = (schedule) => {\n  let cards = [];\n  let count = 1;\n\n  for (let option of schedule) {\n    cards.push(\n      <Card variant={\"outlined\"} key={option.id} style={{width: '20%', margin: '1em'}}>\n        <CardContent>\n          <Typography>Option {count}</Typography>\n          <Typography>Covered Classes: {option.assignment_count}/{option.assignments.length}</Typography>\n          {/*TODO: Dynamically detect issues*/}\n          <Typography>Issues: None</Typography>\n        </CardContent>\n        <CardActions>\n          <IconButton style={{marginLeft: \"auto\"}} component={Link} to={`/edit/${option.id}`}>\n            <EditIcon />\n          </IconButton>\n        </CardActions>\n      </Card>\n    );\n    count += 1;\n  }\n\n  return cards;\n}\n\nconst AssistantPage = () => {\n  const [unauthorized, setUnauthorized] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  const [changes, setChanges] = useState(false);\n  const [runningScheduler, setRunningScheduler] = useState(false);\n\n  const [solutions, setSolutions] = useState([]);\n  const [instructors, setInstructors] = useState({});\n  const [sections, setSections] = useState({});\n\n  const runScheduler = () => {\n    setLoaded(false);\n    setRunningScheduler(true);\n    setSolutions([]);\n    APIService.post(URL_SOLUTIONS).then((data) => {\n      if (data) {\n        setSolutions(data);\n      }\n    }, (error) => console.error(error)).finally(() => {\n      setLoaded(true);\n      setRunningScheduler(false);\n      setChanges(false);\n    });\n  };\n\n  const handleError = (error) => {\n    if (error.message === '403') {\n      setUnauthorized(true);\n    } else {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    const allPromise = Promise.all([\n      APIService.get(URL_SOLUTIONS), APIService.get(URL_INSTRUCTORS),\n      APIService.get(URL_CLASSES), APIService.get(URL_CHANGES)\n    ]);\n\n    allPromise.then(data => {\n      setSolutions(data[0]);\n      setInstructors(new Map(data[1].map(obj => [obj.id, obj])));\n      setSections(new Map(data[2].map(obj => [obj.id, obj])));\n      setChanges(data[3].data_changed);\n      setLoaded(true);\n    }).catch(handleError);\n  }, []);\n\n  if (unauthorized) {\n    return (\n      <div>\n        {PageHeading('Generated Schedules')}\n        {UnauthorizedMessage('scheduler')}\n      </div>\n    );\n  }\n\n  return (\n    <div data-testid=\"AssistantPage\">\n      {PageHeading('Generated Schedules')}\n      {runningScheduler &&\n      <Typography>Please wait for the scheduler to finish, this step can take several minutes.</Typography>\n      }\n      {(!loaded) ?\n        <CircularProgress /> :\n        runSchedulerSection(solutions, instructors, sections, runScheduler)\n      }\n      {(loaded && changes && solutions.length > 0) &&\n        <Card variant={\"outlined\"} style={{margin: 'auto auto 1rem auto', width: '60%'}}>\n          <CardContent>\n            <Typography>These solutions were generated with data that has been modified, and could be invalid.\n              Click this button to re-run the scheduler!</Typography>\n          </CardContent>\n          <CardActions>\n            <Button variant={\"contained\"} color={\"primary\"} style={{margin: \"auto\"}}\n                    onClick={runScheduler}>Run Scheduler</Button>\n          </CardActions>\n        </Card>\n      }\n      <Grid container alignItems={\"center\"} justifyContent={\"center\"}>\n        {generateCards(solutions.slice(0, 12))}\n      </Grid>\n    </div>\n  );\n}\n\nAssistantPage.propTypes = {};\n\nAssistantPage.defaultProps = {};\n\nexport default AssistantPage;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Chip from \"@material-ui/core/Chip\";\nimport APIService from \"../../../APIService\";\nimport {URL_INSTRUCTORS} from \"../../../urls\";\n\n\nconst InstructorForm = (props) => {\n  const { row, setRow, disciplines } = props;\n  const [newQualification, setNewQualification] = useState('');\n\n  const onLastNameChange = (e) => setRow({...row, lastName: e.target.value});\n  const onMaxSectionsChange = (e) => setRow({...row, maxSections: e.target.value.replace(/[^0-9]/g, '')});\n  const onNewQualificationChange = (e) => setNewQualification(e.target.value);\n  const onAddNewQualification = () => setRow({...row, qualifications: row.qualifications.concat([newQualification])});\n\n  const getDisciplineOptions = () => disciplines.filter(\n    d => row.qualifications.findIndex(q => q.id === d.id) < 0\n  );\n\n  return (\n    <Grid container alignItems={\"center\"} justifyContent={\"center\"} spacing={2}>\n      <Grid item>\n        <TextField id={\"lastNameInput\"} label={\"Last Name\"} required\n                   inputProps={{ maxLength: 30 }} type={\"text\"}\n                   value={row.lastName || ''} onChange={onLastNameChange} />\n      </Grid>\n      <Grid item>\n        <TextField id={\"maxSectionsInput\"} label={\"Max Sections\"} required\n                   inputProps={{ inputMode: 'numeric', pattern: '[0-9]*', maxLength: 2 }} type={\"text\"}\n                   value={row.maxSections || ''} onChange={onMaxSectionsChange} />\n      </Grid>\n      <Grid item>\n        <TextField id={\"qualificationsSelect\"} select label={\"Qualifications\"} style={{minWidth: 150}}\n                   value={newQualification} onChange={onNewQualificationChange}>\n          {getDisciplineOptions().map((option) => (\n            <MenuItem key={option.name} value={option}>\n              {option.name}\n            </MenuItem>\n          ))}\n        </TextField>\n      </Grid>\n      <Grid item>\n        <Button variant={\"contained\"} color={\"default\"} onClick={onAddNewQualification}>Add</Button>\n      </Grid>\n      <Grid item xs={12}>\n        {row.qualifications.map((qual) => (\n          <Chip label={qual.name}\n                onDelete={() => setRow({...row, qualifications: row.qualifications.filter(x => x.id !== qual.id)})} />\n        ))}\n      </Grid>\n    </Grid>\n  );\n}\n\n\nconst InstructorDialog = (props) => {\n  const { create, open, setOpen, row, disciplines, setInstructors } = props;\n  const [instructorFormData, setInstructorFormData] = useState(\n    {lastName: null, maxSections: null, qualifications: []});\n\n  const title = (create) ? 'Create Instructor' : 'Edit Instructor';\n\n  const close = () => setOpen(false);\n\n  const onSubmit = () => {\n    let data = {...instructorFormData, qualifications: instructorFormData.qualifications.map(obj => obj.id)};\n\n    if (create) {\n      APIService.post(URL_INSTRUCTORS, data).then((newRow) => {\n        setInstructors((instructors) => instructors.concat(\n          [{...newRow, qualifications: instructorFormData.qualifications}])\n        );\n        setOpen(false);\n      }, (error) => console.log(error));\n    } else {\n      APIService.put(URL_INSTRUCTORS, data).then(() => {\n        setInstructors((instructors) => {\n          const rowIndex = instructors.findIndex(instructor => instructor.id === instructorFormData.id);\n          const instructorsCopy = instructors.slice(0);\n          instructorsCopy[rowIndex] = instructorFormData;\n          return instructorsCopy;\n        });\n        setOpen(false);\n      }, (error) => console.log(error));\n    }\n  }\n\n  useEffect(() => {\n    if (open && !create) {\n      setInstructorFormData(row);\n    } else if (open && create) {\n      setInstructorFormData({lastName: null, maxSections: null, qualifications: []});\n    }\n  }, [open]);\n\n  return (\n    <div data-testid=\"InstructorDialog\">\n      <Dialog open={open}\n              onClose={close}\n              aria-labelledby=\"instructor-dialog\"\n              fullWidth maxWidth={\"sm\"}>\n        <DialogTitle id=\"instructor-dialog\">{title}</DialogTitle>\n        <DialogContent>\n          <InstructorForm row={instructorFormData} setRow={setInstructorFormData} disciplines={disciplines} />\n        </DialogContent>\n        <DialogActions>\n          <Button variant={\"contained\"} onClick={close} color={\"default\"}>Cancel</Button>\n          <Button variant={\"contained\"} disabled={!instructorFormData.lastName || !instructorFormData.maxSections}\n                  onClick={onSubmit} color={\"primary\"}>Submit</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nInstructorDialog.propTypes = {};\n\nInstructorDialog.defaultProps = {};\n\nexport default InstructorDialog;\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport InstructorDialog from \"../InstructorDialog/InstructorDialog\";\nimport APIService from \"../../../APIService\";\nimport {URL_INSTRUCTORS} from \"../../../urls\";\n\nconst InstructorListItems = (instructors, setInstructors, openEditDialog) => {\n  let listItems = [];\n\n  for (let instructor of instructors) {\n    listItems.push(\n      <ListItem key={instructor.id}>\n        <ListItemText primary={instructor.lastName}\n                      secondary={'Assignment Limit: ' + instructor.maxSections.toString()} />\n        <ListItemSecondaryAction>\n          <IconButton edge={\"end\"} aria-label={\"edit-instructor\"} onClick={() => openEditDialog(instructor)}>\n            <EditIcon />\n          </IconButton>\n          <IconButton edge={\"end\"} aria-label={\"delete-instructor\"}\n                      onClick={() => {\n                        APIService.delete(URL_INSTRUCTORS, instructor.id).then(() => {\n                          setInstructors(instructors.filter(i => i.id !== instructor.id));\n                        }, (errors) => console.error(errors));\n                      }}>\n            <DeleteIcon />\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n    );\n    listItems.push(<Divider key={`divider-${instructor.id}`} />);\n  }\n\n  return listItems;\n};\n\nconst InstructorList = (props) => {\n  const [selected, setSelected] = useState({});\n\n  const [addOpen, setAddOpen] = useState(false);\n  const openAddDialog = () => setAddOpen(true);\n  const [editOpen, setEditOpen] = useState(false);\n  const openEditDialog = (instructor) => {\n    setSelected(instructor);\n    setEditOpen(true);\n  };\n\n  return (\n    <div data-testid=\"InstructorList\">\n      <List style={{border: `1px #0000001f solid`}}>\n        {InstructorListItems(props.instructors, props.setInstructors, openEditDialog)}\n        <ListItem button onClick={openAddDialog} key={'addRow'}>\n          <ListItemIcon><AddIcon /></ListItemIcon>\n          <ListItemText primary={'Add New'} />\n        </ListItem>\n      </List>\n      <InstructorDialog create={true} open={addOpen} setOpen={setAddOpen}\n                        disciplines={props.disciplines} setInstructors={props.setInstructors} />\n      <InstructorDialog open={editOpen} setOpen={setEditOpen} row={selected}\n                        disciplines={props.disciplines} setInstructors={props.setInstructors} />\n    </div>\n  );\n};\n\nInstructorList.propTypes = {};\n\nInstructorList.defaultProps = {};\n\nexport default InstructorList;\n","export const DayAbbrevToValue = {\n  'Mon.': 'Monday', 'Tue.': 'Tuesday', 'Wed.': 'Wednesday', 'Thu.': 'Thursday',\n  'Fri.': 'Friday', 'Sat.': 'Saturday', 'Sun.': 'Sunday'\n};\n\nexport const timeslotToString = (timeslot) => {\n  return `${timeslot.meetingDays} ${timeslot.begin_time.slice(0, -3)}-${timeslot.end_time.slice(0, -3)}`;\n};\n","import React, {useState} from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {DayAbbrevToValue, timeslotToString} from \"../../../constants\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ArrowDropDown from \"@material-ui/icons/ArrowDropDown\";\nimport ArrowRight from \"@material-ui/icons/ArrowRight\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport Button from \"@material-ui/core/Button\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Radio from \"@material-ui/core/Radio\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport APIService from \"../../../APIService\";\nimport {URL_CLASSES, URL_TIMESLOT} from \"../../../urls\";\n\n\nconst SectionForm = (props) => {\n  const { row, classes, setClasses } = props;\n  const [selectedSection, setSelectedSection] = useState(-1);\n  const [selectedTimeSlot, setSelectedTimeSlot] = useState(-1);\n  const [newTimeSlot, setNewTimeSlot] = useState({meetingDays: 'Sun.', begin_time: '', end_time: ''});\n\n  const selectSection = (id) => setSelectedSection(id);\n  const isNewTimeSlotInvalid = () => {\n    return !(Object.keys(DayAbbrevToValue).includes(newTimeSlot.meetingDays)) ||\n      (newTimeSlot.begin_time.length < 5) || (newTimeSlot.end_time.length < 5);\n  };\n\n  const createSection = (timeSlot) => {\n    APIService.post(URL_CLASSES, {course: row.id, meetingTimes: [timeSlot]})\n      .then(data => {\n        console.log(data);\n        console.log(classes);\n        setClasses(clss => clss.concat([data]));\n      }, error => console.error(error));\n  };\n\n  const deleteSection = (section_id) => {\n    APIService.delete(URL_CLASSES, section_id).then(data => {\n      if (section_id === selectedSection) {\n        setSelectedSection(-1);\n      }\n      setClasses(classes.filter(c => c.id !== section_id));\n    }, error => console.error(error));\n  };\n\n  const updateSection = (section) => {\n    const request = {id: section.id, course: section.course.id, meetingTimes: section.meetingTimes};\n    APIService.put(URL_CLASSES, request).then((data) => {\n      setClasses((clss) => {\n        const rowIndex = clss.findIndex(cls => cls.id === section.id);\n        const classesCopy = clss.slice(0);\n        classesCopy[rowIndex] = data;\n        return classesCopy;\n      });\n    }, (error) => console.error(error));\n  };\n\n  const addTimeSlotToSection = (timeSlot, section) => {\n    let updatedSection = Object.assign({}, section);\n    updatedSection.meetingTimes.push(timeSlot);\n    updateSection(updatedSection);\n  };\n\n  const removeTimeSlotFromSection = (timeSlot_id, section) => {\n    let updatedSection = Object.assign({}, section);\n    updatedSection.meetingTimes = updatedSection.meetingTimes.filter(ts => ts.id !== timeSlot_id);\n    updateSection(updatedSection);\n  };\n\n  const updateTimeSlot = (timeSlot) => {\n    APIService.put(URL_TIMESLOT, timeSlot).then(data => {\n      setClasses((clss) => {\n        const rowIndex = clss.findIndex(cls => cls.id === selectedSection);\n        const classesCopy = clss.slice(0);\n        const oldTimeSlot = classesCopy[rowIndex].meetingTimes.findIndex(mt => mt.id === timeSlot.id);\n        classesCopy[rowIndex].meetingTimes[oldTimeSlot] = data;\n        classesCopy[rowIndex].meetingTimeString = timeslotToString(data);\n        return classesCopy;\n      });\n    }, (error) => console.error(error));\n  }\n\n  const getIcon = (id) => {\n    if (selectedSection === id) {\n      return (<ListItemIcon><ArrowRight/></ListItemIcon>);\n    } else {\n      return (<ListItemIcon><ArrowDropDown/></ListItemIcon>);\n    }\n  };\n\n  const getTimeSlotRows = (cls) => {\n    if (cls.id !== selectedSection) return [];\n    let rows = [];\n    for (let time of cls.meetingTimes) {\n      const label = `${time.meetingDays} ${time.begin_time}-${time.end_time}`\n      rows.push((\n        <FormControlLabel key={time.id} value={time.id} label={label} control={<Radio />} />\n      ));\n    }\n    return rows;\n  };\n\n  const getSectionList = () => {\n    let list = [];\n    if (classes) {\n      list = classes.filter(cls => cls.course.id === row.id).map((cls) => (\n        <div key={cls.id}>\n          <ListItem button onClick={() => selectSection(cls.id)}>\n            {getIcon(cls.id)}\n            <ListItemText primary={`Section ${cls.id}`} secondary={`${cls.meetingTimes.length} time slot(s)`} />\n            <ListItemSecondaryAction>\n              <IconButton onClick={() => removeTimeSlotFromSection(selectedTimeSlot, cls)}\n                          disabled={selectedTimeSlot < 0}>\n                <RemoveIcon />\n              </IconButton>\n              <IconButton onClick={() => deleteSection(cls.id)}>\n                <DeleteIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n          <FormGroup>\n            <RadioGroup value={selectedTimeSlot}\n                        onChange={event => setSelectedTimeSlot(parseInt(event.target.value))}>\n              {getTimeSlotRows(cls)}\n            </RadioGroup>\n          </FormGroup>\n        </div>\n      ))\n    }\n    return list;\n  };\n\n  return (\n    <Grid container alignItems={\"center\"} justifyContent={\"center\"} spacing={2}>\n      <Grid item xs={2}>\n        <TextField select label={\"Day\"} style={{minWidth: 60}} value={newTimeSlot.meetingDays}\n                   onChange={event => setNewTimeSlot({...newTimeSlot, meetingDays: event.target.value})}>\n          {Object.keys(DayAbbrevToValue).map((option) => (\n            <MenuItem key={option} value={option}>\n              {option}\n            </MenuItem>\n          ))}\n        </TextField>\n      </Grid>\n      <Grid item xs={4}>\n        <TextField label={\"Begin Time\"} type={\"time\"} value={newTimeSlot.begin_time}\n                   onChange={event => setNewTimeSlot({...newTimeSlot, begin_time: event.target.value})}\n                   InputLabelProps={{shrink: true}} inputProps={{step: 60}} fullWidth />\n      </Grid>\n      <Grid item xs={4}>\n        <TextField label={\"End Time\"} type={\"time\"} value={newTimeSlot.end_time}\n                   onChange={event => setNewTimeSlot({...newTimeSlot, end_time: event.target.value})}\n                   InputLabelProps={{shrink: true}} inputProps={{step: 60}} fullWidth />\n      </Grid>\n      {classes.filter(c => c.course.id === row.id).length > 0 &&\n      <Grid item>\n        <Button variant={\"contained\"} color={\"default\"}\n                disabled={selectedTimeSlot < 0 || isNewTimeSlotInvalid()}\n                onClick={() => updateTimeSlot({...newTimeSlot, id: selectedTimeSlot})}>\n          Change Selected Time\n        </Button>\n        <Button variant={\"contained\"} color={\"default\"}\n                disabled={selectedSection < 0 || isNewTimeSlotInvalid()}\n                onClick={() => addTimeSlotToSection(newTimeSlot, classes.find(c => c.id === selectedSection))}>\n          Add to Selected Section\n        </Button>\n      </Grid>\n      }\n      <Grid item>\n        <Button variant={\"contained\"} color={\"primary\"} disabled={isNewTimeSlotInvalid()}\n                onClick={() => createSection(newTimeSlot)}>Add to New Section</Button>\n      </Grid>\n      <Grid item xs={12}>\n        {getSectionList()}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default SectionForm;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Chip from \"@material-ui/core/Chip\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SectionForm from \"../SectionForm/SectionForm\";\nimport APIService from \"../../../APIService\";\nimport {URL_COURSES, URL_INSTRUCTORS} from \"../../../urls\";\n\n\nconst ClassForm = (props) => {\n  const { row, setRow, classes, setClasses, disciplines, create } = props;\n  const [newDiscipline, setNewDiscipline] = useState('');\n\n  const onNewDisciplineChange = (e) => setNewDiscipline(e.target.value);\n  const getDisciplineOptions = () => disciplines.filter(\n    d => row.subject_disciplines.findIndex(q => q.id === d.id) < 0\n  );\n  const onAddNewDiscipline = () =>\n    setRow({...row, subject_disciplines: row.subject_disciplines.concat([newDiscipline])});\n\n  return (\n    <>\n      <Typography variant={'h6'} style={{textAlign: \"center\"}}>Course</Typography>\n      <Grid container alignItems={\"center\"} justifyContent={\"center\"} spacing={2}>\n        <Grid item>\n          <TextField label={\"Course Title\"} required value={row.course_title || ''}\n                     inputProps={{ maxLength: 55 }} type={\"text\"}\n                     onChange={(e) => setRow({...row, course_title: e.target.value})} />\n        </Grid>\n        <Grid item>\n          <TextField label={\"Course Number\"} required value={row.course_number || ''}\n                     inputProps={{ inputMode: 'numeric', pattern: '[0-9]*', maxLength: 6 }} type={\"text\"}\n                     onChange={(e) => setRow({...row, course_number: e.target.value})}  />\n        </Grid>\n        <Grid item>\n          <TextField select label={\"Subject Disciplines\"} style={{minWidth: 160}}\n                     value={newDiscipline} onChange={onNewDisciplineChange}>\n            {getDisciplineOptions().map((option) => (\n              <MenuItem key={option.name} value={option}>\n                {option.name}\n              </MenuItem>\n            ))}\n          </TextField>\n        </Grid>\n        <Grid item>\n          <Button variant={\"contained\"} color={\"default\"} onClick={onAddNewDiscipline}>Add</Button>\n        </Grid>\n        <Grid item xs={12}>\n          {row.subject_disciplines.map((qual) => (\n            <Chip key={qual.id} label={qual.name} onDelete={() =>\n              setRow({...row, subject_disciplines: row.subject_disciplines.filter(x => x.id !== qual.id)})} />\n          ))}\n        </Grid>\n      </Grid>\n      {!create &&\n        <>\n          <Typography variant={'h6'} style={{textAlign: \"center\", marginTop: \"1rem\"}}>Sections</Typography>\n          <SectionForm row={row} classes={classes} setClasses={setClasses} />\n        </>\n      }\n    </>\n\n  );\n};\n\n\nconst ClassDialog = (props) => {\n  const { create, open, setOpen, row, setCourses, classes, setClasses, disciplines, setSelected, setEditOpen } = props;\n  const [courseFormData, setCourseFormData] = useState(\n    {course_title: '', course_number: null, subject_disciplines: []});\n\n  const title = (create) ? 'Create Class' : 'Edit Class';\n\n  const isCourseFormValid = () => {\n    return !courseFormData.course_title || !courseFormData.course_number;\n  };\n\n  const close = () => setOpen(false);\n\n  const onSubmit = () => {\n    const data = {...courseFormData, subject_disciplines: courseFormData.subject_disciplines.map(sd => sd.id)};\n\n    if (create) {\n      APIService.post(URL_COURSES, data).then((newRow) => {\n        const newCourse = {...newRow, subject_disciplines: courseFormData.subject_disciplines};\n        setCourses(courses => courses.concat([newCourse]));\n        setSelected(newCourse);\n        setOpen(false);\n        setEditOpen(true);\n      }, error => console.error(error));\n    } else {\n      APIService.put(URL_COURSES, data).then((data) => {\n        setCourses(courses => {\n          const rowIndex = courses.findIndex(crs => crs.id === courseFormData.id);\n          const coursesCopy = courses.slice(0);\n          coursesCopy[rowIndex] = courseFormData;\n          return coursesCopy;\n        });\n        setOpen(false);\n      }, error => console.error(error));\n    }\n  };\n\n  useEffect(() => {\n    if (open && !create) {\n      setCourseFormData(row);\n    } else if (open && create) {\n      setCourseFormData({course_title: '', course_number: null, subject_disciplines: []});\n    }\n  }, [open]);\n\n  return (\n    <div data-testid=\"ClassDialog\">\n      <Dialog open={open}\n              onClose={close}\n              aria-labelledby=\"instructor-dialog\"\n              fullWidth maxWidth={\"sm\"}>\n        <DialogTitle id=\"instructor-dialog\">{title}</DialogTitle>\n        <DialogContent>\n          <ClassForm row={courseFormData} setRow={setCourseFormData} classes={classes} setClasses={setClasses}\n                     disciplines={disciplines} create={create} />\n        </DialogContent>\n        <DialogActions>\n          <Button variant={\"contained\"} onClick={close} color={\"default\"}>Cancel</Button>\n          <Button variant={\"contained\"} onClick={onSubmit} color={\"primary\"}\n                  disabled={isCourseFormValid()}>Submit</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nClassDialog.propTypes = {};\n\nClassDialog.defaultProps = {};\n\nexport default ClassDialog;\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport List from \"@material-ui/core/List\";\nimport ClassDialog from \"../ClassDialog/ClassDialog\";\nimport APIService from \"../../../APIService\";\nimport {URL_COURSES} from \"../../../urls\";\n\nconst ClassListItems = (classes, courses, setCourses, openEditDialog) => {\n  let listItems = [];\n\n  for (let course of courses) {\n    const classesOnCourse = classes.filter(cls => cls.course.id === course.id);\n    const meetingTimeStrings = classesOnCourse.map(cls => cls.meetingTimeString);\n    listItems.push(\n      <ListItem key={course.id}>\n        <ListItemText primary={'CPSC ' + course.course_number + ' - ' + course.course_title}\n                      secondary={classesOnCourse.length.toString() + ' Section(s) - ' + meetingTimeStrings.join(' | ')} />\n        <ListItemSecondaryAction>\n          <IconButton edge={\"end\"} onClick={() => openEditDialog(course)}>\n            <EditIcon />\n          </IconButton>\n          <IconButton edge={\"end\"}\n                      onClick={() => {\n                        APIService.delete(URL_COURSES, course.id).then(data => {\n                          setCourses(courses.filter(crs => crs.id !== course.id));\n                        }, error => console.error(error));\n                      }}>\n            <DeleteIcon />\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n    );\n    listItems.push(<Divider key={`divider-${course.id}`} />);\n  }\n\n  return listItems;\n};\n\nconst ClassList = (props) => {\n  const [selected, setSelected] = useState({});\n\n  const [addOpen, setAddOpen] = useState(false);\n  const openAddDialog = () => setAddOpen(true);\n  const [editOpen, setEditOpen] = useState(false);\n  const openEditDialog = (course) => {\n    setSelected(course)\n    setEditOpen(true);\n  };\n\n  return (\n    <div data-testid=\"ClassList\">\n      <List style={{border: `1px #0000001f solid`}}>\n        {ClassListItems(props.classes, props.courses, props.setCourses, openEditDialog)}\n        <ListItem button onClick={openAddDialog} key={'addRow'}>\n          <ListItemIcon><AddIcon /></ListItemIcon>\n          <ListItemText primary={'Add New'} />\n        </ListItem>\n      </List>\n      <ClassDialog create={true} open={addOpen} setOpen={setAddOpen} setCourses={props.setCourses}\n                   disciplines={props.disciplines} setClasses={props.setClasses}\n                   setSelected={setSelected} setEditOpen={setEditOpen}/>\n      <ClassDialog open={editOpen} setOpen={setEditOpen} row={selected} setCourses={props.setCourses}\n                   disciplines={props.disciplines} classes={props.classes} setClasses={props.setClasses} />\n    </div>\n  );\n};\n\nClassList.propTypes = {};\n\nClassList.defaultProps = {};\n\nexport default ClassList;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport InstructorList from \"./InstructorList/InstructorList\";\nimport ClassList from \"./ClassList/ClassList\";\nimport APIService from \"../../APIService\";\nimport {URL_CLASSES, URL_COURSES, URL_DISCIPLINES, URL_INSTRUCTORS} from \"../../urls\";\nimport {PageHeading, UnauthorizedMessage} from \"../Utility/text-styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst SetupPage = () => {\n  const [unauthorized, setUnauthorized] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n\n  const [disciplines, setDisciplines] = useState([]);\n  const [instructors, setInstructors] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [courses, setCourses] = useState([]);\n\n  const handleError = (error) => {\n    if (error.message === '403') {\n      setUnauthorized(true);\n    } else {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    const allPromise = Promise.all([APIService.get(URL_DISCIPLINES), APIService.get(URL_INSTRUCTORS),\n      APIService.get(URL_CLASSES), APIService.get(URL_COURSES)]);\n\n    allPromise.then(data => {\n      setDisciplines(data[0]);\n      setInstructors(data[1]);\n      setClasses(data[2]);\n      setCourses(data[3]);\n      setLoaded(true);\n    }, handleError);\n  }, []);\n\n  if (unauthorized) {\n    return (\n      <div>\n        {PageHeading('Setup Page')}\n        {UnauthorizedMessage('setup')}\n      </div>\n    );\n  }\n\n  return (\n    <div data-testid=\"SetupPage\">\n      <Grid container spacing={2} justifyContent={\"center\"}>\n        <Grid container item xs={5} direction={\"column\"}>\n          {PageHeading('Teaching Staff', 'h4')}\n          <div style={{padding: '1rem 5rem'}}>\n            {(!loaded) ?\n              <CircularProgress /> :\n              <InstructorList instructors={instructors} setInstructors={setInstructors} disciplines={disciplines} />}\n          </div>\n        </Grid>\n        <Divider orientation={\"vertical\"} flexItem />\n        <Grid container item xs={5} direction={\"column\"}>\n          {PageHeading('Class Roster', 'h4')}\n          <div style={{padding: '1rem 5rem'}}>\n            {(!loaded) ?\n              <CircularProgress /> :\n              <ClassList classes={classes} setClasses={setClasses} courses={courses}\n                         setCourses={setCourses} disciplines={disciplines} />}\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nSetupPage.propTypes = {};\n\nSetupPage.defaultProps = {};\n\nexport default SetupPage;\n","import React, {useEffect, useState} from 'react';\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {PageHeading} from \"../Utility/text-styles\";\nimport APIService from \"../../APIService\";\nimport {saveToken} from \"../../auth\";\nimport {URL_CHANGE_PASSWORD, URL_CREATE_REGISTRATION_REQUEST} from \"../../urls\";\n\nconst LoginForm = (setUsername, setPassword) => {\n  return (\n    <>\n      <Grid container alignItems={\"center\"} justifyContent={\"center\"} spacing={2}>\n        <Grid item xs={12}>\n          <TextField required label={\"Email\"} type={\"text\"} onChange={event => setUsername(event.target.value)} />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField required label={\"Password\"} type={\"password\"} onChange={event => setPassword(event.target.value)} />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nconst RegisterForm = (accessLevels, setUsername, setPassword, setAccessLevel) => {\n  return (\n    <>\n      <Grid container alignItems={\"center\"} justifyContent={\"center\"} spacing={2}>\n        <Grid item xs={12}>\n          <TextField required label={\"Email\"} type={\"text\"}\n                     onChange={e => setUsername(e.target.value)} />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField select label={\"Requested Access Level\"} style={{minWidth: 200}}\n                     onChange={e => setAccessLevel(e.target.value)}>\n            {accessLevels.map((option) => (\n              <MenuItem key={option} value={option}>\n                {option}\n              </MenuItem>\n            ))}\n          </TextField>\n        </Grid>\n        <Grid item xs={12}>\n          <TextField required label={\"Requested Password\"} type={\"password\"}\n                     onChange={e => setPassword(e.target.value)} />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nconst LoginPage = (props) => {\n  const theme = useTheme();\n\n  const [isLoginForm, setIsLoginForm] = useState(true);\n  const accessLevels = ['root', 'admin', 'assistant'];\n\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const [accessLevel, setAccessLevel] = useState();\n\n  const onSubmit = () => {\n    if (isLoginForm) {\n      APIService.authenticate(username, password).then((data) => {\n        saveToken(data);\n        window.location.reload(false);\n      }, (error) => {\n        if (error.message === '404') {\n          // This means that this is first user\n          APIService.put(URL_CHANGE_PASSWORD,\n            {username: 'root', password: 'root', new_password: password}, false).then(() => {\n            APIService.authenticate('root', password).then(data => {\n              saveToken(data);\n              window.location.reload(false);\n            }, (error) => console.error(error));\n          }, error => console.error(error));\n        } else {\n          console.error(error);\n        }\n      });\n    } else {\n      APIService.post(URL_CREATE_REGISTRATION_REQUEST,\n        {contact_email: username, requested_password: password, access_level: accessLevel}).then((data) => {\n        console.log(data);\n      }, (error) => console.error(error));\n    }\n  };\n\n  return (\n    <div data-testid=\"LoginPage\">\n      {PageHeading((isLoginForm) ? 'Login' : 'Submit Registration Request')}\n      {(isLoginForm) ?\n        LoginForm(setUsername, setPassword) :\n        RegisterForm(accessLevels, setUsername, setPassword, setAccessLevel)\n      }\n      <Button color={\"primary\"} variant={\"contained\"} style={{marginTop: '2em', marginRight: '1em'}}\n              onClick={onSubmit}>Submit</Button>\n      <Button color={\"default\"} variant={\"contained\"}\n              style={{marginTop: '2em'}}\n              onClick={() => setIsLoginForm(!isLoginForm)}>\n        {(isLoginForm) ? 'Register' : 'Return to Login'}\n      </Button>\n    </div>\n  );\n};\nLoginPage.propTypes = {};\n\nLoginPage.defaultProps = {};\n\nexport default LoginPage;\n","import {createTheme, responsiveFontSizes} from \"@material-ui/core/styles\";\nimport React, {Component} from \"react\";\nimport {MuiThemeProvider} from \"@material-ui/core\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst muiTheme = responsiveFontSizes(createTheme({\n  palette: {\n    primary: {\n      main: '#800000'\n    }\n  }\n}));\n\nexport const styleWrapper = Component => props => {\n  return (\n    <MuiThemeProvider theme={muiTheme}>\n      <CssBaseline />\n      <Component {...props} />\n    </MuiThemeProvider>\n  );\n};\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\n\n\nconst EditAssignmentDialog = (props) => {\n  const { open, setOpen, row, schedule, setSchedule, instructors, sectionOverlapMap, disciplineMap } = props;\n  const [selectedInstructor, setSelectedInstructor] = useState();\n\n  const close = () => setOpen(false);\n\n  const onInstructorSelect = (e) => {\n    setSelectedInstructor(e.target.value);\n  };\n\n  const onSubmit = () => {\n    let newScheduleAssignments = schedule.assignments;\n    const replaceIndex = newScheduleAssignments.findIndex(as => as.id === row.id);\n    newScheduleAssignments[replaceIndex].instructor = selectedInstructor;\n\n    const newSchedule = schedule;\n    schedule.assignments = newScheduleAssignments\n    setSchedule(newSchedule);\n    close();\n  };\n\n  useEffect(() => {\n    if (row != null) {\n      setSelectedInstructor(row.instructor);\n    }\n  }, [row]);\n\n\n  return (\n    <div data-testid=\"EditAssignmentDialog\">\n      <Dialog open={open} onClose={close}\n              fullWidth maxWidth={\"sm\"}>\n        <DialogTitle>Edit Assignment</DialogTitle>\n        <DialogContent>\n          {row != null &&\n            <>\n              <Typography style={{textAlign: \"center\", fontWeight: 'bold'}}>\n                {row.course_number} {row.course_title}</Typography>\n              <Typography style={{textAlign: \"center\"}}>\n                {row.meetingTimeString}</Typography>\n            </>\n          }\n          {instructors.size != null &&\n            <TextField select label={\"Instructor\"} style={{minWidth: 160}}\n                       value={selectedInstructor} onChange={onInstructorSelect}>\n              {Array.from(instructors.values()).map((instructor) => (\n                <MenuItem key={instructor.id} value={instructor.id}>\n                  {instructor.lastName}\n                </MenuItem>\n              ))}\n            </TextField>\n          }\n        </DialogContent>\n        <DialogActions>\n          <Button variant={\"contained\"} onClick={close}>Cancel</Button>\n          <Button variant={\"contained\"} color={\"primary\"}\n                  onClick={onSubmit} disabled={!selectedInstructor}>Submit</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nEditAssignmentDialog.propTypes = {};\n\nEditAssignmentDialog.defaultProps = {};\n\nexport default EditAssignmentDialog;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {PageHeading} from \"../../Utility/text-styles\";\nimport {Link, useParams} from \"react-router-dom\";\nimport APIService from \"../../../APIService\";\nimport {URL_CLASSES, URL_INSTRUCTORS, URL_SOLUTION_CONSTRAINT_MAP, URL_SOLUTIONS} from \"../../../urls\";\nimport {DataGrid} from \"@material-ui/data-grid\";\nimport Button from \"@material-ui/core/Button\";\nimport EditAssignmentDialog from \"./EditAssignmentDialog/EditAssignmentDialog\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\n\nconst EditSolution = () => {\n  const [solution, setSolution] = useState();\n  const [editedSolution, setEditedSolution] = useState();\n  const [instructors, setInstructors] = useState({});\n  const [sections, setSections] = useState({});\n  const [sectionOverlapMap, setSectionOverlapMap] = useState({});\n  const [disciplineMap, setDisciplineMap] = useState({});\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [editRow, setEditRow] = useState();\n\n  const { solution_id } = useParams();\n\n  const columns = [\n    { field: 'id', headerName: 'ID', hide: true},\n    { field: 'course_title', headerName: 'Course', flex: 1},\n    { field: 'course_number', hide: true},\n    { field: 'meetingTimeString', headerName: 'Meeting Times', flex: 3},\n    { field: 'subject_disciplines', headerName: 'Subject Disciplines', hide: true},\n    { field: 'instructor_lastName', headerName: 'Assigned Instructor', flex: 1},\n    { field: 'Edit', renderCell: (cellValues) => {\n        return (\n          <IconButton onClick={() => {\n            setEditRow(cellValues.row);\n            setEditDialogOpen(true);\n          }}>\n            <EditIcon />\n          </IconButton>\n        );\n      }, flex: 0.5},\n  ];\n\n  const getTableData = (assignments) => {\n    let data = [];\n\n    if (sections.size !== 0 && sections.size != null) {\n      for (let assignment of assignments) {\n        const section = sections.get(assignment.section);\n\n        let instructor_name = 'Unassigned';\n        if (assignment.instructor != null) {\n          instructor_name = instructors.get(assignment.instructor).lastName;\n        }\n\n        if (section) {\n          data.push({id: assignment.id, course_title: section.course.course_title,\n            course_number: section.course.course_number, meetingTimeString: section.meetingTimeString,\n            instructor: assignment.instructor, instructor_lastName: instructor_name,\n            subject_disciplines: section.course.subject_disciplines});\n        }\n      }\n    }\n\n    return data;\n  };\n\n  const isDataPopulated = () => (solution != null && instructors.size != null && sections.size != null &&\n    Object.keys(sectionOverlapMap).length !== 0 && Object.keys(disciplineMap).length !== 0);\n\n  useEffect(() => {\n    APIService.get(URL_SOLUTIONS + solution_id.toString()).then((data) => {\n      setSolution(data);\n      setEditedSolution(data);\n    }, (error) => {\n      console.error(error);\n    });\n\n    APIService.get(URL_INSTRUCTORS).then((data) => {\n      setInstructors(new Map(data.map(obj => [obj.id, obj])));\n    }, (error) => {\n      console.error(error);\n    });\n\n    APIService.get(URL_CLASSES).then((data) => {\n      setSections(new Map(data.map(obj => [obj.id, obj])));\n    }, (error) => {\n      console.error(error);\n    });\n\n    APIService.get(URL_SOLUTION_CONSTRAINT_MAP).then((data) => {\n      setSectionOverlapMap(data.section_overlap_map);\n      setDisciplineMap(data.discipline_overlap_map);\n    }, (error) => console.error(error));\n  }, [solution_id]);\n\n\n  return (\n    <div data-testid=\"EditSolution\">\n      <div style={{marginBottom: '0.5rem', display: 'flex', flexDirection: 'row', justifyContent: 'space-between',\n        alignItems: 'flex-end', width: '80vw', marginLeft: 'auto', marginRight: 'auto'}}>\n        <Button variant={\"contained\"} style={{height: '36px'}} component={Link} to={'/'}>Cancel</Button>\n        {PageHeading('Edit Solution')}\n        <Button variant={\"contained\"} style={{height: '36px'}} color={\"primary\"}>Submit</Button>\n      </div>\n      <div style={{height: '80vh', width: '80vw', margin: 'auto'}}>\n        {(isDataPopulated()) ?\n          (<DataGrid rows={getTableData(editedSolution.assignments)} columns={columns} autoPageSize/>)\n          : (<p>Loading</p>)}\n      </div>\n      {isDataPopulated() &&\n        <EditAssignmentDialog open={editDialogOpen} setOpen={setEditDialogOpen} row={editRow} schedule={editedSolution}\n                              setSchedule={setEditedSolution} instructors={instructors}\n                              sectionOverlapMap={sectionOverlapMap} disciplineMap={disciplineMap} />\n      }\n    </div>\n  );\n};\n\nEditSolution.propTypes = {};\n\nEditSolution.defaultProps = {};\n\nexport default EditSolution;\n","import React from \"react\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport MainNavbar from \"./components/MainNavbar/MainNavbar\";\nimport AssistantPage from \"./components/AssistantPage/AssistantPage\";\nimport SetupPage from \"./components/SetupPage/SetupPage\";\nimport LoginPage from \"./components/LoginPage/LoginPage\";\nimport {styleWrapper} from \"./StyleWrapper\";\nimport './App.css'\nimport EditSolution from \"./components/AssistantPage/EditSolution/EditSolution\";\nimport {getToken} from \"./auth\";\n\nfunction App() {\n  return (\n    <>\n      <MainNavbar/>\n      <div className={'content'}>\n        <Routes>\n          <Route path={'/'} element={getToken() ? <AssistantPage /> : <Navigate to={\"/login\"} />} />\n          <Route path={'/edit/:solution_id'} element={getToken() ? <EditSolution /> : <Navigate to={\"/login\"} />} />\n          <Route path={'/setup'} element={getToken() ? <SetupPage /> : <Navigate to={\"/login\"} />} />\n          <Route path={'/login'} element={!getToken() ? <LoginPage /> : <Navigate to={\"/\"} />} />\n        </Routes>\n      </div>\n    </>\n  );\n}\n\nexport default styleWrapper(App);\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}