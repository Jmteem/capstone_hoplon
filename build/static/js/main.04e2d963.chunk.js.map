{"version":3,"sources":["auth.js","components/MainNavbar/MainNavbar.js","urls.js","APIService.js","components/Utility/text-styles.js","components/AssistantPage/AssistantPage.js","components/SetupPage/InstructorDialog/InstructorDialog.js","components/SetupPage/InstructorList/InstructorList.js","constants.js","components/SetupPage/SectionForm/SectionForm.js","components/SetupPage/ClassDialog/ClassDialog.js","components/SetupPage/ClassList/ClassList.js","components/SetupPage/SetupPage.js","components/LoginPage/LoginPage.js","StyleWrapper.js","components/AssistantPage/EditSolution/EditAssignmentDialog/EditAssignmentDialog.js","components/AssistantPage/EditSolution/EditSolution.js","App.js","reportWebVitals.js","index.js"],"names":["getToken","Cookies","get","clearToken","remove","logout","window","location","reload","MainNavbar","AppBar","color","Toolbar","style","justifyContent","Typography","variant","width","fontWeight","fontStyle","Button","component","Link","to","onClick","defaultProps","API_URL","URL_DISCIPLINES","URL_INSTRUCTORS","URL_TIMESLOT","URL_CLASSES","URL_COURSES","URL_SOLUTIONS","URL_SOLUTION_CONSTRAINT_MAP","URL_AUTH","URL_CREATE_REGISTRATION_REQUEST","catchErrorResponse","response","status","Error","injectHeader","options","ignoreAuth","headers","addJsonHeader","method","token","APIService","authenticate","username","password","a","body","JSON","stringify","fetch","json","url","post","data","put","id","toString","delete","PageHeading","text","useTheme","palette","primary","marginBottom","UnauthorizedMessage","page","runSchedulerSection","schedule","instructors","sections","setSolutions","result","size","length","then","error","console","runScheduler","generateCards","cards","count","option","push","Card","margin","CardContent","assignment_count","assignments","CardActions","IconButton","marginLeft","AssistantPage","useState","unauthorized","setUnauthorized","loaded","setLoaded","solutions","setInstructors","setSections","handleError","message","useEffect","Promise","all","Map","map","obj","catch","CircularProgress","Grid","container","alignItems","slice","InstructorForm","props","row","setRow","disciplines","newQualification","setNewQualification","spacing","item","TextField","label","required","inputProps","maxLength","type","value","lastName","onChange","e","target","inputMode","pattern","maxSections","replace","select","minWidth","filter","d","qualifications","findIndex","q","MenuItem","name","concat","xs","qual","Chip","onDelete","x","InstructorDialog","create","open","setOpen","instructorFormData","setInstructorFormData","title","close","Dialog","onClose","fullWidth","maxWidth","DialogTitle","DialogContent","DialogActions","disabled","newRow","log","rowIndex","instructor","instructorsCopy","InstructorListItems","openEditDialog","listItems","ListItem","ListItemText","secondary","ListItemSecondaryAction","edge","i","errors","Divider","InstructorList","selected","setSelected","addOpen","setAddOpen","editOpen","setEditOpen","List","border","button","ListItemIcon","DayAbbrevToValue","SectionForm","classes","setClasses","selectedSection","setSelectedSection","selectedTimeSlot","setSelectedTimeSlot","meetingDays","begin_time","end_time","newTimeSlot","setNewTimeSlot","isNewTimeSlotInvalid","Object","keys","includes","updateSection","section","clss","cls","classesCopy","getTimeSlotRows","rows","meetingTimes","time","FormControlLabel","control","Radio","event","InputLabelProps","shrink","step","c","course","timeSlot","oldTimeSlot","mt","updatedSection","assign","addTimeSlotToSection","find","list","timeSlot_id","ts","removeTimeSlotFromSection","section_id","FormGroup","RadioGroup","parseInt","getSectionList","ClassForm","newDiscipline","setNewDiscipline","textAlign","course_title","course_number","subject_disciplines","marginTop","ClassDialog","setCourses","courseFormData","setCourseFormData","sd","newCourse","courses","crs","coursesCopy","ClassListItems","classesOnCourse","meetingTimeStrings","meetingTimeString","join","ClassList","SetupPage","setDisciplines","direction","padding","orientation","flexItem","LoginForm","setUsername","setPassword","RegisterForm","accessLevels","setAccessLevel","LoginPage","isLoginForm","setIsLoginForm","accessLevel","marginRight","userToken","set","contact_email","requested_password","access_level","muiTheme","responsiveFontSizes","createTheme","main","EditAssignmentDialog","setSchedule","sectionOverlapMap","disciplineMap","selectedInstructor","setSelectedInstructor","Array","from","values","newScheduleAssignments","replaceIndex","as","newSchedule","EditSolution","solution","setSolution","editedSolution","setEditedSolution","setSectionOverlapMap","setDisciplineMap","editDialogOpen","setEditDialogOpen","editRow","setEditRow","solution_id","useParams","columns","field","headerName","hide","flex","renderCell","cellValues","isDataPopulated","section_overlap_map","discipline_overlap_map","display","flexDirection","height","assignment","instructor_name","instructor_lastName","getTableData","autoPageSize","styleWrapper","Component","className","path","element","theme","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04e2d963.chunk.js","sourcesContent":["import Cookies from 'js-cookie';\n\nconst getToken = () => {\n  return Cookies.get('token');\n};\n\nconst clearToken = () => {\n  Cookies.remove('token');\n};\n\nconst saveToken = (userToken) => {\n  Cookies.set('token', userToken.token);\n};\n\nexport { getToken, clearToken, saveToken };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Link} from \"react-router-dom\";\nimport {clearToken, getToken} from \"../../auth\";\n\nconst logout = () => {\n  clearToken();\n  window.location.reload(false);\n};\n\nconst MainNavbar = () => (\n  <div data-testid=\"MainNavbar\">\n    <AppBar color={\"primary\"}>\n      <Toolbar style={{justifyContent: \"space-evenly\"}}>\n        <Typography variant=\"h2\" style={{width: '75%', fontWeight: \"bolder\", fontStyle: \"italic\"}}>\n          ADTAA\n        </Typography>\n        <Button color={\"default\"} variant={\"contained\"} component={Link} to={'/'}>Assistant</Button>\n        <Button color={\"default\"} variant={\"contained\"} component={Link} to={'/setup'}>Setup</Button>\n        {getToken() ?\n          <Button color={\"default\"} variant={\"contained\"} onClick={logout}>Logout</Button> :\n          <Button color={\"default\"} variant={\"contained\"} component={Link} to={'/login'}>Login</Button>\n        }\n      </Toolbar>\n    </AppBar>\n  </div>\n);\n\nMainNavbar.propTypes = {};\n\nMainNavbar.defaultProps = {};\n\nexport default MainNavbar;\n","export const API_URL = '/api/',\n  URL_DISCIPLINES = `${API_URL}discipline/`,\n  URL_INSTRUCTORS = `${API_URL}instructor/`,\n  URL_TIMESLOT = `${API_URL}timeslot/`,\n  URL_CLASSES = `${API_URL}section/`,\n  URL_COURSES = `${API_URL}course/`,\n  URL_SOLUTIONS = `${API_URL}solution/`,\n  URL_SOLUTION_CONSTRAINT_MAP = `${API_URL}solution/constraintmap/`,\n  URL_AUTH = `${API_URL}auth/token/`,\n  URL_CREATE_REGISTRATION_REQUEST = `${API_URL}registrationrequest/create/`;\n","import {clearToken, getToken} from \"./auth\";\nimport {URL_AUTH, URL_CREATE_REGISTRATION_REQUEST} from \"./urls\";\n\nfunction catchErrorResponse(response) {\n  if (response.status === 401 && getToken()) {\n    clearToken();\n  }\n\n  if (response.status >= 400 && response.status < 600) {\n    throw new Error(response.status);\n  }\n}\n\nconst injectHeader = (options, ignoreAuth=false) => {\n  let headers = {};\n\n  const addJsonHeader = options.method === 'POST' || options.method === 'PUT';\n  const token = getToken();\n\n  if (!addJsonHeader && !token) {\n    return options;\n  }\n\n  if (addJsonHeader) {\n    headers['Content-Type'] = 'application/json';\n  }\n  if (token && !ignoreAuth) {\n    headers['Authorization'] = `Token ${token}`;\n  }\n  options.headers = headers;\n\n  return options;\n};\n\nconst APIService = {\n  authenticate: async (username, password) => {\n    const options = {method: 'POST', body: JSON.stringify({username: username, password: password})};\n    const response = await fetch(URL_AUTH, injectHeader(options, true));\n    catchErrorResponse(response);\n    return response.json();\n  },\n\n  get: async (url) => {\n    const options = { method: 'GET' };\n    const response = await fetch(url, injectHeader(options));\n    catchErrorResponse(response);\n    return response.json();\n  },\n\n  post: async (url, data, ignoreAuth=false) => {\n    const options = { method: 'POST', body: JSON.stringify(data) };\n    const response = await fetch(url, injectHeader(options, ignoreAuth));\n    catchErrorResponse(response);\n    return response.json();\n  },\n\n  put: async (url, data) => {\n    const options = { method: 'PUT', body: JSON.stringify(data) };\n    const response = await fetch(url + data.id.toString(), injectHeader(options));\n    catchErrorResponse(response);\n    return response.json();\n  },\n\n  delete: async (url, id) => {\n    const options = { method: 'DELETE' };\n    const response = await fetch(url + id.toString(), injectHeader(options));\n    catchErrorResponse(response);\n    return response;\n  }\n}\n\nexport default APIService;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\n\n\nconst PageHeading = (text, variant='h3') => (\n  <Typography variant={variant} style={{color: useTheme().palette.primary, fontWeight: \"bold\", marginBottom: \"0.5em\"}}>\n    {text}\n  </Typography>\n);\n\n\nconst UnauthorizedMessage = (page='current') => (\n  <Typography>\n    Your account is not authorized to access the {page} page. Only administrators can make changes to this information.\n    If you believe you should have access to this page, please contact an administrator or supervisor to correct this.\n  </Typography>\n);\n\n\nexport { PageHeading, UnauthorizedMessage };\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\"\nimport APIService from \"../../APIService\";\nimport {URL_CLASSES, URL_INSTRUCTORS, URL_SOLUTIONS} from \"../../urls\";\nimport Button from \"@material-ui/core/Button\";\nimport {Link} from \"react-router-dom\";\nimport {PageHeading, UnauthorizedMessage} from \"../Utility/text-styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst runScheduler = (setSolutions) => {\n  APIService.post(URL_SOLUTIONS).then((data) => {\n    if (data) {\n      setSolutions(data);\n    }\n  }, (error) => console.error(error));\n};\n\nconst runSchedulerSection = (schedule, instructors, sections, setSolutions) => {\n  let result = (<br />);\n\n  if ((instructors.size === 0 || instructors.size == null) || (sections.size === 0 || sections.size == null)) {\n    result = (\n      <>\n        <Typography>Welcome to ADTAA! To get started, classes and instructors must be defined to generate schedules\n          from. Please use the button below to go to the setup page.</Typography>\n        <br />\n        <Button color={\"primary\"} variant={\"contained\"} component={Link} to={'/setup'}>Go to Setup</Button>\n      </>\n    );\n  } else if (schedule.length === 0) {\n    result = (\n      <>\n        <Typography>No solutions have been generated.</Typography>\n        <br />\n        <Button variant={\"contained\"} color={\"primary\"} onClick={() => runScheduler(setSolutions)}>\n          Run Scheduler\n        </Button>\n      </>\n    );\n  }\n\n  return result;\n};\n\nconst generateCards = (schedule) => {\n  let cards = [];\n  let count = 1;\n\n  for (let option of schedule) {\n    cards.push(\n      <Card variant={\"outlined\"} key={option.id} style={{width: '20%', margin: '1em'}}>\n        <CardContent>\n          <Typography>Option {count}</Typography>\n          <Typography>Covered Classes: {option.assignment_count}/{option.assignments.length}</Typography>\n          {/*TODO: Dynamically detect issues*/}\n          <Typography>Issues: None</Typography>\n        </CardContent>\n        <CardActions>\n          <IconButton style={{marginLeft: \"auto\"}} component={Link} to={`/edit/${option.id}`}>\n            <EditIcon />\n          </IconButton>\n        </CardActions>\n      </Card>\n    );\n    count += 1;\n  }\n\n  return cards;\n}\n\nconst AssistantPage = () => {\n  const [unauthorized, setUnauthorized] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n\n  const [solutions, setSolutions] = useState([]);\n  const [instructors, setInstructors] = useState({});\n  const [sections, setSections] = useState({});\n\n  const handleError = (error) => {\n    if (error.message === '403') {\n      setUnauthorized(true);\n    } else {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    const allPromise = Promise.all(\n      [APIService.get(URL_SOLUTIONS), APIService.get(URL_INSTRUCTORS), APIService.get(URL_CLASSES)]);\n\n    allPromise.then(data => {\n      setSolutions(data[0]);\n      setInstructors(new Map(data[1].map(obj => [obj.id, obj])));\n      setSections(new Map(data[2].map(obj => [obj.id, obj])));\n      setLoaded(true);\n    }).catch(handleError);\n  }, []);\n\n  if (unauthorized) {\n    return (\n      <div>\n        {PageHeading('Generated Schedules')}\n        {UnauthorizedMessage('scheduler')}\n      </div>\n    );\n  }\n\n  return (\n    <div data-testid=\"AssistantPage\">\n      {PageHeading('Generated Schedules')}\n      {(!loaded) ?\n        <CircularProgress /> :\n        runSchedulerSection(solutions, instructors, sections, setSolutions)\n      }\n      <Grid container alignItems={\"center\"} justifyContent={\"center\"}>\n        {generateCards(solutions.slice(0, 12))}\n      </Grid>\n    </div>\n  );\n}\n\nAssistantPage.propTypes = {};\n\nAssistantPage.defaultProps = {};\n\nexport default AssistantPage;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Chip from \"@material-ui/core/Chip\";\nimport APIService from \"../../../APIService\";\nimport {URL_INSTRUCTORS} from \"../../../urls\";\n\n\nconst InstructorForm = (props) => {\n  const { row, setRow, disciplines } = props;\n  const [newQualification, setNewQualification] = useState('');\n\n  const onLastNameChange = (e) => setRow({...row, lastName: e.target.value});\n  const onMaxSectionsChange = (e) => setRow({...row, maxSections: e.target.value.replace(/[^0-9]/g, '')});\n  const onNewQualificationChange = (e) => setNewQualification(e.target.value);\n  const onAddNewQualification = () => setRow({...row, qualifications: row.qualifications.concat([newQualification])});\n\n  const getDisciplineOptions = () => disciplines.filter(\n    d => row.qualifications.findIndex(q => q.id === d.id) < 0\n  );\n\n  return (\n    <Grid container alignItems={\"center\"} justifyContent={\"center\"} spacing={2}>\n      <Grid item>\n        <TextField id={\"lastNameInput\"} label={\"Last Name\"} required\n                   inputProps={{ maxLength: 30 }} type={\"text\"}\n                   value={row.lastName || ''} onChange={onLastNameChange} />\n      </Grid>\n      <Grid item>\n        <TextField id={\"maxSectionsInput\"} label={\"Max Sections\"} required\n                   inputProps={{ inputMode: 'numeric', pattern: '[0-9]*', maxLength: 2 }} type={\"text\"}\n                   value={row.maxSections || ''} onChange={onMaxSectionsChange} />\n      </Grid>\n      <Grid item>\n        <TextField id={\"qualificationsSelect\"} select label={\"Qualifications\"} style={{minWidth: 150}}\n                   value={newQualification} onChange={onNewQualificationChange}>\n          {getDisciplineOptions().map((option) => (\n            <MenuItem key={option.name} value={option}>\n              {option.name}\n            </MenuItem>\n          ))}\n        </TextField>\n      </Grid>\n      <Grid item>\n        <Button variant={\"contained\"} color={\"default\"} onClick={onAddNewQualification}>Add</Button>\n      </Grid>\n      <Grid item xs={12}>\n        {row.qualifications.map((qual) => (\n          <Chip label={qual.name}\n                onDelete={() => setRow({...row, qualifications: row.qualifications.filter(x => x.id !== qual.id)})} />\n        ))}\n      </Grid>\n    </Grid>\n  );\n}\n\n\nconst InstructorDialog = (props) => {\n  const { create, open, setOpen, row, disciplines, setInstructors } = props;\n  const [instructorFormData, setInstructorFormData] = useState(\n    {lastName: null, maxSections: null, qualifications: []});\n\n  const title = (create) ? 'Create Instructor' : 'Edit Instructor';\n\n  const close = () => setOpen(false);\n\n  const onSubmit = () => {\n    let data = {...instructorFormData, qualifications: instructorFormData.qualifications.map(obj => obj.id)};\n\n    if (create) {\n      APIService.post(URL_INSTRUCTORS, data).then((newRow) => {\n        setInstructors((instructors) => instructors.concat(\n          [{...newRow, qualifications: instructorFormData.qualifications}])\n        );\n        setOpen(false);\n      }, (error) => console.log(error));\n    } else {\n      APIService.put(URL_INSTRUCTORS, data).then(() => {\n        setInstructors((instructors) => {\n          const rowIndex = instructors.findIndex(instructor => instructor.id === instructorFormData.id);\n          const instructorsCopy = instructors.slice(0);\n          instructorsCopy[rowIndex] = instructorFormData;\n          return instructorsCopy;\n        });\n        setOpen(false);\n      }, (error) => console.log(error));\n    }\n  }\n\n  useEffect(() => {\n    if (open && !create) {\n      setInstructorFormData(row);\n    } else if (open && create) {\n      setInstructorFormData({lastName: null, maxSections: null, qualifications: []});\n    }\n  }, [open]);\n\n  return (\n    <div data-testid=\"InstructorDialog\">\n      <Dialog open={open}\n              onClose={close}\n              aria-labelledby=\"instructor-dialog\"\n              fullWidth maxWidth={\"sm\"}>\n        <DialogTitle id=\"instructor-dialog\">{title}</DialogTitle>\n        <DialogContent>\n          <InstructorForm row={instructorFormData} setRow={setInstructorFormData} disciplines={disciplines} />\n        </DialogContent>\n        <DialogActions>\n          <Button variant={\"contained\"} onClick={close} color={\"default\"}>Cancel</Button>\n          <Button variant={\"contained\"} disabled={!instructorFormData.lastName || !instructorFormData.maxSections}\n                  onClick={onSubmit} color={\"primary\"}>Submit</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nInstructorDialog.propTypes = {};\n\nInstructorDialog.defaultProps = {};\n\nexport default InstructorDialog;\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport InstructorDialog from \"../InstructorDialog/InstructorDialog\";\nimport APIService from \"../../../APIService\";\nimport {URL_INSTRUCTORS} from \"../../../urls\";\n\nconst InstructorListItems = (instructors, setInstructors, openEditDialog) => {\n  let listItems = [];\n\n  for (let instructor of instructors) {\n    listItems.push(\n      <ListItem>\n        <ListItemText primary={instructor.lastName}\n                      secondary={'Assignment Limit: ' + instructor.maxSections.toString()} />\n        <ListItemSecondaryAction>\n          <IconButton edge={\"end\"} aria-label={\"edit-instructor\"} onClick={() => openEditDialog(instructor)}>\n            <EditIcon />\n          </IconButton>\n          <IconButton edge={\"end\"} aria-label={\"delete-instructor\"}\n                      onClick={() => {\n                        APIService.delete(URL_INSTRUCTORS, instructor.id).then(() => {\n                          setInstructors(instructors.filter(i => i.id !== instructor.id));\n                        }, (errors) => console.error(errors));\n                      }}>\n            <DeleteIcon />\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n    );\n    listItems.push(<Divider />);\n  }\n\n  return listItems;\n};\n\nconst InstructorList = (props) => {\n  const [selected, setSelected] = useState({});\n\n  const [addOpen, setAddOpen] = useState(false);\n  const openAddDialog = () => setAddOpen(true);\n  const [editOpen, setEditOpen] = useState(false);\n  const openEditDialog = (instructor) => {\n    setSelected(instructor);\n    setEditOpen(true);\n  };\n\n  return (\n    <div data-testid=\"InstructorList\">\n      <List style={{border: `1px #0000001f solid`}}>\n        {InstructorListItems(props.instructors, props.setInstructors, openEditDialog)}\n        <ListItem button onClick={openAddDialog}>\n          <ListItemIcon><AddIcon /></ListItemIcon>\n          <ListItemText primary={'Add New'} />\n        </ListItem>\n      </List>\n      <InstructorDialog create={true} open={addOpen} setOpen={setAddOpen}\n                        disciplines={props.disciplines} setInstructors={props.setInstructors} />\n      <InstructorDialog open={editOpen} setOpen={setEditOpen} row={selected}\n                        disciplines={props.disciplines} setInstructors={props.setInstructors} />\n    </div>\n  );\n};\n\nInstructorList.propTypes = {};\n\nInstructorList.defaultProps = {};\n\nexport default InstructorList;\n","export const DayAbbrevToValue = {\n  'Mon.': 'Monday', 'Tue.': 'Tuesday', 'Wed.': 'Wednesday', 'Thu.': 'Thursday',\n  'Fri.': 'Friday', 'Sat.': 'Saturday', 'Sun.': 'Sunday'\n};\n","import React, {useState} from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {DayAbbrevToValue} from \"../../../constants\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ArrowDropDown from \"@material-ui/icons/ArrowDropDown\";\nimport ArrowRight from \"@material-ui/icons/ArrowRight\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport Button from \"@material-ui/core/Button\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Radio from \"@material-ui/core/Radio\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport APIService from \"../../../APIService\";\nimport {URL_CLASSES, URL_TIMESLOT} from \"../../../urls\";\n\n\nconst SectionForm = (props) => {\n  const { row, classes, setClasses } = props;\n  const [selectedSection, setSelectedSection] = useState(-1);\n  const [selectedTimeSlot, setSelectedTimeSlot] = useState(-1);\n  const [newTimeSlot, setNewTimeSlot] = useState({meetingDays: 'Sun.', begin_time: '', end_time: ''});\n\n  const selectSection = (id) => setSelectedSection(id);\n  const isNewTimeSlotInvalid = () => {\n    return !(Object.keys(DayAbbrevToValue).includes(newTimeSlot.meetingDays)) ||\n      (newTimeSlot.begin_time.length < 5) || (newTimeSlot.end_time.length < 5);\n  };\n\n  const createSection = (timeSlot) => {\n    APIService.post(URL_CLASSES, {course: row.id, meetingTimes: [timeSlot]})\n      .then(data => {\n        setClasses(clss => clss.concat([data]));\n      }, error => console.error(error));\n  };\n\n  const deleteSection = (section_id) => {\n    APIService.delete(URL_CLASSES, section_id).then(data => {\n      if (section_id === selectedSection) {\n        setSelectedSection(-1);\n      }\n      setClasses(classes.filter(c => c.id !== section_id));\n    }, error => console.error(error));\n  };\n\n  const updateSection = (section) => {\n    APIService.put(URL_CLASSES, section).then((data) => {\n      setClasses((clss) => {\n        const rowIndex = clss.findIndex(cls => cls.id === section.id);\n        const classesCopy = clss.slice(0);\n        classesCopy[rowIndex] = data;\n        return classesCopy;\n      });\n    }, (error) => console.error(error));\n  };\n\n  const addTimeSlotToSection = (timeSlot, section) => {\n    let updatedSection = Object.assign({}, section);\n    updatedSection.meetingTimes.push(timeSlot);\n    updateSection(updatedSection);\n  };\n\n  const removeTimeSlotFromSection = (timeSlot_id, section) => {\n    let updatedSection = Object.assign({}, section);\n    updatedSection.meetingTimes = updatedSection.meetingTimes.filter(ts => ts.id !== timeSlot_id);\n    updateSection(updatedSection);\n  };\n\n  const updateTimeSlot = (timeSlot) => {\n    APIService.put(URL_TIMESLOT, timeSlot).then(data => {\n      setClasses((clss) => {\n        const rowIndex = clss.findIndex(cls => cls.id === selectedSection);\n        const classesCopy = clss.slice(0);\n        const oldTimeSlot = classesCopy[rowIndex].meetingTimes.findIndex(mt => mt.id === timeSlot.id);\n        classesCopy[rowIndex].meetingTimes[oldTimeSlot] = data;\n        return classesCopy;\n      });\n    }, (error) => console.error(error));\n  }\n\n  const getIcon = (id) => {\n    if (selectedSection === id) {\n      return (<ListItemIcon><ArrowRight/></ListItemIcon>);\n    } else {\n      return (<ListItemIcon><ArrowDropDown/></ListItemIcon>);\n    }\n  };\n\n  const getTimeSlotRows = (cls) => {\n    if (cls.id !== selectedSection) return [];\n    let rows = [];\n    for (let time of cls.meetingTimes) {\n      const label = `${time.meetingDays} ${time.begin_time}-${time.end_time}`\n      rows.push((\n        <FormControlLabel value={time.id} label={label} control={<Radio />} />\n      ));\n    }\n    return rows;\n  };\n\n  const getSectionList = () => {\n    let list = [];\n    if (classes) {\n      list = classes.filter(cls => cls.course.id === row.id).map((cls) => (\n        <>\n          <ListItem button onClick={() => selectSection(cls.id)}>\n            {getIcon(cls.id)}\n            <ListItemText primary={`Section ${cls.id}`} secondary={`${cls.meetingTimes.length} time slot(s)`} />\n            <ListItemSecondaryAction>\n              <IconButton onClick={() => removeTimeSlotFromSection(selectedTimeSlot, cls)}\n                          disabled={selectedTimeSlot < 0}>\n                <RemoveIcon />\n              </IconButton>\n              <IconButton onClick={() => deleteSection(cls.id)}>\n                <DeleteIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n          <FormGroup>\n            <RadioGroup value={selectedTimeSlot}\n                        onChange={event => setSelectedTimeSlot(parseInt(event.target.value))}>\n              {getTimeSlotRows(cls)}\n            </RadioGroup>\n          </FormGroup>\n        </>\n      ))\n    }\n    return list;\n  };\n\n  return (\n    <Grid container alignItems={\"center\"} justifyContent={\"center\"} spacing={2}>\n      <Grid item xs={2}>\n        <TextField select label={\"Day\"} style={{minWidth: 60}} value={newTimeSlot.meetingDays}\n                   onChange={event => setNewTimeSlot({...newTimeSlot, meetingDays: event.target.value})}>\n          {Object.keys(DayAbbrevToValue).map((option) => (\n            <MenuItem key={option} value={option}>\n              {option}\n            </MenuItem>\n          ))}\n        </TextField>\n      </Grid>\n      <Grid item xs={4}>\n        <TextField label={\"Begin Time\"} type={\"time\"} value={newTimeSlot.begin_time}\n                   onChange={event => setNewTimeSlot({...newTimeSlot, begin_time: event.target.value})}\n                   InputLabelProps={{shrink: true}} inputProps={{step: 60}} fullWidth />\n      </Grid>\n      <Grid item xs={4}>\n        <TextField label={\"End Time\"} type={\"time\"} value={newTimeSlot.end_time}\n                   onChange={event => setNewTimeSlot({...newTimeSlot, end_time: event.target.value})}\n                   InputLabelProps={{shrink: true}} inputProps={{step: 60}} fullWidth />\n      </Grid>\n      {classes.filter(c => c.course.id === row.id).length > 0 &&\n      <Grid item>\n        <Button variant={\"contained\"} color={\"default\"}\n                disabled={selectedTimeSlot < 0 || isNewTimeSlotInvalid()}\n                onClick={() => updateTimeSlot({...newTimeSlot, id: selectedTimeSlot})}>\n          Change Selected Time\n        </Button>\n        <Button variant={\"contained\"} color={\"default\"}\n                disabled={selectedSection < 0 || isNewTimeSlotInvalid()}\n                onClick={() => addTimeSlotToSection(newTimeSlot, classes.find(c => c.id === selectedSection))}>\n          Add to Selected Section\n        </Button>\n      </Grid>\n      }\n      <Grid item>\n        <Button variant={\"contained\"} color={\"primary\"} disabled={isNewTimeSlotInvalid()}\n                onClick={() => createSection(newTimeSlot)}>Add to New Section</Button>\n      </Grid>\n      <Grid item xs={12}>\n        {getSectionList()}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default SectionForm;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Chip from \"@material-ui/core/Chip\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SectionForm from \"../SectionForm/SectionForm\";\nimport APIService from \"../../../APIService\";\nimport {URL_COURSES, URL_INSTRUCTORS} from \"../../../urls\";\n\n\nconst ClassForm = (props) => {\n  const { row, setRow, classes, setClasses, disciplines, create } = props;\n  const [newDiscipline, setNewDiscipline] = useState('');\n\n  const onNewDisciplineChange = (e) => setNewDiscipline(e.target.value);\n  const getDisciplineOptions = () => disciplines.filter(\n    d => row.subject_disciplines.findIndex(q => q.id === d.id) < 0\n  );\n  const onAddNewDiscipline = () =>\n    setRow({...row, subject_disciplines: row.subject_disciplines.concat([newDiscipline])});\n\n  return (\n    <>\n      <Typography variant={'h6'} style={{textAlign: \"center\"}}>Course</Typography>\n      <Grid container alignItems={\"center\"} justifyContent={\"center\"} spacing={2}>\n        <Grid item>\n          <TextField label={\"Course Title\"} required value={row.course_title || ''}\n                     inputProps={{ maxLength: 55 }} type={\"text\"}\n                     onChange={(e) => setRow({...row, course_title: e.target.value})} />\n        </Grid>\n        <Grid item>\n          <TextField label={\"Course Number\"} required value={row.course_number || ''}\n                     inputProps={{ inputMode: 'numeric', pattern: '[0-9]*', maxLength: 6 }} type={\"text\"}\n                     onChange={(e) => setRow({...row, course_number: e.target.value})}  />\n        </Grid>\n        <Grid item>\n          <TextField select label={\"Subject Disciplines\"} style={{minWidth: 160}}\n                     value={newDiscipline} onChange={onNewDisciplineChange}>\n            {getDisciplineOptions().map((option) => (\n              <MenuItem key={option.name} value={option}>\n                {option.name}\n              </MenuItem>\n            ))}\n          </TextField>\n        </Grid>\n        <Grid item>\n          <Button variant={\"contained\"} color={\"default\"} onClick={onAddNewDiscipline}>Add</Button>\n        </Grid>\n        <Grid item xs={12}>\n          {row.subject_disciplines.map((qual) => (\n            <Chip label={qual.name} onDelete={() =>\n              setRow({...row, subject_disciplines: row.subject_disciplines.filter(x => x.id !== qual.id)})} />\n          ))}\n        </Grid>\n      </Grid>\n      {!create &&\n        <>\n          <Typography variant={'h6'} style={{textAlign: \"center\", marginTop: \"1rem\"}}>Sections</Typography>\n          <SectionForm row={row} classes={classes} setClasses={setClasses} />\n        </>\n      }\n    </>\n\n  );\n};\n\n\nconst ClassDialog = (props) => {\n  const { create, open, setOpen, row, setCourses, classes, setClasses, disciplines, setSelected, setEditOpen } = props;\n  const [courseFormData, setCourseFormData] = useState(\n    {course_title: '', course_number: null, subject_disciplines: []});\n\n  const title = (create) ? 'Create Class' : 'Edit Class';\n\n  const isCourseFormValid = () => {\n    return !courseFormData.course_title || !courseFormData.course_number;\n  };\n\n  const close = () => setOpen(false);\n\n  const onSubmit = () => {\n    const data = {...courseFormData, subject_disciplines: courseFormData.subject_disciplines.map(sd => sd.id)};\n\n    if (create) {\n      APIService.post(URL_COURSES, data).then((newRow) => {\n        const newCourse = {...newRow, subject_disciplines: courseFormData.subject_disciplines};\n        setCourses(courses => courses.concat([newCourse]));\n        setSelected(newCourse);\n        setOpen(false);\n        setEditOpen(true);\n      }, error => console.error(error));\n    } else {\n      APIService.put(URL_COURSES, data).then((data) => {\n        setCourses(courses => {\n          const rowIndex = courses.findIndex(crs => crs.id === courseFormData.id);\n          const coursesCopy = courses.slice(0);\n          coursesCopy[rowIndex] = courseFormData;\n          return coursesCopy;\n        });\n        setOpen(false);\n      }, error => console.error(error));\n    }\n  };\n\n  useEffect(() => {\n    if (open && !create) {\n      setCourseFormData(row);\n    } else if (open && create) {\n      setCourseFormData({course_title: '', course_number: null, subject_disciplines: []});\n    }\n  }, [open]);\n\n  return (\n    <div data-testid=\"ClassDialog\">\n      <Dialog open={open}\n              onClose={close}\n              aria-labelledby=\"instructor-dialog\"\n              fullWidth maxWidth={\"sm\"}>\n        <DialogTitle id=\"instructor-dialog\">{title}</DialogTitle>\n        <DialogContent>\n          <ClassForm row={courseFormData} setRow={setCourseFormData} classes={classes} setClasses={setClasses}\n                     disciplines={disciplines} create={create} />\n        </DialogContent>\n        <DialogActions>\n          <Button variant={\"contained\"} onClick={close} color={\"default\"}>Cancel</Button>\n          <Button variant={\"contained\"} onClick={onSubmit} color={\"primary\"}\n                  disabled={isCourseFormValid()}>Submit</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nClassDialog.propTypes = {};\n\nClassDialog.defaultProps = {};\n\nexport default ClassDialog;\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport List from \"@material-ui/core/List\";\nimport ClassDialog from \"../ClassDialog/ClassDialog\";\nimport APIService from \"../../../APIService\";\nimport {URL_COURSES} from \"../../../urls\";\n\nconst ClassListItems = (classes, courses, setCourses, openEditDialog) => {\n  let listItems = [];\n\n  for (let course of courses) {\n    const classesOnCourse = classes.filter(cls => cls.course === course.id);\n    const meetingTimeStrings = classesOnCourse.map(cls => cls.meetingTimeString);\n    listItems.push(\n      <ListItem>\n        <ListItemText primary={'CPSC ' + course.course_number + ' - ' + course.course_title}\n                      secondary={classesOnCourse.length.toString() + ' Section(s) - ' + meetingTimeStrings.join('; ')} />\n        <ListItemSecondaryAction>\n          <IconButton edge={\"end\"} onClick={() => openEditDialog(course)}>\n            <EditIcon />\n          </IconButton>\n          <IconButton edge={\"end\"}\n                      onClick={() => {\n                        APIService.delete(URL_COURSES, course.id).then(data => {\n                          setCourses(courses.filter(crs => crs.id !== course.id));\n                        }, error => console.error(error));\n                      }}>\n            <DeleteIcon />\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n    );\n    listItems.push(<Divider />);\n  }\n\n  return listItems;\n};\n\nconst ClassList = (props) => {\n  const [selected, setSelected] = useState({});\n\n  const [addOpen, setAddOpen] = useState(false);\n  const openAddDialog = () => setAddOpen(true);\n  const [editOpen, setEditOpen] = useState(false);\n  const openEditDialog = (course) => {\n    setSelected(course)\n    setEditOpen(true);\n  };\n\n  return (\n    <div data-testid=\"ClassList\">\n      <List style={{border: `1px #0000001f solid`}}>\n        {ClassListItems(props.classes, props.courses, props.setCourses, openEditDialog)}\n        <ListItem button onClick={openAddDialog}>\n          <ListItemIcon><AddIcon /></ListItemIcon>\n          <ListItemText primary={'Add New'} />\n        </ListItem>\n      </List>\n      <ClassDialog create={true} open={addOpen} setOpen={setAddOpen} setCourses={props.setCourses}\n                   disciplines={props.disciplines} setClasses={props.setClasses}\n                   setSelected={setSelected} setEditOpen={setEditOpen}/>\n      <ClassDialog open={editOpen} setOpen={setEditOpen} row={selected} setCourses={props.setCourses}\n                   disciplines={props.disciplines} classes={props.classes} setClasses={props.setClasses} />\n    </div>\n  );\n};\n\nClassList.propTypes = {};\n\nClassList.defaultProps = {};\n\nexport default ClassList;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport InstructorList from \"./InstructorList/InstructorList\";\nimport ClassList from \"./ClassList/ClassList\";\nimport APIService from \"../../APIService\";\nimport {URL_CLASSES, URL_COURSES, URL_DISCIPLINES, URL_INSTRUCTORS} from \"../../urls\";\nimport {PageHeading, UnauthorizedMessage} from \"../Utility/text-styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst SetupPage = () => {\n  const [unauthorized, setUnauthorized] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n\n  const [disciplines, setDisciplines] = useState([]);\n  const [instructors, setInstructors] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [courses, setCourses] = useState([]);\n\n  const handleError = (error) => {\n    if (error.message === '403') {\n      setUnauthorized(true);\n    } else {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    const allPromise = Promise.all([APIService.get(URL_DISCIPLINES), APIService.get(URL_INSTRUCTORS),\n      APIService.get(URL_CLASSES), APIService.get(URL_COURSES)]);\n\n    allPromise.then(data => {\n      setDisciplines(data[0]);\n      setInstructors(data[1]);\n      setClasses(data[2]);\n      setCourses(data[3]);\n      setLoaded(true);\n    }, handleError);\n  }, []);\n\n  if (unauthorized) {\n    return (\n      <div>\n        {PageHeading('Setup Page')}\n        {UnauthorizedMessage('setup')}\n      </div>\n    );\n  }\n\n  return (\n    <div data-testid=\"SetupPage\">\n      <Grid container spacing={2} justifyContent={\"center\"}>\n        <Grid container item xs={5} direction={\"column\"}>\n          {PageHeading('Teaching Staff', 'h4')}\n          <div style={{padding: '1rem 5rem'}}>\n            {(!loaded) ?\n              <CircularProgress /> :\n              <InstructorList instructors={instructors} setInstructors={setInstructors} disciplines={disciplines} />}\n          </div>\n        </Grid>\n        <Divider orientation={\"vertical\"} flexItem />\n        <Grid container item xs={5} direction={\"column\"}>\n          {PageHeading('Class Roster', 'h4')}\n          <div style={{padding: '1rem 5rem'}}>\n            {(!loaded) ?\n              <CircularProgress /> :\n              <ClassList classes={classes} setClasses={setClasses} courses={courses}\n                         setCourses={setCourses} disciplines={disciplines} />}\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nSetupPage.propTypes = {};\n\nSetupPage.defaultProps = {};\n\nexport default SetupPage;\n","import React, {useEffect, useState} from 'react';\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {PageHeading} from \"../Utility/text-styles\";\nimport APIService from \"../../APIService\";\nimport {saveToken} from \"../../auth\";\nimport {URL_CREATE_REGISTRATION_REQUEST} from \"../../urls\";\n\nconst LoginForm = (setUsername, setPassword) => {\n  return (\n    <>\n      <Grid container alignItems={\"center\"} justifyContent={\"center\"} spacing={2}>\n        <Grid item xs={12}>\n          <TextField required label={\"Email\"} type={\"text\"} onChange={event => setUsername(event.target.value)} />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField required label={\"Password\"} type={\"password\"} onChange={event => setPassword(event.target.value)} />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nconst RegisterForm = (accessLevels, setUsername, setPassword, setAccessLevel) => {\n  return (\n    <>\n      <Grid container alignItems={\"center\"} justifyContent={\"center\"} spacing={2}>\n        <Grid item xs={12}>\n          <TextField required label={\"Email\"} type={\"text\"}\n                     onChange={e => setUsername(e.target.value)} />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField select label={\"Requested Access Level\"} style={{minWidth: 200}}\n                     onChange={e => setAccessLevel(e.target.value)}>\n            {accessLevels.map((option) => (\n              <MenuItem key={option} value={option}>\n                {option}\n              </MenuItem>\n            ))}\n          </TextField>\n        </Grid>\n        <Grid item xs={12}>\n          <TextField required label={\"Requested Password\"} type={\"password\"}\n                     onChange={e => setPassword(e.target.value)} />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nconst LoginPage = (props) => {\n  const theme = useTheme();\n\n  const [isLoginForm, setIsLoginForm] = useState(true);\n  const accessLevels = ['root', 'admin', 'assistant'];\n\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const [accessLevel, setAccessLevel] = useState();\n\n  const onSubmit = () => {\n    if (isLoginForm) {\n      APIService.authenticate(username, password).then((data) => {\n        saveToken(data);\n        window.location.reload(false);\n      }, (error) => console.error(error));\n    } else {\n      APIService.post(URL_CREATE_REGISTRATION_REQUEST,\n        {contact_email: username, requested_password: password, access_level: accessLevel}).then((data) => {\n        console.log(data);\n      }, (error) => console.error(error));\n    }\n  };\n\n  return (\n    <div data-testid=\"LoginPage\">\n      {PageHeading((isLoginForm) ? 'Login' : 'Submit Registration Request')}\n      {(isLoginForm) ?\n        LoginForm(setUsername, setPassword) :\n        RegisterForm(accessLevels, setUsername, setPassword, setAccessLevel)\n      }\n      <Button color={\"primary\"} variant={\"contained\"} style={{marginTop: '2em', marginRight: '1em'}}\n              onClick={onSubmit}>Submit</Button>\n      <Button color={\"default\"} variant={\"contained\"}\n              style={{marginTop: '2em'}}\n              onClick={() => setIsLoginForm(!isLoginForm)}>\n        {(isLoginForm) ? 'Register' : 'Return to Login'}\n      </Button>\n    </div>\n  );\n};\nLoginPage.propTypes = {};\n\nLoginPage.defaultProps = {};\n\nexport default LoginPage;\n","import {createTheme, responsiveFontSizes} from \"@material-ui/core/styles\";\nimport React, {Component} from \"react\";\nimport {MuiThemeProvider} from \"@material-ui/core\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst muiTheme = responsiveFontSizes(createTheme({\n  palette: {\n    primary: {\n      main: '#800000'\n    }\n  }\n}));\n\nexport const styleWrapper = Component => props => {\n  return (\n    <MuiThemeProvider theme={muiTheme}>\n      <CssBaseline />\n      <Component {...props} />\n    </MuiThemeProvider>\n  );\n};\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\n\n\nconst EditAssignmentDialog = (props) => {\n  const { open, setOpen, row, schedule, setSchedule, instructors, sectionOverlapMap, disciplineMap } = props;\n  const [selectedInstructor, setSelectedInstructor] = useState();\n\n  const close = () => setOpen(false);\n\n  const onInstructorSelect = (e) => {\n    setSelectedInstructor(e.target.value);\n  };\n\n  const onSubmit = () => {\n    let newScheduleAssignments = schedule.assignments;\n    const replaceIndex = newScheduleAssignments.findIndex(as => as.id === row.id);\n    newScheduleAssignments[replaceIndex].instructor = selectedInstructor;\n\n    const newSchedule = schedule;\n    schedule.assignments = newScheduleAssignments\n    setSchedule(newSchedule);\n    close();\n  };\n\n  useEffect(() => {\n    if (row != null) {\n      setSelectedInstructor(row.instructor);\n    }\n  }, [row]);\n\n\n  return (\n    <div data-testid=\"EditAssignmentDialog\">\n      <Dialog open={open} onClose={close}\n              fullWidth maxWidth={\"sm\"}>\n        <DialogTitle>Edit Assignment</DialogTitle>\n        <DialogContent>\n          {row != null &&\n            <>\n              <Typography style={{textAlign: \"center\", fontWeight: 'bold'}}>\n                {row.course_number} {row.course_title}</Typography>\n              <Typography style={{textAlign: \"center\"}}>\n                {row.meetingTimeString}</Typography>\n            </>\n          }\n          {instructors.size != null &&\n            <TextField select label={\"Instructor\"} style={{minWidth: 160}}\n                       value={selectedInstructor} onChange={onInstructorSelect}>\n              {Array.from(instructors.values()).map((instructor) => (\n                <MenuItem key={instructor.id} value={instructor.id}>\n                  {instructor.lastName}\n                </MenuItem>\n              ))}\n            </TextField>\n          }\n        </DialogContent>\n        <DialogActions>\n          <Button variant={\"contained\"} onClick={close}>Cancel</Button>\n          <Button variant={\"contained\"} color={\"primary\"}\n                  onClick={onSubmit} disabled={!selectedInstructor}>Submit</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nEditAssignmentDialog.propTypes = {};\n\nEditAssignmentDialog.defaultProps = {};\n\nexport default EditAssignmentDialog;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {PageHeading} from \"../../Utility/text-styles\";\nimport {Link, useParams} from \"react-router-dom\";\nimport APIService from \"../../../APIService\";\nimport {URL_CLASSES, URL_INSTRUCTORS, URL_SOLUTION_CONSTRAINT_MAP, URL_SOLUTIONS} from \"../../../urls\";\nimport {DataGrid} from \"@material-ui/data-grid\";\nimport Button from \"@material-ui/core/Button\";\nimport EditAssignmentDialog from \"./EditAssignmentDialog/EditAssignmentDialog\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\n\nconst EditSolution = () => {\n  const [solution, setSolution] = useState();\n  const [editedSolution, setEditedSolution] = useState();\n  const [instructors, setInstructors] = useState({});\n  const [sections, setSections] = useState({});\n  const [sectionOverlapMap, setSectionOverlapMap] = useState({});\n  const [disciplineMap, setDisciplineMap] = useState({});\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [editRow, setEditRow] = useState();\n\n  const { solution_id } = useParams();\n\n  const columns = [\n    { field: 'id', headerName: 'ID', hide: true},\n    { field: 'course_title', headerName: 'Course', flex: 1},\n    { field: 'course_number', hide: true},\n    { field: 'meetingTimeString', headerName: 'Meeting Times', flex: 3},\n    { field: 'subject_disciplines', headerName: 'Subject Disciplines', hide: true},\n    { field: 'instructor_lastName', headerName: 'Assigned Instructor', flex: 1},\n    { field: 'Edit', renderCell: (cellValues) => {\n        return (\n          <IconButton onClick={() => {\n            setEditRow(cellValues.row);\n            setEditDialogOpen(true);\n          }}>\n            <EditIcon />\n          </IconButton>\n        );\n      }, flex: 0.5},\n  ];\n\n  const getTableData = (assignments) => {\n    let data = [];\n\n    if (sections.size !== 0 && sections.size != null) {\n      for (let assignment of assignments) {\n        const section = sections.get(assignment.section);\n\n        let instructor_name = 'Unassigned';\n        if (assignment.instructor != null) {\n          instructor_name = instructors.get(assignment.instructor).lastName;\n        }\n\n        if (section) {\n          data.push({id: assignment.id, course_title: section.course.course_title,\n            course_number: section.course.course_number, meetingTimeString: section.meetingTimeString,\n            instructor: assignment.instructor, instructor_lastName: instructor_name,\n            subject_disciplines: section.course.subject_disciplines});\n        }\n      }\n    }\n\n    return data;\n  };\n\n  const isDataPopulated = () => (solution != null && instructors.size != null && sections.size != null &&\n    Object.keys(sectionOverlapMap).length !== 0 && Object.keys(disciplineMap).length !== 0);\n\n  useEffect(() => {\n    APIService.get(URL_SOLUTIONS + solution_id.toString()).then((data) => {\n      setSolution(data);\n      setEditedSolution(data);\n    }, (error) => {\n      console.error(error);\n    });\n\n    APIService.get(URL_INSTRUCTORS).then((data) => {\n      setInstructors(new Map(data.map(obj => [obj.id, obj])));\n    }, (error) => {\n      console.error(error);\n    });\n\n    APIService.get(URL_CLASSES).then((data) => {\n      setSections(new Map(data.map(obj => [obj.id, obj])));\n    }, (error) => {\n      console.error(error);\n    });\n\n    APIService.get(URL_SOLUTION_CONSTRAINT_MAP).then((data) => {\n      setSectionOverlapMap(data.section_overlap_map);\n      setDisciplineMap(data.discipline_overlap_map);\n    }, (error) => console.error(error));\n  }, [solution_id]);\n\n\n  return (\n    <div data-testid=\"EditSolution\">\n      <div style={{marginBottom: '0.5rem', display: 'flex', flexDirection: 'row', justifyContent: 'space-between',\n        alignItems: 'flex-end', width: '80vw', marginLeft: 'auto', marginRight: 'auto'}}>\n        <Button variant={\"contained\"} style={{height: '36px'}} component={Link} to={'/'}>Cancel</Button>\n        {PageHeading('Edit Solution')}\n        <Button variant={\"contained\"} style={{height: '36px'}} color={\"primary\"}>Submit</Button>\n      </div>\n      <div style={{height: '80vh', width: '80vw', margin: 'auto'}}>\n        {(isDataPopulated()) ?\n          (<DataGrid rows={getTableData(editedSolution.assignments)} columns={columns} autoPageSize/>)\n          : (<p>Loading</p>)}\n      </div>\n      {isDataPopulated() &&\n        <EditAssignmentDialog open={editDialogOpen} setOpen={setEditDialogOpen} row={editRow} schedule={editedSolution}\n                              setSchedule={setEditedSolution} instructors={instructors}\n                              sectionOverlapMap={sectionOverlapMap} disciplineMap={disciplineMap} />\n      }\n    </div>\n  );\n};\n\nEditSolution.propTypes = {};\n\nEditSolution.defaultProps = {};\n\nexport default EditSolution;\n","import React from \"react\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport MainNavbar from \"./components/MainNavbar/MainNavbar\";\nimport AssistantPage from \"./components/AssistantPage/AssistantPage\";\nimport SetupPage from \"./components/SetupPage/SetupPage\";\nimport LoginPage from \"./components/LoginPage/LoginPage\";\nimport {styleWrapper} from \"./StyleWrapper\";\nimport './App.css'\nimport EditSolution from \"./components/AssistantPage/EditSolution/EditSolution\";\nimport {getToken} from \"./auth\";\n\nfunction App() {\n  return (\n    <>\n      <MainNavbar/>\n      <div className={'content'}>\n        <Routes>\n          <Route path={'/'} element={getToken() ? <AssistantPage /> : <Navigate to={\"/login\"} />} />\n          <Route path={'/edit/:solution_id'} element={getToken() ? <EditSolution /> : <Navigate to={\"/login\"} />} />\n          <Route path={'/setup'} element={getToken() ? <SetupPage /> : <Navigate to={\"/login\"} />} />\n          <Route path={'/login'} element={!getToken() ? <LoginPage /> : <Navigate to={\"/\"} />} />\n        </Routes>\n      </div>\n    </>\n  );\n}\n\nexport default styleWrapper(App);\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}